name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  summarize-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Generate changelog.txt from Git
        id: generate_changelog
        run: |
          # Get the latest tag or fallback to the initial commit
          LAST_TAG=$(git describe --tags --abbrev=0 || echo $(git rev-list --max-parents=0 HEAD))

          # Extract commits between the latest tag and HEAD
          git log $LAST_TAG..HEAD --pretty=format:"- %s by %an" > changelog.txt

          echo "Generated changelog.txt:"
          cat changelog.txt

      - name: Extract PR titles and important lines
        id: parse_changelog
        run: |
          REPO_URL="https://github.com/openintegrations/openint"
          OUTPUT=$(awk -v repo="$REPO_URL" '
          /^- PR #[0-9]+:/ {
              match($0, /^- PR #([0-9]+):/, pr);
              pr_title = $0;
              pr_link = repo "/pull/" pr[1];
          }
          /> \[!IMPORTANT\]/ {
              getline;
              important_line = $0;
              print pr_title " (" pr_link ") -- " important_line;
          }' changelog.txt | jq -Rsa .)
          echo "parsed_content=$OUTPUT" >> $GITHUB_ENV

      - name: Summarize PR changes with OpenAI
        id: summarize
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$(jq -n --arg changelog "$parsed_content" '{
              model: "gpt-4",
              messages: [
                {role: "system", content: "You are an assistant that generates concise and clear release summaries for software projects."},
                {role: "user", content: ("Summarize the following PR changes into a single two-liner summary highlighting important changes:\n\n" + $changelog)}
              ],
              temperature: 0.7
            }')")
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "No summary generated"')
          echo "summary=$SUMMARY" >> $GITHUB_ENV

      - name: Create release notes
        id: create_notes
        run: |
          echo -e "### Summary\n\n$SUMMARY\n\n### BREAKDOWN:\n\n$parsed_content" > release_notes.txt

      - name: Print release notes
        run: |
          cat release_notes.txt

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v$(date +'%Y%m%d%H%M')" --title "Automated Release Notes" --notes-file release_notes.txt
