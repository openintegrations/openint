name: Validate (parallel)

on:
  push:
    branches: [main, production]
  pull_request:
  workflow_dispatch:

concurrency:
  group: validate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

  no-new-generated-files:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to compare with production branch
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run generate
        ## development so that it generates the OAS based on the local elysia app and not in a circular dependency with stainless
        ## check out the generateDocsOas.bin.cjs file for more details
        run: NODE_ENV=development pnpm generate
      # - name: Setup upterm session
      #   if: always()
      #   uses: lhotari/action-upterm@v1
      - name: Check for changes after generate
        run: |
          # Check if there are any changes in the entire repo after running generate
          CHANGES=$(git status --porcelain)

          if [ ! -z "$CHANGES" ]; then
            echo "::error::Found uncommitted changes after running 'pnpm generate'. This means either:"
            echo "::error::1. You modified generated files manually instead of using 'pnpm generate', or"
            echo "::error::2. You forgot to run 'pnpm generate' after changing source files"
            echo "::error::"
            echo "::error::The following files are not in sync:"
            git status
            echo "::error::"
            echo "::error::To fix this:"
            echo "::error::1. Run 'pnpm generate' locally"
            echo "::error::2. See the diffs, performs any checks and tests manually and if you're happy with them add them to the PR, commit & push the changes"
            echo "::error::3. Here's the diff of the changes:"
            git diff
            exit 1
          fi

  typecheck:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

      # - name: Setup upterm session
      #   if: always()
      #   uses: lhotari/action-upterm@v1

      - name: Run type checks
        run: pnpm run typecheck

  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run lint
        run: pnpm run lint --quiet
        env:
          NODE_OPTIONS: --max-old-space-size=8192

  tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      neon-proxy:
        image: ghcr.io/timowilhelm/local-neon-http-proxy:main
        env:
          PG_CONNECTION_STRING: postgres://postgres:password@postgres:5432/postgres
        ports:
          - '4444:4444'
    env:
      NODE_OPTIONS: --max-old-space-size=8192
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      DATABASE_URL: postgres://postgres:password@db.localtest.me:5432/postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Download environment variables
        run: |
          npm install --global vercel@latest
          vercel link --token $VERCEL_TOKEN --scope openint-dev --project v1 --yes
          vercel env pull --token $VERCEL_TOKEN ./apps/web/.env.local.orig
          cat ./apps/web/.env.local.orig | pnpm --silent bun scripts/escape-env.ts > ./apps/web/.env.local
      - name: Run migrations
        run: |
          pnpm migrate
      - name: Start dev servers
        run: |
          pnpm run web --port 4000 &
          pnpm wait-on tcp:4000
          npx inngest-cli@latest dev &
          pnpm wait-on tcp:8288
      - name: Run tests
        run: ./bin/shdotenv -q -e ./apps/web/.env.local pnpm run jest::ci

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: ./artifacts

  storybook:
    runs-on: ubuntu-latest
    needs: install-dependencies
    timeout-minutes: 5
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need more than 1 commit https://www.chromatic.com/docs/github-actions/
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Download environment variables
        run: |
          npm install --global vercel@latest
          vercel link --token $VERCEL_TOKEN --scope openint-dev --project v1 --yes
          vercel env pull --token $VERCEL_TOKEN ./apps/web/.env.local.orig
          cat ./apps/web/.env.local.orig | pnpm --silent bun scripts/escape-env.ts > ./apps/web/.env.local

      - name: Build css file
        run: pnpm --dir packages/ui-v1 build-tailwind

      - name: Publish to chromatic
        uses: chromaui/action@latest
        with:
          # TODO: Figure out if we can pass this via env file above or has to be stored separately
          # in github secrets
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/ui-v1
          onlyChanged: true
          exitZeroOnChanges: true
          autoAcceptChanges: main

  # slack-notification:
  #   runs-on: ubuntu-latest
  #   needs: [typecheck, lint, tests]
  #   if: always()
  #   steps:
  #     - name: Send Slack notification
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLATIFY_SLACK_WEBHOOK_URL }}
