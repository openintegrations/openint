@import 'tailwindcss';

@plugin 'tailwindcss-animate';
@plugin 'tailwindcss-radix';

/* Upstream components */
@source "../shadcn/components/**/*.tsx";
@source "../shadcn/ui/**/*.tsx";
@source "../shadcn/__stories__/**/*.tsx";

/* Current components */
@source "./components/**/*.tsx";
@source "./domain-components/**/*.tsx";
@source "./navigation/**/*.tsx";

/* Downstream components */
/*
Bit weird dependency-wise, once we only have tailwind v4 consider
having a global.css file in apps/web and import this file instead.
*/
/* Should be kept in sync with .storybook/main.ts file */
@source "../ui/command/**/*.tsx";
@source "../ui/components/**/*.tsx";
@source "../ui/domain-components/**/*.tsx";
@source "../ui/hooks/**/*.tsx";
@source "../ui/shadcn/**/*.tsx";
@source "../ui/stories/**/*.tsx";
@source "../engine-frontend/components/**/*.tsx";
@source "../../apps/web/app/**/*.tsx";
@source "../../apps/web/components/**/*.tsx";
@source "../../apps/web/lib-client/**/*.tsx";
@source "../../apps/web/lib-common/**/*.tsx";
@source "../../apps/web/lib-server/**/*.tsx";
@source "../../apps/web/vcommands/**/*.tsx";
/* Migrate schema form once we make sure it is good */
/* @import '../ui/schema-form.css'; */

/* Global styles */

@custom-variant dark (&:is(.dark *));

/*

TODO: Introduce a way for users to define a simplied set of variables
that will then be used to generate the full set of variables.

:simplied {
  --primary: oklch(0.205 0 0);
  --accent: oklch(0.97 0 0);
  --background: oklch(1 0 0);
}
*/

:root {
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --destructive-foreground: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --radius: 0.625rem;
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.145 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.145 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.985 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.396 0.141 25.723);
  --destructive-foreground: oklch(0.637 0.237 25.331);
  --border: oklch(0.269 0 0);
  --input: oklch(0.269 0 0);
  --ring: oklch(0.439 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(0.269 0 0);
  --sidebar-ring: oklch(0.439 0 0);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@layer base {
  * {
    @apply outline-ring/50 border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* TODO: Copied from schema-form.css, import does not work for whatever eason */

@layer components {
  /* Aka sections */
  .schema-form fieldset > legend {
    /* Display block doesn't work for some reason. Does not fill parent width which is still a div, not sure why */
    @apply mb-3 w-full border-b pb-1 text-xl font-semibold;
  }
  .schema-form fieldset > div {
    /* Offset to indicate hierarchy */
  }
  .schema-form fieldset#root {
    /* Compensate so the root form is not indented */
  }
  /* Label + component = group */
  .schema-form .form-group {
    @apply mb-2;
  }
  /* Tend to be used for object fields */
  .schema-form .panel {
    @apply rounded border border-gray-300 p-4 shadow;
  }
  .schema-form label.control-label {
    @apply mb-1 block font-bold;
  }
  .schema-form p.field-description {
    @apply mb-1;
  }
  /* Select component, and maybe other .form-control too */
  .schema-form .form-control {
    @apply block w-full rounded-md border border-input p-2;
  }
  /* Input component */
  .schema-form input[type='text'] {
    @apply flex h-10 w-full rounded-lg border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50;
  }

  /* Select component */
  .schema-form select {
    @apply flex h-10 w-full rounded-lg border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50;
  }

  /* .schema-form .checkbox label {
    @apply
  } */
  .schema-form input[type='checkbox'] {
    @apply m-2;
  }

  /* Array elements */
  .schema-form .array-item {
    /* @apply grid grid-cols-12; */
    @apply flex flex-row items-end gap-4;
  }
  .schema-form .array-item .col-xs-9 {
    /* @apply col-span-9; */
    @apply grow;
  }
  .schema-form .array-item .col-xs-3 {
    /* @apply col-span-3; */
    @apply shrink-0;
  }
  .schema-form .array-item .array-item-toolbox {
    /* mb-4 to match .form-group */
    @apply mb-4 flex items-center justify-end;
  }
  /* Icons, @see https://rjsf-team.github.io/react-jsonschema-form/docs/advanced-customization/internals#custom-array-field-buttons */
  .schema-form .glyphicon {
    @apply font-normal not-italic;
  }
  .schema-form .glyphicon-plus::before {
    content: 'Add';
  }
  .schema-form .glyphicon-remove::before {
    content: 'Remove';
  }
  .schema-form .glyphicon-copy::before {
    content: 'Copy';
  }
  .schema-form .glyphicon-arrow-up::before {
    content: 'Up';
  }
  .schema-form .glyphicon-arrow-down::before {
    content: 'Down';
  }
  /* Buttons (tends to be icon buttons */
  .schema-form .btn {
    @apply mx-1 rounded-md border p-2;
  }
  .schema-form .btn-danger {
    @apply w-[80px] border-red-200 bg-red-500 text-white transition-colors duration-200 hover:bg-red-400;
  }
  .schema-form .btn-add {
    @apply w-[80px] border-blue-200;
  }
  .schema-form button[type='submit'].btn {
    @apply inline-flex items-center justify-center bg-primary px-4 text-primary-foreground hover:bg-primary hover:opacity-90;
  }

  /* Loading state */
  .schema-form.loading button[type='submit'].btn::before {
    @apply mr-2 inline-block h-4 w-4 animate-spin bg-primary-foreground;
    content: ' ';
    /* https://github.com/lucide-icons/lucide/blob/main/icons/loader-2.svg */
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M21 12a9 9 0 1 1-6.219-8.56' /%3E%3C/svg%3E");
    mask-size: contain;
  }

  /* Readonly state */
  .schema-form input:read-only {
    @apply opacity-50;
  }
  /* Disabled state */
  .schema-form button:disabled,
  .schema-form input:disabled {
    @apply cursor-not-allowed opacity-50;
  }
  /* Hide extraneous label for select option @see https://share.cleanshot.com/Gqw0mrTZ */
  .form-group:has(> select) + .field > fieldset > legend {
    display: none;
  }
  .form-group:has(> select) + .field > label {
    display: none;
  }

  .schema-form input[type='number'] {
    @apply flex h-10 w-full rounded-lg border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50;
  }
}
