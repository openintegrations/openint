// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`db: pglite list connectors with schemas 1`] = `
[
  {
    "authType": "OAUTH2",
    "display_name": "Acme Oauth2",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-acme-oauth2.svg",
    "name": "acme-oauth2",
    "openint_scopes": [
      "read:profile",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Read profile information",
        "scope": "read:profile",
      },
      {
        "description": "Read posts",
        "scope": "write:posts",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Aircall (OAuth)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-aircall.svg",
    "name": "aircall",
    "openint_scopes": [
      "contacts.read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides access to public API endpoints, typically read-only access to non-sensitive data.",
        "scope": "public_api",
      },
      {
        "description": "Allows read-only access to user information such as names, emails, and basic profile data.",
        "scope": "users.read",
      },
      {
        "description": "Provides read-only access to call data including call logs, durations, and participants.",
        "scope": "calls.read",
      },
      {
        "description": "Allows read-only access to contact information in the Aircall directory.",
        "scope": "contacts.read",
      },
      {
        "description": "Provides read-only access to phone number information associated with the account.",
        "scope": "numbers.read",
      },
      {
        "description": "Allows creating and modifying calls, including initiating new calls and updating call statuses.",
        "scope": "calls.write",
      },
      {
        "description": "Provides full access to user data, including creating, updating, and deleting user accounts.",
        "scope": "users.write",
      },
      {
        "description": "Grants full administrative access to all account features and data, including sensitive operations.",
        "scope": "admin",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Airtable",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-airtable.svg",
    "name": "airtable",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "airtableBase": {
            "type": "string",
          },
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
          "airtableBase",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "airtableBase": {
            "type": "string",
          },
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
          "airtableBase",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Apollo",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-apollo.svg",
    "name": "apollo",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "components": {
          "schemas": {
            "AuthMode": {
              "enum": [
                "OAUTH2",
                "OAUTH1",
                "BASIC",
                "API_KEY",
              ],
              "type": "string",
            },
          },
        },
        "properties": {
          "error": {
            "properties": {
              "code": {
                "anyOf": [
                  {
                    "enum": [
                      "refresh_token_external_error",
                    ],
                    "type": "string",
                  },
                  {
                    "type": "string",
                  },
                ],
              },
              "message": {
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "code",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "oauth": {
            "properties": {
              "connection_config": {
                "additionalProperties": {},
                "properties": {
                  "instance_url": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "portalId": {
                    "type": [
                      "number",
                      "null",
                    ],
                  },
                },
                "type": [
                  "object",
                  "null",
                ],
              },
              "credentials": {
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "api_key": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "expires_at": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "raw": {
                    "additionalProperties": true,
                    "properties": {
                      "access_token": {
                        "type": "string",
                      },
                      "expires_at": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "expires_in": {
                        "type": "number",
                      },
                      "refresh_token": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "refresh_token_expires_in": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "scope": {
                        "type": "string",
                      },
                      "token_type": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "access_token",
                    ],
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "type": {
                    "$ref": "#/components/schemas/AuthMode",
                  },
                },
                "required": [
                  "type",
                  "raw",
                ],
                "type": "object",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
            },
            "required": [
              "credentials",
              "metadata",
            ],
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connection_settings": {
        "components": {
          "schemas": {
            "AuthMode": {
              "enum": [
                "OAUTH2",
                "OAUTH1",
                "BASIC",
                "API_KEY",
              ],
              "type": "string",
            },
          },
        },
        "properties": {
          "error": {
            "properties": {
              "code": {
                "anyOf": [
                  {
                    "enum": [
                      "refresh_token_external_error",
                    ],
                    "type": "string",
                  },
                  {
                    "type": "string",
                  },
                ],
              },
              "message": {
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "code",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "oauth": {
            "properties": {
              "connection_config": {
                "additionalProperties": {},
                "properties": {
                  "instance_url": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "portalId": {
                    "type": [
                      "number",
                      "null",
                    ],
                  },
                },
                "type": [
                  "object",
                  "null",
                ],
              },
              "credentials": {
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "api_key": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "expires_at": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "raw": {
                    "additionalProperties": true,
                    "properties": {
                      "access_token": {
                        "type": "string",
                      },
                      "expires_at": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "expires_in": {
                        "type": "number",
                      },
                      "refresh_token": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "refresh_token_expires_in": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "scope": {
                        "type": "string",
                      },
                      "token_type": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "access_token",
                    ],
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "type": {
                    "$ref": "#/components/schemas/AuthMode",
                  },
                },
                "required": [
                  "type",
                  "raw",
                ],
                "type": "object",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
            },
            "required": [
              "credentials",
              "metadata",
            ],
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Brex",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-brex.svg",
    "name": "brex",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "apikeyAuth": {
            "description": "API key auth support",
            "type": "boolean",
          },
          "oauth": {
            "anyOf": [
              {
                "description": "No oauth",
                "type": "null",
              },
              {
                "description": "Configure oauth",
                "properties": {
                  "clientId": {
                    "type": "string",
                  },
                  "clientSecret": {
                    "type": "string",
                  },
                },
                "required": [
                  "clientId",
                  "clientSecret",
                ],
                "type": "object",
              },
            ],
            "description": "Oauth support",
          },
        },
        "type": "object",
      },
      "integration_data": {},
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Coda",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-coda.svg",
    "name": "coda",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Confluence",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-confluence.svg",
    "name": "confluence",
    "openint_scopes": [
      "read:confluence-user",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to Confluence content including pages, blog posts, and attachments",
        "scope": "read:confluence-content",
      },
      {
        "description": "Provides read and write access to Confluence content including creating, updating, and deleting pages, blog posts, and attachments",
        "scope": "write:confluence-content",
      },
      {
        "description": "Grants read-only access to space information and metadata",
        "scope": "read:confluence-space",
      },
      {
        "description": "Provides read-only access to basic user profile information",
        "scope": "read:confluence-user",
      },
      {
        "description": "Allows reading content properties and metadata",
        "scope": "read:confluence-props",
      },
      {
        "description": "Allows reading and writing content properties and metadata",
        "scope": "write:confluence-props",
      },
      {
        "description": "Provides read-only access to group membership information",
        "scope": "read:confluence-groups",
      },
      {
        "description": "Grants full control over spaces including permissions and settings",
        "scope": "manage:confluence-space",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Discord",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-discord.svg",
    "name": "discord",
    "openint_scopes": [
      "identify",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows fetching the user's basic information (user ID, username, avatar, discriminator, etc.) without the email. This is read-only access to very basic profile data.",
        "scope": "identify",
      },
      {
        "description": "Provides access to the user's email address (requires the identify scope). This grants access to just one additional sensitive piece of information.",
        "scope": "email",
      },
      {
        "description": "Allows access to the user's connected third-party accounts (like Steam, Battle.net, etc.). This reveals linked external services.",
        "scope": "connections",
      },
      {
        "description": "Provides read-only access to the list of servers the user is in (server IDs and basic info). Doesn't reveal server contents.",
        "scope": "guilds",
      },
      {
        "description": "Allows your app to join servers on the user's behalf. This is a write operation with moderate privileges.",
        "scope": "guilds.join",
      },
      {
        "description": "Allows joining group DMs on the user's behalf. This is a write operation for private messaging.",
        "scope": "gdm.join",
      },
      {
        "description": "Allows reading messages in private channels (DMs and group DMs) the user has access to. This is high-privilege read access.",
        "scope": "messages.read",
      },
      {
        "description": "Standard bot scope used for bot authorization. When used with bot permissions, can grant extensive access to servers.",
        "scope": "bot",
      },
      {
        "description": "Allows generating webhook URLs for a channel, enabling posting messages as the webhook. This is a channel-specific write permission.",
        "scope": "webhook.incoming",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Facebook",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-facebook.svg",
    "name": "facebook",
    "openint_scopes": [
      "email",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides access to the user's primary email address.",
        "scope": "email",
      },
      {
        "description": "Provides access to basic information available on the user's profile (id, name, first_name, last_name, age_range, link, gender, locale, timezone, updated_time, verified).",
        "scope": "public_profile",
      },
      {
        "description": "Provides access to the user's list of friends who also use the app.",
        "scope": "user_friends",
      },
      {
        "description": "Provides access to the posts on the user's timeline, including their own posts and posts they're tagged in.",
        "scope": "user_posts",
      },
      {
        "description": "Provides access to the photos the user has uploaded to Facebook.",
        "scope": "user_photos",
      },
      {
        "description": "Provides access to the list of pages, places, or things the user has liked.",
        "scope": "user_likes",
      },
      {
        "description": "Provides access to the user's status updates.",
        "scope": "user_status",
      },
      {
        "description": "Provides access to the events the user is attending or has created.",
        "scope": "user_events",
      },
      {
        "description": "Provides access to manage the user's Facebook pages (requires additional permissions).",
        "scope": "manage_pages",
      },
      {
        "description": "Allows the app to post content to groups the user belongs to.",
        "scope": "publish_to_groups",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Finch",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-finch.svg",
    "name": "finch",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "client_id": {
            "type": "string",
          },
          "products": {
            "items": {
              "enum": [
                "company",
                "directory",
                "individual",
                "ssn",
                "employment",
                "payment",
                "pay_statement",
                "benefits",
              ],
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": [
          "client_id",
          "products",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "type": "string",
          },
          "state": {
            "type": "string",
          },
        },
        "required": [
          "code",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "access_token": {
            "type": "string",
          },
        },
        "required": [
          "access_token",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "api_version": {
            "description": "Finch API version",
            "type": "string",
          },
          "client_id": {
            "type": "string",
          },
          "client_secret": {
            "type": "string",
          },
          "products": {
            "description": "Finch products to access, @see https://developer.tryfinch.com/api-reference/development-guides/Permissions",
            "items": {
              "enum": [
                "company",
                "directory",
                "individual",
                "ssn",
                "employment",
                "payment",
                "pay_statement",
                "benefits",
              ],
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": [
          "client_id",
          "client_secret",
          "products",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "state": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Firebase",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-firebase.svg",
    "name": "firebase",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "oneOf": [
          {
            "properties": {
              "role": {
                "const": "admin",
                "type": "string",
              },
              "serviceAccount": {
                "additionalProperties": {},
                "properties": {
                  "project_id": {
                    "type": "string",
                  },
                },
                "required": [
                  "project_id",
                ],
                "type": "object",
              },
            },
            "required": [
              "role",
              "serviceAccount",
            ],
            "type": "object",
          },
          {
            "properties": {
              "authData": {
                "oneOf": [
                  {
                    "properties": {
                      "method": {
                        "const": "userJson",
                        "type": "string",
                      },
                      "userJson": {
                        "additionalProperties": {},
                        "properties": {
                          "appName": {
                            "type": "string",
                          },
                          "stsTokenManager": {
                            "additionalProperties": {},
                            "type": "object",
                          },
                          "uid": {
                            "type": "string",
                          },
                        },
                        "required": [
                          "uid",
                          "appName",
                          "stsTokenManager",
                        ],
                        "type": "object",
                      },
                    },
                    "required": [
                      "method",
                      "userJson",
                    ],
                    "type": "object",
                  },
                  {
                    "properties": {
                      "customToken": {
                        "type": "string",
                      },
                      "method": {
                        "const": "customToken",
                        "type": "string",
                      },
                    },
                    "required": [
                      "method",
                      "customToken",
                    ],
                    "type": "object",
                  },
                  {
                    "properties": {
                      "email": {
                        "type": "string",
                      },
                      "method": {
                        "const": "emailPassword",
                        "type": "string",
                      },
                      "password": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "method",
                      "email",
                      "password",
                    ],
                    "type": "object",
                  },
                ],
              },
              "firebaseConfig": {
                "properties": {
                  "apiKey": {
                    "type": "string",
                  },
                  "appId": {
                    "type": "string",
                  },
                  "authDomain": {
                    "type": "string",
                  },
                  "databaseURL": {
                    "type": "string",
                  },
                  "measurementId": {
                    "type": "string",
                  },
                  "messagingSenderId": {
                    "type": "string",
                  },
                  "projectId": {
                    "type": "string",
                  },
                  "storageBucket": {
                    "type": "string",
                  },
                },
                "required": [
                  "projectId",
                  "apiKey",
                  "appId",
                  "authDomain",
                  "databaseURL",
                ],
                "type": "object",
              },
              "role": {
                "const": "user",
                "type": "string",
              },
            },
            "required": [
              "role",
              "firebaseConfig",
              "authData",
            ],
            "type": "object",
          },
        ],
      },
      "connection_settings": {
        "oneOf": [
          {
            "properties": {
              "role": {
                "const": "admin",
                "type": "string",
              },
              "serviceAccount": {
                "additionalProperties": {},
                "properties": {
                  "project_id": {
                    "type": "string",
                  },
                },
                "required": [
                  "project_id",
                ],
                "type": "object",
              },
            },
            "required": [
              "role",
              "serviceAccount",
            ],
            "type": "object",
          },
          {
            "properties": {
              "authData": {
                "oneOf": [
                  {
                    "properties": {
                      "method": {
                        "const": "userJson",
                        "type": "string",
                      },
                      "userJson": {
                        "additionalProperties": {},
                        "properties": {
                          "appName": {
                            "type": "string",
                          },
                          "stsTokenManager": {
                            "additionalProperties": {},
                            "type": "object",
                          },
                          "uid": {
                            "type": "string",
                          },
                        },
                        "required": [
                          "uid",
                          "appName",
                          "stsTokenManager",
                        ],
                        "type": "object",
                      },
                    },
                    "required": [
                      "method",
                      "userJson",
                    ],
                    "type": "object",
                  },
                  {
                    "properties": {
                      "customToken": {
                        "type": "string",
                      },
                      "method": {
                        "const": "customToken",
                        "type": "string",
                      },
                    },
                    "required": [
                      "method",
                      "customToken",
                    ],
                    "type": "object",
                  },
                  {
                    "properties": {
                      "email": {
                        "type": "string",
                      },
                      "method": {
                        "const": "emailPassword",
                        "type": "string",
                      },
                      "password": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "method",
                      "email",
                      "password",
                    ],
                    "type": "object",
                  },
                ],
              },
              "firebaseConfig": {
                "properties": {
                  "apiKey": {
                    "type": "string",
                  },
                  "appId": {
                    "type": "string",
                  },
                  "authDomain": {
                    "type": "string",
                  },
                  "databaseURL": {
                    "type": "string",
                  },
                  "measurementId": {
                    "type": "string",
                  },
                  "messagingSenderId": {
                    "type": "string",
                  },
                  "projectId": {
                    "type": "string",
                  },
                  "storageBucket": {
                    "type": "string",
                  },
                },
                "required": [
                  "projectId",
                  "apiKey",
                  "appId",
                  "authDomain",
                  "databaseURL",
                ],
                "type": "object",
              },
              "role": {
                "const": "user",
                "type": "string",
              },
            },
            "required": [
              "role",
              "firebaseConfig",
              "authData",
            ],
            "type": "object",
          },
        ],
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Foreceipt",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-foreceipt.svg",
    "name": "foreceipt",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "_id": {},
          "credentials": {},
          "envName": {
            "enum": [
              "staging",
              "production",
            ],
            "type": "string",
          },
        },
        "required": [
          "envName",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "_id": {},
          "credentials": {},
          "envName": {
            "enum": [
              "staging",
              "production",
            ],
            "type": "string",
          },
        },
        "required": [
          "envName",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "_id": {},
          "credentials": {},
          "envName": {
            "enum": [
              "staging",
              "production",
            ],
            "type": "string",
          },
        },
        "required": [
          "envName",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "GitHub (User OAuth)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-github.svg",
    "name": "github",
    "openint_scopes": [
      "user:email",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Grants read-only access to a user's email addresses. This scope only allows viewing the email addresses associated with the user's account, but does not provide access to any other user data or repository information.",
        "scope": "user:email",
      },
      {
        "description": "Provides access to read a user's profile data. This includes basic information like name, email, and bio, but doesn't include access to private repositories or the ability to modify any data.",
        "scope": "read:user",
      },
      {
        "description": "Grants full access to public and private repositories including the ability to read and write code, commit changes, create issues, and manage repository settings. This is a very broad scope with significant privileges.",
        "scope": "repo",
      },
      {
        "description": "Allows read and write access to public and private repository commit statuses. This is used for CI services to mark commits as passing/failing tests, but doesn't provide access to code or other repository contents.",
        "scope": "repo:status",
      },
      {
        "description": "Provides full organization and team management access, including the ability to create and delete repositories, manage team membership, and change organization settings. This is a very powerful scope with administrative privileges.",
        "scope": "admin:org",
      },
      {
        "description": "Grants permission to read and write team discussions. This allows creating and commenting on team discussions within organizations the user has access to, but doesn't provide access to code or repository settings.",
        "scope": "write:discussion",
      },
      {
        "description": "Provides the ability to add and update GitHub Actions workflow files. This scope allows modifying CI/CD pipelines but doesn't grant access to repository code or settings outside of workflows.",
        "scope": "workflow",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Gong (Oauth)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-gong.svg",
    "name": "gong",
    "openint_scopes": [
      "user:read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "api_base_url_for_customer": {
            "description": "The base URL of your Gong account (e.g., example)",
            "pattern": "https?:\\/\\/.*",
            "type": "string",
          },
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
          "api_base_url_for_customer",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to basic user profile information",
        "scope": "user:read",
      },
      {
        "description": "Provides access to read call recordings and metadata",
        "scope": "calls:read",
      },
      {
        "description": "Grants permission to view analytics and reporting data",
        "scope": "analytics:read",
      },
      {
        "description": "Provides full administrative access including user management and system settings",
        "scope": "admin:write",
      },
      {
        "description": "Grants complete read/write access to all conversation data including recordings, transcripts, and comments",
        "scope": "conversations:full",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Google Calendar",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-google-calendar.svg",
    "name": "google-calendar",
    "openint_scopes": [
      "https://www.googleapis.com/auth/calendar.settings.readonly",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides full read/write access to the user's calendars, including events, ACLs (access control lists), and settings. This is the most permissive scope.",
        "scope": "https://www.googleapis.com/auth/calendar",
      },
      {
        "description": "Provides read/write access to events on the user's calendars, but does not include access to calendar metadata (e.g., ACLs or settings).",
        "scope": "https://www.googleapis.com/auth/calendar.events",
      },
      {
        "description": "Provides read-only access to events on the user's calendars. No write operations are allowed.",
        "scope": "https://www.googleapis.com/auth/calendar.events.readonly",
      },
      {
        "description": "Provides read-only access to the user's calendars, including events, ACLs, and settings. No write operations are allowed.",
        "scope": "https://www.googleapis.com/auth/calendar.readonly",
      },
      {
        "description": "Provides read-only access to the user's calendar settings (e.g., time zone, working hours). No access to events or calendars.",
        "scope": "https://www.googleapis.com/auth/calendar.settings.readonly",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Google Docs",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-google-docs.svg",
    "name": "google-docs",
    "openint_scopes": [
      "https://www.googleapis.com/auth/documents.currentonly",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides full read/write access to Google Docs documents. Allows viewing, creating, editing, and deleting documents.",
        "scope": "https://www.googleapis.com/auth/documents",
      },
      {
        "description": "Provides read-only access to Google Docs documents. Allows viewing document content and metadata but no modifications.",
        "scope": "https://www.googleapis.com/auth/documents.readonly",
      },
      {
        "description": "Provides access to Google Docs files that the app has created or been explicitly granted access to. Limited to specific files rather than all documents.",
        "scope": "https://www.googleapis.com/auth/drive.file",
      },
      {
        "description": "Provides read-only access to all Google Drive files including Docs, but no modifications allowed. Wider access than drive.file but limited to viewing.",
        "scope": "https://www.googleapis.com/auth/drive.readonly",
      },
      {
        "description": "Provides full read/write access to all Google Drive files including Docs. The broadest permission for Docs/Drive operations.",
        "scope": "https://www.googleapis.com/auth/drive",
      },
      {
        "description": "Provides access only to the currently open Google Docs document (when used with Docs add-ons). Most limited scope for temporary access.",
        "scope": "https://www.googleapis.com/auth/documents.currentonly",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Google Drive",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-google-drive.svg",
    "name": "google-drive",
    "openint_scopes": [
      "https://www.googleapis.com/auth/drive.metadata.readonly",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Full, permissive scope to access all of a user's Google Drive files including the ability to read, modify, create, and delete all files and file metadata, including shared files.",
        "scope": "https://www.googleapis.com/auth/drive",
      },
      {
        "description": "Provides access to only the files that the app has created or opened, and requires explicit user action to select files. Cannot access existing files unless the user selects them.",
        "scope": "https://www.googleapis.com/auth/drive.file",
      },
      {
        "description": "Provides access to application-specific data stored in Google Drive (in the appdata folder). Files created with this scope are hidden from the user and other apps by default.",
        "scope": "https://www.googleapis.com/auth/drive.appdata",
      },
      {
        "description": "Provides read-only access to file metadata (such as titles, parents, and properties) but does not allow access to file content. Can view file information but cannot download or modify content.",
        "scope": "https://www.googleapis.com/auth/drive.metadata",
      },
      {
        "description": "Provides read-only access to file metadata (titles, parents, and properties) without the ability to view or download file content. The most restricted metadata-only access.",
        "scope": "https://www.googleapis.com/auth/drive.metadata.readonly",
      },
      {
        "description": "Provides read-only access to the user's Google Photos videos and photos stored in Google Drive (specialized for media files).",
        "scope": "https://www.googleapis.com/auth/drive.photos.readonly",
      },
      {
        "description": "Provides read-only access to all of a user's Google Drive files, including file content and metadata, but no modification capabilities.",
        "scope": "https://www.googleapis.com/auth/drive.readonly",
      },
      {
        "description": "Provides access to Google Apps Script projects stored in Google Drive, allowing creation, modification, and execution of scripts.",
        "scope": "https://www.googleapis.com/auth/drive.scripts",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Gmail",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-google-mail.svg",
    "name": "google-mail",
    "openint_scopes": [
      "https://www.googleapis.com/auth/gmail.metadata",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to the user's Gmail data, including viewing messages and threads but not making any changes.",
        "scope": "https://www.googleapis.com/auth/gmail.readonly",
      },
      {
        "description": "Allows sending messages only, without access to read, modify, or delete messages.",
        "scope": "https://www.googleapis.com/auth/gmail.send",
      },
      {
        "description": "Allows creating, reading, and sending messages (including drafts), but doesn't allow access to existing messages in the inbox.",
        "scope": "https://www.googleapis.com/auth/gmail.compose",
      },
      {
        "description": "Allows inserting messages into the user's mailbox (e.g., importing email) but doesn't allow reading or modifying existing messages.",
        "scope": "https://www.googleapis.com/auth/gmail.insert",
      },
      {
        "description": "Allows creating, reading, and modifying labels only, without access to message content.",
        "scope": "https://www.googleapis.com/auth/gmail.labels",
      },
      {
        "description": "Allows access to message metadata (headers, labels) but not the message body or attachments. This is the most limited read-only scope.",
        "scope": "https://www.googleapis.com/auth/gmail.metadata",
      },
      {
        "description": "Allows reading, sending, deleting, and modifying messages and threads (includes all actions of readonly, send, and compose).",
        "scope": "https://www.googleapis.com/auth/gmail.modify",
      },
      {
        "description": "Full access to the user's Gmail account, including all read and write operations. Equivalent to gmail.modify plus additional capabilities.",
        "scope": "https://mail.google.com/",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Google Sheet",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-google-sheet.svg",
    "name": "google-sheet",
    "openint_scopes": [
      "https://www.googleapis.com/auth/spreadsheets.currentonly",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Full access to read, write, and modify all Google Sheets and their properties. This includes creating, deleting, and sharing spreadsheets.",
        "scope": "https://www.googleapis.com/auth/spreadsheets",
      },
      {
        "description": "Read-only access to view Google Sheets and their properties, but cannot make any changes or access drive metadata.",
        "scope": "https://www.googleapis.com/auth/spreadsheets.readonly",
      },
      {
        "description": "Access to only Google Sheets files that the app has created or been explicitly opened by the user. Cannot access all user spreadsheets.",
        "scope": "https://www.googleapis.com/auth/drive.file",
      },
      {
        "description": "Read-only access to all Google Sheets files in the user's Drive, but cannot make modifications.",
        "scope": "https://www.googleapis.com/auth/drive.readonly",
      },
      {
        "description": "Access limited to only the currently opened spreadsheet. Cannot access other spreadsheets or perform drive-level operations.",
        "scope": "https://www.googleapis.com/auth/spreadsheets.currentonly",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Greenhouse",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-greenhouse.svg",
    "name": "greenhouse",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Heron Data",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-heron.svg",
    "name": "heron",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "additionalProperties": false,
        "type": "object",
      },
      "connection_settings": {
        "additionalProperties": false,
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "OAUTH2",
    "display_name": "HubSpot",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-hubspot.svg",
    "name": "hubspot",
    "openint_scopes": [
      "crm.objects.contacts.read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "anyOf": [
              {
                "properties": {
                  "scopes": {
                    "description": "Scopes for OpenInt Platform Credentials",
                    "items": {
                      "enum": [
                        "crm.objects.contacts.read",
                      ],
                      "type": "string",
                    },
                    "title": "Scopes",
                    "type": "array",
                  },
                },
                "required": [
                  "scopes",
                ],
                "title": "Use OpenInt platform credentials",
                "type": "object",
              },
              {
                "description": "Base oauth configuration for the connector",
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "scopes": {
                    "items": {
                      "type": "string",
                    },
                    "type": [
                      "array",
                      "null",
                    ],
                  },
                },
                "title": "Use my own",
                "type": [
                  "object",
                  "null",
                ],
                "ui:field": "OAuthField",
              },
            ],
            "ui:field": "OAuthField",
            "ui:fieldReplacesAnyOrOneOf": true,
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides read and write access to all contacts and contact properties in HubSpot.",
        "scope": "contacts",
      },
      {
        "description": "Provides read-only access to contacts and contact properties in HubSpot.",
        "scope": "contacts-ro",
      },
      {
        "description": "Provides read and write access to content, including blog posts, pages, and templates.",
        "scope": "content",
      },
      {
        "description": "Provides read and write access to forms and form submissions.",
        "scope": "forms",
      },
      {
        "description": "Provides read-only access to forms and form submissions.",
        "scope": "forms-ro",
      },
      {
        "description": "Allows the app to make OAuth requests to HubSpot's API.",
        "scope": "oauth",
      },
      {
        "description": "Provides read and write access to timeline events for objects.",
        "scope": "timeline",
      },
      {
        "description": "Provides read and write access to tickets in HubSpot.",
        "scope": "tickets",
      },
      {
        "description": "Provides read-only access to tickets in HubSpot.",
        "scope": "tickets-ro",
      },
      {
        "description": "Provides read and write access to e-commerce data including products, line items, and orders.",
        "scope": "e-commerce",
      },
      {
        "description": "Provides read and write access to files in HubSpot.",
        "scope": "files",
      },
      {
        "description": "Provides read-only access to files in HubSpot.",
        "scope": "files-ro",
      },
      {
        "description": "Provides access to workflow automation features.",
        "scope": "automation",
      },
      {
        "description": "Allows for syncing data between HubSpot and external systems.",
        "scope": "integration-sync",
      },
      {
        "description": "Provides read-only access to contact objects in the CRM.",
        "scope": "crm.objects.contacts.read",
      },
      {
        "description": "Provides read-only access to contact schemas in the CRM.",
        "scope": "crm.schemas.contacts.read",
      },
      {
        "description": "Provides read-only access to user settings information.",
        "scope": "settings.users.read",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Instagram",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-instagram.svg",
    "name": "instagram",
    "openint_scopes": [
      "instagram_basic",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides access to the user's profile information including username, profile picture, and account type (Business or Personal).",
        "scope": "user_profile",
      },
      {
        "description": "Provides access to the user's media (photos and videos) including metadata, captions, and comments.",
        "scope": "user_media",
      },
      {
        "description": "Provides basic access to a user's profile information, username, and profile picture. This is the most limited scope.",
        "scope": "instagram_basic",
      },
      {
        "description": "Provides access to the list of Instagram Pages a user manages. Required for accessing Page-related features.",
        "scope": "pages_show_list",
      },
      {
        "description": "Allows the app to publish content (photos and videos) on behalf of the user.",
        "scope": "instagram_content_publish",
      },
      {
        "description": "Allows the app to read and manage comments on the user's media.",
        "scope": "instagram_manage_comments",
      },
      {
        "description": "Provides access to business account insights and metrics.",
        "scope": "instagram_manage_insights",
      },
      {
        "description": "Provides access to manage ads and campaigns for Instagram business accounts.",
        "scope": "ads_management",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Intercom",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-intercom.svg",
    "name": "intercom",
    "openint_scopes": [
      "users.read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to Intercom data, including users, companies, conversations, and more. Cannot modify any data.",
        "scope": "read",
      },
      {
        "description": "Allows read and write access to Intercom data. Can create and update users, companies, conversations, etc.",
        "scope": "write",
      },
      {
        "description": "Allows read-only access to user data only. Cannot access companies, conversations, or other data types.",
        "scope": "users.read",
      },
      {
        "description": "Allows read-only access to company data only. Cannot access user data or other data types.",
        "scope": "companies.read",
      },
      {
        "description": "Allows read-only access to conversations only. Cannot access user or company data.",
        "scope": "conversations.read",
      },
      {
        "description": "Allows read and write access to contact data only. More limited than full write access.",
        "scope": "contacts.write",
      },
      {
        "description": "Provides full access to all Intercom data and administrative functions, including account settings.",
        "scope": "admin",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Jira (OAuth)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-jira.svg",
    "name": "jira",
    "openint_scopes": [
      "read:jira-user",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to user profile information (name, email, avatar, etc.)",
        "scope": "read:jira-user",
      },
      {
        "description": "Allows read access to Jira issues, projects, boards, and other work items",
        "scope": "read:jira-work",
      },
      {
        "description": "Allows creating, updating, and transitioning Jira issues and work items",
        "scope": "write:jira-work",
      },
      {
        "description": "Allows administration of Jira projects including settings, components, and versions",
        "scope": "manage:jira-project",
      },
      {
        "description": "Allows modifying global Jira configurations and settings",
        "scope": "manage:jira-configuration",
      },
      {
        "description": "Allows obtaining refresh tokens for long-term access when user is not present",
        "scope": "offline_access",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Lever (OAuth)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-lever.svg",
    "name": "lever",
    "openint_scopes": [
      "read:applications",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to all data in Lever, including candidates, postings, opportunities, and more. Does not permit any modifications.",
        "scope": "read",
      },
      {
        "description": "Allows read and write access to all data in Lever, including creating, updating, and deleting candidates, postings, opportunities, etc.",
        "scope": "write",
      },
      {
        "description": "Provides full administrative access, including read/write permissions for all data and the ability to modify account settings and configurations.",
        "scope": "admin",
      },
      {
        "description": "Allows the application to obtain refresh tokens for long-term access to Lever's API without requiring user re-authentication.",
        "scope": "offline_access",
      },
      {
        "description": "Provides read-only access to job applications and related data, but no access to other candidate or posting information.",
        "scope": "read:applications",
      },
      {
        "description": "Provides read-only access to candidate profiles and related data, but no access to postings or opportunities.",
        "scope": "read:candidates",
      },
      {
        "description": "Allows read and write access to candidate profiles and related data, including creating and updating candidates.",
        "scope": "write:candidates",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Linear",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-linear.svg",
    "name": "linear",
    "openint_scopes": [
      "user:read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to your Linear data, including issues, projects, and teams. This scope does not permit any modifications.",
        "scope": "read",
      },
      {
        "description": "Allows creating, updating, and deleting Linear data, including issues, projects, and teams. This scope includes all permissions granted by the 'read' scope.",
        "scope": "write",
      },
      {
        "description": "Provides full access to all Linear data and administrative actions, including team settings and user management. This scope includes all permissions granted by the 'read' and 'write' scopes.",
        "scope": "admin",
      },
      {
        "description": "Allows read-only access to user-specific data, such as your profile information and assigned issues. This scope does not permit access to team or project data beyond what is assigned to you.",
        "scope": "user:read",
      },
      {
        "description": "Allows read-only access to issues in Linear, including their comments and attachments. This scope is more specific than the general 'read' scope.",
        "scope": "issues:read",
      },
      {
        "description": "Allows creating, updating, and deleting issues in Linear. This scope includes all permissions granted by the 'issues:read' scope.",
        "scope": "issues:write",
      },
      {
        "description": "Allows read-only access to projects in Linear, including their settings and issue lists. This scope does not permit modifications.",
        "scope": "projects:read",
      },
      {
        "description": "Allows read-only access to teams in Linear, including their members and settings. This scope does not permit modifications.",
        "scope": "teams:read",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "LinkedIn",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-linkedin.svg",
    "name": "linkedin",
    "openint_scopes": [
      "profile",
      "email",
      "openid",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides access to the member's basic profile information including name, photo, headline, and current positions. This is a limited subset of profile data compared to 'r_basicprofile'.",
        "scope": "profile",
      },
      {
        "description": "Enables user authentication and allows the application to receive a unique identifier for the user. This scope is required for OpenID Connect authentication flows and provides basic identity information about the authenticated user.",
        "scope": "openid",
      },
      {
        "description": "Provides access to the member's full basic profile including experience, education, skills, and recommendations. More extensive than 'r_liteprofile' but doesn't include sensitive information.",
        "scope": "r_basicprofile",
      },
      {
        "description": "Provides access to the member's primary email address. Requires explicit member consent as it's considered sensitive information.",
        "scope": "email",
      },
      {
        "description": "Allows the application to post, comment, and like posts on behalf of the member. Also enables sharing content to LinkedIn.",
        "scope": "w_member_social",
      },
      {
        "description": "Provides read-write access to organization pages that the member can administer. Allows managing company pages, posting updates, etc.",
        "scope": "rw_organization_admin",
      },
      {
        "description": "Provides read access to organization posts and engagement statistics for organizations the member can access.",
        "scope": "r_organization_social",
      },
      {
        "description": "Provides access to LinkedIn's Advertising APIs, allowing reading of ad accounts, campaigns, and analytics.",
        "scope": "r_ads",
      },
      {
        "description": "Allows posting content, comments, and likes on behalf of organizations the member can administer.",
        "scope": "w_organization_social",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Lunchmoney",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-lunchmoney.svg",
    "name": "lunchmoney",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "additionalProperties": false,
        "type": "object",
      },
      "connection_settings": {
        "additionalProperties": false,
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Mercury",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-mercury.svg",
    "name": "mercury",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "additionalProperties": false,
        "type": "object",
      },
      "connection_settings": {
        "additionalProperties": false,
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "apikeyAuth": {
            "description": "API key auth support",
            "type": "boolean",
          },
          "oauth": {
            "anyOf": [
              {
                "description": "No oauth",
                "type": "null",
              },
              {
                "description": "Configure oauth",
                "properties": {
                  "clientId": {
                    "type": "string",
                  },
                  "clientSecret": {
                    "type": "string",
                  },
                },
                "required": [
                  "clientId",
                  "clientSecret",
                ],
                "type": "object",
              },
            ],
            "description": "Oauth support",
          },
        },
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "alpha",
  },
  {
    "authType": "CUSTOM",
    "display_name": "merge.dev",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-merge.svg",
    "name": "merge",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "link_token": {
            "type": "string",
          },
        },
        "required": [
          "link_token",
        ],
        "type": "object",
      },
      "connect_output": {
        "anyOf": [
          {
            "properties": {
              "publicToken": {
                "type": "string",
              },
            },
            "required": [
              "publicToken",
            ],
            "type": "object",
          },
          {
            "properties": {
              "accountToken": {
                "type": "string",
              },
            },
            "required": [
              "accountToken",
            ],
            "type": "object",
          },
        ],
      },
      "connection_settings": {
        "properties": {
          "accountDetails": {},
          "accountToken": {
            "type": "string",
          },
        },
        "required": [
          "accountToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "apiKey": {
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "type": "object",
      },
      "integration_data": {},
      "pre_connect_input": {
        "properties": {
          "categories": {
            "items": {},
            "type": "array",
          },
          "customer_email_address": {
            "type": "string",
          },
          "customer_organization_name": {
            "type": "string",
          },
        },
        "required": [
          "categories",
        ],
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Moota",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-moota.svg",
    "name": "moota",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "additionalProperties": false,
        "type": "object",
      },
      "connection_settings": {
        "additionalProperties": false,
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "token": {
            "type": "string",
          },
        },
        "required": [
          "token",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "Notion",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-notion.svg",
    "name": "notion",
    "openint_scopes": [
      "user:read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows the application to read user information, such as the user's name, email, and profile picture. This is a read-only scope with no write permissions.",
        "scope": "user:read",
      },
      {
        "description": "Allows the application to update user information, such as the user's name or profile picture. This includes the permissions of user:read.",
        "scope": "user:write",
      },
      {
        "description": "Allows the application to read all content that the user has access to in Notion, including pages, databases, and blocks. This is a read-only scope.",
        "scope": "content:read",
      },
      {
        "description": "Allows the application to create, update, and delete content in Notion, including pages, databases, and blocks. This includes the permissions of content:read.",
        "scope": "content:write",
      },
      {
        "description": "Allows the application to read workspace information, such as the workspace name, settings, and members. This is a read-only scope.",
        "scope": "workspace:read",
      },
      {
        "description": "Allows the application to update workspace information, such as settings and members. This includes the permissions of workspace:read.",
        "scope": "workspace:write",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Onebrick",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-onebrick.svg",
    "name": "onebrick",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "publicToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "redirect_url": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "publicToken": {
            "type": "string",
          },
        },
        "required": [
          "publicToken",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "accessToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "clientId": {
            "type": "string",
          },
          "clientSecret": {
            "type": "string",
          },
          "envName": {
            "enum": [
              "sandbox",
              "production",
            ],
            "type": "string",
          },
          "publicToken": {
            "type": "string",
          },
          "redirectUrl": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "envName",
          "clientId",
          "clientSecret",
          "publicToken",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "properties": {
          "body": {},
          "headers": {
            "additionalProperties": {},
            "type": "object",
          },
          "query": {
            "additionalProperties": {},
            "type": "object",
          },
        },
        "required": [
          "headers",
          "query",
        ],
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "Outreach",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-outreach.svg",
    "name": "outreach",
    "openint_scopes": [
      "read:user",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to basic user profile information (name, email, etc.)",
        "scope": "read:user",
      },
      {
        "description": "Provides read access to prospect data including contact information and engagement history",
        "scope": "read:prospects",
      },
      {
        "description": "Allows creating and updating prospect records in the Outreach platform",
        "scope": "write:prospects",
      },
      {
        "description": "Grants read access to sequence data including steps and templates",
        "scope": "read:sequences",
      },
      {
        "description": "Allows creating and modifying email sequences and templates",
        "scope": "write:sequences",
      },
      {
        "description": "Provides full administrative access to all Outreach data and functions",
        "scope": "admin:all",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Pipedrive",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-pipedrive.svg",
    "name": "pipedrive",
    "openint_scopes": [
      "base",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "api_domain": {
            "description": "The API URL of your Pipedrive account (e.g., example)",
            "pattern": "https?:\\/\\/.*",
            "type": "string",
          },
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
          "api_domain",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Provides access to basic user information such as name, email, and company details. Does not include access to any deal, person, or organization data.",
        "scope": "base",
      },
      {
        "description": "Allows read-only access to contacts (persons and organizations) including their details, but doesn't permit any modifications.",
        "scope": "contacts:read",
      },
      {
        "description": "Provides read and write access to contacts (persons and organizations), allowing creation, modification, and deletion of contact information.",
        "scope": "contacts:write",
      },
      {
        "description": "Grants read-only access to deals including their stages, values, and associated data, but doesn't allow any changes.",
        "scope": "deals:read",
      },
      {
        "description": "Provides full access to deals including creating, modifying, and deleting deals, as well as changing deal stages.",
        "scope": "deals:write",
      },
      {
        "description": "Allows reading user information across the organization, including team members' details, but no modifications.",
        "scope": "users:read",
      },
      {
        "description": "Provides full administrative access including organization settings, user management, and all data. This is the most privileged scope.",
        "scope": "admin",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Plaid",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-plaid.svg",
    "name": "plaid",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "anyOf": [
          {
            "properties": {
              "link_token": {
                "type": "string",
              },
            },
            "required": [
              "link_token",
            ],
            "type": "object",
          },
          {
            "properties": {
              "public_token": {
                "type": "string",
              },
            },
            "required": [
              "public_token",
            ],
            "type": "object",
          },
        ],
      },
      "connect_output": {
        "properties": {
          "meta": {},
          "public_token": {
            "type": "string",
          },
        },
        "required": [
          "public_token",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
          "institution": {},
          "item": {},
          "itemId": {
            "type": [
              "string",
              "null",
            ],
          },
          "status": {},
          "webhookItemError": {
            "type": "null",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "clientName": {
            "default": "This Application",
            "description": "The name of your application, as it should be displayed in Link.
        Maximum length of 30 characters.
        If a value longer than 30 characters is provided, Link will display "This Application" instead.",
            "maxLength": 30,
            "type": "string",
          },
          "countryCodes": {
            "default": [
              "US",
              "CA",
            ],
            "items": {
              "enum": [
                "US",
                "GB",
                "ES",
                "NL",
                "FR",
                "IE",
                "CA",
                "DE",
                "IT",
                "PL",
                "DK",
                "NO",
                "SE",
                "EE",
                "LT",
                "LV",
              ],
              "type": "string",
            },
            "type": "array",
            "ui:widget": "MultiSelectWidget",
          },
          "credentials": {
            "anyOf": [
              {
                "title": "Use OpenInt platform credentials",
                "type": "null",
              },
              {
                "properties": {
                  "clientId": {
                    "type": "string",
                  },
                  "clientSecret": {
                    "type": "string",
                  },
                },
                "required": [
                  "clientId",
                  "clientSecret",
                ],
                "title": "Use my own",
                "type": "object",
              },
            ],
            "ui:field": "CredentialsField",
            "ui:fieldReplacesAnyOrOneOf": true,
          },
          "envName": {
            "enum": [
              "sandbox",
              "development",
              "production",
            ],
            "type": "string",
          },
          "language": {
            "default": "en",
            "enum": [
              "en",
              "fr",
              "es",
              "nl",
              "de",
            ],
            "type": "string",
          },
          "products": {
            "default": [
              "transactions",
            ],
            "items": {
              "enum": [
                "assets",
                "auth",
                "balance",
                "identity",
                "investments",
                "liabilities",
                "payment_initiation",
                "identity_verification",
                "transactions",
                "credit_details",
                "income",
                "income_verification",
                "deposit_switch",
                "standing_orders",
                "transfer",
                "employment",
                "recurring_transactions",
              ],
              "type": "string",
            },
            "type": "array",
            "ui:widget": "MultiSelectWidget",
          },
        },
        "required": [
          "envName",
          "clientName",
          "products",
          "countryCodes",
          "language",
        ],
        "type": "object",
      },
      "integration_data": {},
      "pre_connect_input": {
        "properties": {
          "language": {
            "enum": [
              "en",
              "fr",
              "es",
              "nl",
              "de",
            ],
            "type": "string",
          },
          "sandboxPublicTokenCreate": {
            "type": "boolean",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "properties": {
          "body": {},
          "headers": {
            "additionalProperties": {},
            "type": "object",
          },
          "query": {
            "additionalProperties": {},
            "type": "object",
          },
        },
        "required": [
          "headers",
          "query",
        ],
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Postgres",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-postgres.svg",
    "name": "postgres",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "databaseURL": {
            "type": "string",
          },
          "sourceQueries": {
            "properties": {
              "invoice": {
                "description": "Should order by lastModifiedAt and id descending",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "type": "object",
          },
        },
        "required": [
          "databaseURL",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "databaseURL": {
            "type": "string",
          },
          "sourceQueries": {
            "properties": {
              "invoice": {
                "description": "Should order by lastModifiedAt and id descending",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "type": "object",
          },
        },
        "required": [
          "databaseURL",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Quickbooks",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-quickbooks.svg",
    "name": "quickbooks",
    "openint_scopes": [
      "openid",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
          "realmId": {
            "description": "The realmId of your quickbooks company (e.g., 9341453474484455)",
            "pattern": "\\d{16}",
            "type": "string",
          },
        },
        "required": [
          "oauth",
          "realmId",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "envName": {
            "default": "sandbox",
            "enum": [
              "sandbox",
              "production",
            ],
            "type": "string",
          },
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
          "envName",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Full access to accounting data including customers, vendors, invoices, payments, expenses, and all other accounting entities. Allows read and write operations.",
        "scope": "com.intuit.quickbooks.accounting",
      },
      {
        "description": "Read-only access to accounting data including customers, vendors, invoices, payments, expenses, and other accounting entities. No write operations allowed.",
        "scope": "com.intuit.quickbooks.accounting.readonly",
      },
      {
        "description": "Access to payment operations including processing payments and viewing payment information. Required for integrating with QuickBooks Payments.",
        "scope": "com.intuit.quickbooks.payment",
      },
      {
        "description": "Access to payroll data including employee information, pay runs, and payroll items. Allows read and write operations.",
        "scope": "com.intuit.quickbooks.payroll",
      },
      {
        "description": "Read-only access to payroll data including employee information, pay runs, and payroll items. No write operations allowed.",
        "scope": "com.intuit.quickbooks.payroll.readonly",
      },
      {
        "description": "Access to sales receipt operations including creating, updating, and viewing sales receipts.",
        "scope": "com.intuit.quickbooks.salesreceipt",
      },
      {
        "description": "Basic authentication and user profile information (name, email). Does not provide access to any QuickBooks company data.",
        "scope": "openid",
      },
      {
        "description": "Access to the user's email address only. Minimal scope that doesn't provide access to any QuickBooks company data.",
        "scope": "email",
      },
      {
        "description": "Access to basic user profile information (name, address, phone). Doesn't provide access to any QuickBooks company data.",
        "scope": "profile",
      },
      {
        "description": "Access to the user's phone number only. Minimal scope that doesn't provide access to any QuickBooks company data.",
        "scope": "phone",
      },
      {
        "description": "Access to the user's address information only. Doesn't provide access to any QuickBooks company data.",
        "scope": "address",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Ramp",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-ramp.svg",
    "name": "ramp",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "accessToken": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "accessToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "clientId": {
            "type": [
              "string",
              "null",
            ],
          },
          "clientSecret": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "startAfterTransactionId": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "properties": {
              "clientId": {
                "type": "string",
              },
              "clientSecret": {
                "type": "string",
              },
            },
            "required": [
              "clientId",
              "clientSecret",
            ],
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Reddit",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-reddit.svg",
    "name": "reddit",
    "openint_scopes": [
      "wikiread",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Access your Reddit username and signup date, karma, trophies, and other public info shown on your profile",
        "scope": "identity",
      },
      {
        "description": "Edit and delete your comments and submissions",
        "scope": "edit",
      },
      {
        "description": "Select and edit your user flair in subreddits",
        "scope": "flair",
      },
      {
        "description": "Access your voting history and comments/submissions you've hidden/saved",
        "scope": "history",
      },
      {
        "description": "Manage moderator configuration for subreddits you moderate (flair, settings, etc.)",
        "scope": "modconfig",
      },
      {
        "description": "Manage user flair in subreddits you moderate",
        "scope": "modflair",
      },
      {
        "description": "Access moderation logs for subreddits you moderate",
        "scope": "modlog",
      },
      {
        "description": "Approve, remove, mark NSFW, and distinguish content in subreddits you moderate",
        "scope": "modposts",
      },
      {
        "description": "Modify wiki pages in subreddits you moderate",
        "scope": "modwiki",
      },
      {
        "description": "Access the list of subreddits you moderate, contribute to, and subscribe to",
        "scope": "mysubreddits",
      },
      {
        "description": "Read and send private messages",
        "scope": "privatemessages",
      },
      {
        "description": "Access posts and comments through your account (required for most read operations)",
        "scope": "read",
      },
      {
        "description": "Report content for rules violations",
        "scope": "report",
      },
      {
        "description": "Save and unsave comments and submissions",
        "scope": "save",
      },
      {
        "description": "Submit links and comments from your account",
        "scope": "submit",
      },
      {
        "description": "Manage your subreddit subscriptions",
        "scope": "subscribe",
      },
      {
        "description": "Submit and change votes on comments and submissions",
        "scope": "vote",
      },
      {
        "description": "Edit wiki pages in subreddits you have access to",
        "scope": "wikiedit",
      },
      {
        "description": "Read wiki pages in public subreddits",
        "scope": "wikiread",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Salesloft",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-salesloft.svg",
    "name": "salesloft",
    "openint_scopes": [
      "users:read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to user profile information (name, email, role, etc.) but no access to sales data or actions",
        "scope": "users:read",
      },
      {
        "description": "Provides access to read call recordings, transcripts, and metadata but cannot initiate calls or modify call data",
        "scope": "calls:read",
      },
      {
        "description": "Grants permission to read email templates and sent email content but cannot send or modify emails",
        "scope": "emails:read",
      },
      {
        "description": "Allows reading contact/lead information in the CRM but no editing or creation capabilities",
        "scope": "people:read",
      },
      {
        "description": "Provides read access to sales cadence workflows and sequences but cannot modify or execute them",
        "scope": "cadences:read",
      },
      {
        "description": "Enables creating and updating sales activities (calls, emails, meetings) in the system",
        "scope": "activities:write",
      },
      {
        "description": "Allows full create/read/update/delete operations on contact/lead records",
        "scope": "people:write",
      },
      {
        "description": "Provides full administrative access including user management, settings, and all data operations",
        "scope": "admin",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Saltedge",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-saltedge.svg",
    "name": "saltedge",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {},
      "connection_settings": {},
      "connector_config": {
        "properties": {
          "appId": {
            "type": "string",
          },
          "secret": {
            "type": "string",
          },
          "url": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "appId",
          "secret",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "SharePoint Online (v2)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-sharepointonline.svg",
    "name": "sharepointonline",
    "openint_scopes": [
      "offline_access",
      "openid",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows the application to request refresh tokens, which can be used to obtain new access tokens without user interaction. This enables the application to maintain access to resources even when the user is not actively using the application.",
        "scope": "offline_access",
      },
      {
        "description": "Enables user authentication and allows the application to receive a unique identifier for the user. This scope is required for OpenID Connect authentication flows and provides basic identity information about the authenticated user.",
        "scope": "openid",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Slack",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-slack.svg",
    "name": "slack",
    "openint_scopes": [
      "users:read",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows the app to view basic information about public channels in the workspace, including channel names, topics, and purposes.",
        "scope": "channels:read",
      },
      {
        "description": "Allows the app to create, rename, and archive public channels, as well as set their purpose and topic.",
        "scope": "channels:write",
      },
      {
        "description": "Allows the app to post messages in channels and conversations it has access to.",
        "scope": "chat:write",
      },
      {
        "description": "Allows the app to add custom slash commands that users can invoke in Slack.",
        "scope": "commands",
      },
      {
        "description": "Allows the app to view basic information about users in the workspace, including names, emails, and avatars.",
        "scope": "users:read",
      },
      {
        "description": "Allows the app to view email addresses of users in the workspace (in addition to basic user information).",
        "scope": "users:read.email",
      },
      {
        "description": "Allows the app to perform administrative actions, including managing users, channels, and workspace settings.",
        "scope": "admin",
      },
      {
        "description": "Allows the app to view files shared in channels and conversations it has access to.",
        "scope": "files:read",
      },
      {
        "description": "Allows the app to upload, edit, and delete files in channels and conversations it has access to.",
        "scope": "files:write",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Splitwise",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-splitwise.svg",
    "name": "splitwise",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
          "currentUser": {
            "properties": {
              "country_code": {
                "type": "string",
              },
              "custom_picture": {
                "type": "boolean",
              },
              "date_format": {
                "type": "string",
              },
              "default_currency": {
                "type": "string",
              },
              "default_group_id": {
                "type": "number",
              },
              "email": {
                "type": "string",
              },
              "first_name": {
                "type": "string",
              },
              "force_refresh_at": {
                "type": "string",
              },
              "id": {
                "type": "number",
              },
              "last_name": {
                "type": "string",
              },
              "locale": {
                "type": "string",
              },
              "notifications": {
                "properties": {
                  "added_as_friend": {
                    "type": "boolean",
                  },
                  "added_to_group": {
                    "type": "boolean",
                  },
                  "announcements": {
                    "type": "boolean",
                  },
                  "bills": {
                    "type": "boolean",
                  },
                  "expense_added": {
                    "type": "boolean",
                  },
                  "expense_updated": {
                    "type": "boolean",
                  },
                  "monthly_summary": {
                    "type": "boolean",
                  },
                  "payments": {
                    "type": "boolean",
                  },
                },
                "required": [
                  "added_as_friend",
                  "added_to_group",
                  "announcements",
                  "bills",
                  "expense_added",
                  "expense_updated",
                  "monthly_summary",
                  "payments",
                ],
                "type": "object",
              },
              "notifications_count": {
                "type": "number",
              },
              "notifications_read": {
                "type": "string",
              },
              "picture": {
                "properties": {
                  "large": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "medium": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "original": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "small": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "xlarge": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "xxlarge": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "type": "object",
              },
              "registration_status": {
                "type": "string",
              },
            },
            "required": [
              "country_code",
              "custom_picture",
              "date_format",
              "default_currency",
              "default_group_id",
              "email",
              "first_name",
              "force_refresh_at",
              "id",
              "last_name",
              "locale",
              "notifications",
              "notifications_count",
              "notifications_read",
              "picture",
              "registration_status",
            ],
            "type": [
              "object",
              "null",
            ],
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
          "currentUser": {
            "properties": {
              "country_code": {
                "type": "string",
              },
              "custom_picture": {
                "type": "boolean",
              },
              "date_format": {
                "type": "string",
              },
              "default_currency": {
                "type": "string",
              },
              "default_group_id": {
                "type": "number",
              },
              "email": {
                "type": "string",
              },
              "first_name": {
                "type": "string",
              },
              "force_refresh_at": {
                "type": "string",
              },
              "id": {
                "type": "number",
              },
              "last_name": {
                "type": "string",
              },
              "locale": {
                "type": "string",
              },
              "notifications": {
                "properties": {
                  "added_as_friend": {
                    "type": "boolean",
                  },
                  "added_to_group": {
                    "type": "boolean",
                  },
                  "announcements": {
                    "type": "boolean",
                  },
                  "bills": {
                    "type": "boolean",
                  },
                  "expense_added": {
                    "type": "boolean",
                  },
                  "expense_updated": {
                    "type": "boolean",
                  },
                  "monthly_summary": {
                    "type": "boolean",
                  },
                  "payments": {
                    "type": "boolean",
                  },
                },
                "required": [
                  "added_as_friend",
                  "added_to_group",
                  "announcements",
                  "bills",
                  "expense_added",
                  "expense_updated",
                  "monthly_summary",
                  "payments",
                ],
                "type": "object",
              },
              "notifications_count": {
                "type": "number",
              },
              "notifications_read": {
                "type": "string",
              },
              "picture": {
                "properties": {
                  "large": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "medium": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "original": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "small": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "xlarge": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "xxlarge": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "type": "object",
              },
              "registration_status": {
                "type": "string",
              },
            },
            "required": [
              "country_code",
              "custom_picture",
              "date_format",
              "default_currency",
              "default_group_id",
              "email",
              "first_name",
              "force_refresh_at",
              "id",
              "last_name",
              "locale",
              "notifications",
              "notifications_count",
              "notifications_read",
              "picture",
              "registration_status",
            ],
            "type": [
              "object",
              "null",
            ],
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Stripe",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-stripe.svg",
    "name": "stripe",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "secretKey": {
            "type": "string",
          },
        },
        "required": [
          "secretKey",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "secretKey": {
            "type": "string",
          },
        },
        "required": [
          "secretKey",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "apikeyAuth": {
            "description": "API key auth support",
            "type": "boolean",
          },
          "oauth": {
            "anyOf": [
              {
                "description": "No oauth",
                "type": "null",
              },
              {
                "description": "Configure oauth",
                "properties": {
                  "clientId": {
                    "type": "string",
                  },
                  "clientSecret": {
                    "type": "string",
                  },
                },
                "required": [
                  "clientId",
                  "clientSecret",
                ],
                "type": "object",
              },
            ],
            "description": "Oauth support",
          },
        },
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Teller",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-teller.svg",
    "name": "teller",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "applicationId": {
            "type": "string",
          },
          "userToken": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "applicationId",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "token": {
            "type": "string",
          },
        },
        "required": [
          "token",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "token": {
            "type": "string",
          },
        },
        "required": [
          "token",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "applicationId": {
            "type": "string",
          },
          "token": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "applicationId",
        ],
        "type": "object",
      },
      "integration_data": {
        "properties": {
          "id": {
            "type": "string",
          },
          "logoUrl": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "id",
          "name",
          "logoUrl",
        ],
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Toggl",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-toggl.svg",
    "name": "toggl",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "apiToken": {
            "type": "string",
          },
        },
        "required": [
          "apiToken",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "apiToken": {
            "type": "string",
          },
          "email": {
            "type": [
              "string",
              "null",
            ],
          },
          "password": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "apiToken",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "apiToken": {
            "type": "string",
          },
          "email": {
            "type": [
              "string",
              "null",
            ],
          },
          "password": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "apiToken",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Twenty",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-twenty.svg",
    "name": "twenty",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "access_token": {
            "type": "string",
          },
        },
        "required": [
          "access_token",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "access_token": {
            "type": "string",
          },
        },
        "required": [
          "access_token",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": "beta",
  },
  {
    "authType": "OAUTH2",
    "display_name": "Twitter (v2)",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-twitter.svg",
    "name": "twitter",
    "openint_scopes": [
      "offline.access",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows the application to obtain a refresh token that can be used to request new access tokens without user interaction. This is useful for maintaining long-term access to a user's resources when they are not actively using the application.",
        "scope": "offline.access",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Venmo",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-venmo.svg",
    "name": "venmo",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "credentials": {},
          "me": {},
        },
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "credentials": {},
          "me": {},
        },
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "proxy": {
            "properties": {
              "cert": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "required": [
              "url",
              "cert",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "v1BaseURL": {
            "type": [
              "string",
              "null",
            ],
          },
          "v5BaseURL": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "CUSTOM",
    "display_name": "Wise",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-wise.svg",
    "name": "wise",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "clientId": {
            "type": "string",
          },
          "envName": {
            "enum": [
              "sandbox",
              "live",
            ],
            "type": "string",
          },
          "redirectUri": {
            "type": "string",
          },
        },
        "required": [
          "redirectUri",
          "clientId",
          "envName",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "apiToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "envName": {
            "enum": [
              "sandbox",
              "live",
            ],
            "type": "string",
          },
        },
        "required": [
          "envName",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "apiToken": {
            "type": [
              "string",
              "null",
            ],
          },
          "envName": {
            "enum": [
              "sandbox",
              "live",
            ],
            "type": "string",
          },
        },
        "required": [
          "envName",
        ],
        "type": "object",
      },
      "connector_config": {
        "additionalProperties": false,
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "Xero",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-xero.svg",
    "name": "xero",
    "openint_scopes": [
      "openid",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "This scope allows the application to obtain a refresh token, which can be used to request new access tokens even when the user is not actively using the application. This is essential for long-term access to the user's resources without requiring repeated authentication.",
        "scope": "offline_access",
      },
      {
        "description": "This scope enables the application to authenticate the user and receive basic profile information (like user ID) as part of an OpenID Connect request. It does not grant access to any other user data or resources beyond basic identity verification.",
        "scope": "openid",
      },
    ],
    "stage": "ga",
  },
  {
    "authType": "CUSTOM",
    "display_name": "Yodlee",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-yodlee.svg",
    "name": "yodlee",
    "openint_scopes": undefined,
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "accessToken": {
            "properties": {
              "accessToken": {
                "type": "string",
              },
              "expiresIn": {
                "type": "number",
              },
              "issuedAt": {
                "type": "string",
              },
            },
            "required": [
              "accessToken",
              "issuedAt",
              "expiresIn",
            ],
            "type": "object",
          },
          "envName": {
            "enum": [
              "sandbox",
              "development",
              "production",
            ],
            "type": "string",
          },
        },
        "required": [
          "accessToken",
          "envName",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "providerAccountId": {
            "anyOf": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
          "providerId": {
            "anyOf": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        "required": [
          "providerAccountId",
          "providerId",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "accessToken": {
            "properties": {
              "accessToken": {
                "type": "string",
              },
              "expiresIn": {
                "type": "number",
              },
              "issuedAt": {
                "type": "string",
              },
            },
            "required": [
              "accessToken",
              "issuedAt",
              "expiresIn",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "loginName": {
            "type": "string",
          },
          "provider": {
            "type": "null",
          },
          "providerAccount": {
            "properties": {
              "aggregationSource": {
                "type": "string",
              },
              "createdDate": {
                "type": "string",
              },
              "dataset": {
                "items": {},
                "type": "array",
              },
              "id": {
                "type": "number",
              },
              "isDeleted": {
                "type": [
                  "boolean",
                  "null",
                ],
              },
              "isManual": {
                "type": "boolean",
              },
              "providerId": {
                "type": "number",
              },
              "status": {
                "enum": [
                  "LOGIN_IN_PROGRESS",
                  "USER_INPUT_REQUIRED",
                  "IN_PROGRESS",
                  "PARTIAL_SUCCESS",
                  "SUCCESS",
                  "FAILED",
                ],
                "type": "string",
              },
            },
            "required": [
              "aggregationSource",
              "createdDate",
              "dataset",
              "id",
              "isManual",
              "providerId",
              "status",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "providerAccountId": {
            "anyOf": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
          "user": {
            "type": "null",
          },
        },
        "required": [
          "loginName",
          "providerAccountId",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "adminLoginName": {
            "type": "string",
          },
          "clientId": {
            "type": "string",
          },
          "clientSecret": {
            "type": "string",
          },
          "envName": {
            "enum": [
              "sandbox",
              "development",
              "production",
            ],
            "type": "string",
          },
          "proxy": {
            "properties": {
              "cert": {
                "type": "string",
              },
              "url": {
                "type": "string",
              },
            },
            "required": [
              "url",
              "cert",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "sandboxLoginName": {
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "envName",
          "clientId",
          "clientSecret",
          "adminLoginName",
        ],
        "type": "object",
      },
      "integration_data": {},
      "pre_connect_input": {
        "additionalProperties": false,
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": undefined,
    "stage": undefined,
  },
  {
    "authType": "OAUTH2",
    "display_name": "Zoho Desk",
    "logo_url": "https://cdn.jsdelivr.net/gh/openintegrations/openint@main/apps/web/public/_assets/logo-zoho-desk.svg",
    "name": "zoho-desk",
    "openint_scopes": [
      "ZohoDesk.basic.READ",
    ],
    "platforms": undefined,
    "schemas": {
      "connect_input": {
        "properties": {
          "authorization_url": {
            "description": "URL to take user to for approval",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE",
            "type": "string",
          },
        },
        "required": [
          "authorization_url",
        ],
        "type": "object",
      },
      "connect_output": {
        "properties": {
          "code": {
            "description": "OAuth2 authorization code used for token exchange",
            "type": "string",
          },
          "code_verifier": {
            "description": "Code verifier for PKCE from the connect input",
            "type": "string",
          },
          "state": {
            "description": "OAuth2 state",
            "type": "string",
          },
        },
        "required": [
          "code",
          "state",
        ],
        "type": "object",
      },
      "connection_settings": {
        "properties": {
          "extension": {
            "description": "The domain extension of your Zoho account (e.g., https://accounts.zoho.com/)",
            "pattern": "https:\\/\\/accounts\\.zoho\\.([a-z.]+)\\/",
            "type": "string",
          },
          "oauth": {
            "properties": {
              "created_at": {
                "type": "string",
              },
              "credentials": {
                "description": "Output of the postConnect hook for oauth2 connectors",
                "properties": {
                  "access_token": {
                    "type": "string",
                  },
                  "client_id": {
                    "description": "Client ID used for the connection",
                    "type": "string",
                  },
                  "expires_at": {
                    "type": "string",
                  },
                  "expires_in": {
                    "type": "number",
                  },
                  "raw": {
                    "additionalProperties": {},
                    "type": "object",
                  },
                  "refresh_token": {
                    "type": "string",
                  },
                  "scope": {
                    "type": "string",
                  },
                  "token_type": {
                    "type": "string",
                  },
                },
                "required": [
                  "access_token",
                  "scope",
                  "raw",
                ],
                "type": "object",
              },
              "last_fetched_at": {
                "type": "string",
              },
              "metadata": {
                "additionalProperties": {},
                "type": [
                  "object",
                  "null",
                ],
              },
              "updated_at": {
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "oauth",
          "extension",
        ],
        "type": "object",
      },
      "connector_config": {
        "properties": {
          "oauth": {
            "description": "Base oauth configuration for the connector",
            "properties": {
              "client_id": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "client_secret": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "redirect_uri": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "scopes": {
                "items": {
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "type": [
              "object",
              "null",
            ],
            "ui:field": "OAuthField",
          },
        },
        "required": [
          "oauth",
        ],
        "type": "object",
      },
      "integration_data": {
        "additionalProperties": false,
        "type": "object",
      },
      "pre_connect_input": {
        "properties": {
          "connection_id": {
            "description": "In case of re-connecting, id of the existing connection",
            "type": "string",
          },
        },
        "type": "object",
      },
      "webhook_input": {
        "additionalProperties": false,
        "type": "object",
      },
    },
    "scopes": [
      {
        "description": "Allows read-only access to tickets in Zoho Desk",
        "scope": "ZohoDesk.tickets.READ",
      },
      {
        "description": "Allows creating new tickets in Zoho Desk",
        "scope": "ZohoDesk.tickets.CREATE",
      },
      {
        "description": "Allows updating existing tickets in Zoho Desk",
        "scope": "ZohoDesk.tickets.UPDATE",
      },
      {
        "description": "Allows deleting tickets in Zoho Desk",
        "scope": "ZohoDesk.tickets.DELETE",
      },
      {
        "description": "Allows read-only access to contacts in Zoho Desk",
        "scope": "ZohoDesk.contacts.READ",
      },
      {
        "description": "Allows read-only access to basic account information in Zoho Desk",
        "scope": "ZohoDesk.basic.READ",
      },
      {
        "description": "Allows read-only access to account settings in Zoho Desk",
        "scope": "ZohoDesk.settings.READ",
      },
      {
        "description": "Provides full access (create, read, update, delete) to tickets in Zoho Desk",
        "scope": "ZohoDesk.tickets.ALL",
      },
      {
        "description": "Allows read-only access to account information in Zoho Desk",
        "scope": "ZohoDesk.accounts.READ",
      },
    ],
    "stage": "ga",
  },
]
`;
