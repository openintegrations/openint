{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenInt",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.openint.dev/v1"
    }
  ],
  "paths": {
    "/connector": {
      "get": {
        "operationId": "listConnectors",
        "summary": "List Connectors",
        "description": "List all connectors to understand what integrations are available to configure",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3000,
              "default": 50,
              "description": "Limit the number of items returned"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Offset the items returned"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "schemas"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/core.connector"
                          }
                        ],
                        "properties": {
                          "integrations": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/core.integration_select"
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of items in the database for the organization"
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Limit the number of items returned"
                    },
                    "offset": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Offset the items returned"
                    },
                    "has_next_page": {
                      "type": "boolean",
                      "description": "Convenience flag = offset + limit >= total"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "limit",
                    "offset"
                  ],
                  "description": "List of connectors"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connector-config/{id}": {
      "get": {
        "operationId": "getConnectorConfig",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the connector config, starts with `ccfg_`",
            "schema": {
              "type": "string",
              "pattern": "^ccfg_",
              "description": "The id of the connector config, starts with `ccfg_`"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "connector",
                  "connector.schemas",
                  "connection_count"
                ],
                "description": "Fields to expand: connector (includes connector details), enabled_integrations (includes enabled integrations details)"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "disabled": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {},
                          "description": "\n  JSON object can can be used to associate arbitrary metadata to\n  avoid needing a separate 1-1 table just for simple key values in your application.\n  During updates this object will be shallowly merged\n"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "updated_at",
                        "org_id",
                        "display_name",
                        "disabled"
                      ]
                    },
                    {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/connector.accelo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.adobe.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.adyen.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.aircall.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.amazon.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.apaleo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.asana.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.attio.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.auth0.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.autodesk.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.aws.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bamboohr.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.basecamp.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.battlenet.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bitbucket.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bitly.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.blackbaud.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.boldsign.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.box.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.braintree.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.calendly.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.clickup.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.close.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.confluence.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.contentful.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.contentstack.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.copper.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.coros.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.datev.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.deel.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.dialpad.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.digitalocean.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.discord.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.docusign.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.dropbox.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ebay.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.egnyte.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.envoy.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.eventbrite.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.exist.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.facebook.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.factorial.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.figma.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.fitbit.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.fortnox.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.freshbooks.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.front.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.github.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gitlab.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gong.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-calendar.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-docs.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-drive.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-mail.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-sheet.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gorgias.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.grain.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gumroad.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gusto.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.harvest.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.highlevel.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.hubspot.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.instagram.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.intercom.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.jira.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.keap.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.lever.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linear.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linkedin.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linkhut.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mailchimp.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.miro.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.monday.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mural.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.namely.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.netsuite.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.notion.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.odoo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.okta.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.osu.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.oura.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.outreach.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pagerduty.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pandadoc.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.payfit.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.paypal.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pennylane.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pinterest.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pipedrive.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.podium.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.productboard.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.qualtrics.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.quickbooks.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.reddit.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.sage.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.salesforce.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.salesloft.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.segment.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.servicem8.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.servicenow.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.sharepoint.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.shopify.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.signnow.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.slack.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.smartsheet.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.snowflake.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.spotify.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.squarespace.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.squareup.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.stackexchange.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.strava.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.teamwork.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ticktick.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.timely.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.todoist.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tremendous.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tumblr.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twinfield.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twitch.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twitter.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.typeform.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.uber.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.vimeo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wakatime.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wealthbox.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.webflow.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.whoop.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wordpress.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wrike.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.xero.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yahoo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yandex.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zapier.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zendesk.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zenefits.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoho.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoom.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.airtable.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.apollo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.brex.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.coda.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.finch.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.firebase.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.foreceipt.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.greenhouse.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.heron.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mercury.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.merge.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.moota.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.onebrick.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.openledger.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.plaid.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.postgres.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ramp.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.saltedge.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.splitwise.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.stripe.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.teller.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.toggl.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twenty.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.venmo.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wise.discriminated_connector_config"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yodlee.discriminated_connector_config"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "connector_name",
                        "mapping": {
                          "accelo": "#/components/schemas/connector.accelo.discriminated_connector_config",
                          "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connector_config",
                          "adobe": "#/components/schemas/connector.adobe.discriminated_connector_config",
                          "adyen": "#/components/schemas/connector.adyen.discriminated_connector_config",
                          "aircall": "#/components/schemas/connector.aircall.discriminated_connector_config",
                          "amazon": "#/components/schemas/connector.amazon.discriminated_connector_config",
                          "apaleo": "#/components/schemas/connector.apaleo.discriminated_connector_config",
                          "asana": "#/components/schemas/connector.asana.discriminated_connector_config",
                          "attio": "#/components/schemas/connector.attio.discriminated_connector_config",
                          "auth0": "#/components/schemas/connector.auth0.discriminated_connector_config",
                          "autodesk": "#/components/schemas/connector.autodesk.discriminated_connector_config",
                          "aws": "#/components/schemas/connector.aws.discriminated_connector_config",
                          "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connector_config",
                          "basecamp": "#/components/schemas/connector.basecamp.discriminated_connector_config",
                          "battlenet": "#/components/schemas/connector.battlenet.discriminated_connector_config",
                          "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connector_config",
                          "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connector_config",
                          "bitly": "#/components/schemas/connector.bitly.discriminated_connector_config",
                          "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connector_config",
                          "boldsign": "#/components/schemas/connector.boldsign.discriminated_connector_config",
                          "box": "#/components/schemas/connector.box.discriminated_connector_config",
                          "braintree": "#/components/schemas/connector.braintree.discriminated_connector_config",
                          "calendly": "#/components/schemas/connector.calendly.discriminated_connector_config",
                          "clickup": "#/components/schemas/connector.clickup.discriminated_connector_config",
                          "close": "#/components/schemas/connector.close.discriminated_connector_config",
                          "confluence": "#/components/schemas/connector.confluence.discriminated_connector_config",
                          "contentful": "#/components/schemas/connector.contentful.discriminated_connector_config",
                          "contentstack": "#/components/schemas/connector.contentstack.discriminated_connector_config",
                          "copper": "#/components/schemas/connector.copper.discriminated_connector_config",
                          "coros": "#/components/schemas/connector.coros.discriminated_connector_config",
                          "datev": "#/components/schemas/connector.datev.discriminated_connector_config",
                          "deel": "#/components/schemas/connector.deel.discriminated_connector_config",
                          "dialpad": "#/components/schemas/connector.dialpad.discriminated_connector_config",
                          "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connector_config",
                          "discord": "#/components/schemas/connector.discord.discriminated_connector_config",
                          "docusign": "#/components/schemas/connector.docusign.discriminated_connector_config",
                          "dropbox": "#/components/schemas/connector.dropbox.discriminated_connector_config",
                          "ebay": "#/components/schemas/connector.ebay.discriminated_connector_config",
                          "egnyte": "#/components/schemas/connector.egnyte.discriminated_connector_config",
                          "envoy": "#/components/schemas/connector.envoy.discriminated_connector_config",
                          "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connector_config",
                          "exist": "#/components/schemas/connector.exist.discriminated_connector_config",
                          "facebook": "#/components/schemas/connector.facebook.discriminated_connector_config",
                          "factorial": "#/components/schemas/connector.factorial.discriminated_connector_config",
                          "figma": "#/components/schemas/connector.figma.discriminated_connector_config",
                          "fitbit": "#/components/schemas/connector.fitbit.discriminated_connector_config",
                          "fortnox": "#/components/schemas/connector.fortnox.discriminated_connector_config",
                          "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connector_config",
                          "front": "#/components/schemas/connector.front.discriminated_connector_config",
                          "github": "#/components/schemas/connector.github.discriminated_connector_config",
                          "gitlab": "#/components/schemas/connector.gitlab.discriminated_connector_config",
                          "gong": "#/components/schemas/connector.gong.discriminated_connector_config",
                          "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connector_config",
                          "google-docs": "#/components/schemas/connector.google-docs.discriminated_connector_config",
                          "google-drive": "#/components/schemas/connector.google-drive.discriminated_connector_config",
                          "google-mail": "#/components/schemas/connector.google-mail.discriminated_connector_config",
                          "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connector_config",
                          "gorgias": "#/components/schemas/connector.gorgias.discriminated_connector_config",
                          "grain": "#/components/schemas/connector.grain.discriminated_connector_config",
                          "gumroad": "#/components/schemas/connector.gumroad.discriminated_connector_config",
                          "gusto": "#/components/schemas/connector.gusto.discriminated_connector_config",
                          "harvest": "#/components/schemas/connector.harvest.discriminated_connector_config",
                          "highlevel": "#/components/schemas/connector.highlevel.discriminated_connector_config",
                          "hubspot": "#/components/schemas/connector.hubspot.discriminated_connector_config",
                          "instagram": "#/components/schemas/connector.instagram.discriminated_connector_config",
                          "intercom": "#/components/schemas/connector.intercom.discriminated_connector_config",
                          "jira": "#/components/schemas/connector.jira.discriminated_connector_config",
                          "keap": "#/components/schemas/connector.keap.discriminated_connector_config",
                          "lever": "#/components/schemas/connector.lever.discriminated_connector_config",
                          "linear": "#/components/schemas/connector.linear.discriminated_connector_config",
                          "linkedin": "#/components/schemas/connector.linkedin.discriminated_connector_config",
                          "linkhut": "#/components/schemas/connector.linkhut.discriminated_connector_config",
                          "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connector_config",
                          "miro": "#/components/schemas/connector.miro.discriminated_connector_config",
                          "monday": "#/components/schemas/connector.monday.discriminated_connector_config",
                          "mural": "#/components/schemas/connector.mural.discriminated_connector_config",
                          "namely": "#/components/schemas/connector.namely.discriminated_connector_config",
                          "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connector_config",
                          "netsuite": "#/components/schemas/connector.netsuite.discriminated_connector_config",
                          "notion": "#/components/schemas/connector.notion.discriminated_connector_config",
                          "odoo": "#/components/schemas/connector.odoo.discriminated_connector_config",
                          "okta": "#/components/schemas/connector.okta.discriminated_connector_config",
                          "osu": "#/components/schemas/connector.osu.discriminated_connector_config",
                          "oura": "#/components/schemas/connector.oura.discriminated_connector_config",
                          "outreach": "#/components/schemas/connector.outreach.discriminated_connector_config",
                          "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connector_config",
                          "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connector_config",
                          "payfit": "#/components/schemas/connector.payfit.discriminated_connector_config",
                          "paypal": "#/components/schemas/connector.paypal.discriminated_connector_config",
                          "pennylane": "#/components/schemas/connector.pennylane.discriminated_connector_config",
                          "pinterest": "#/components/schemas/connector.pinterest.discriminated_connector_config",
                          "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connector_config",
                          "podium": "#/components/schemas/connector.podium.discriminated_connector_config",
                          "productboard": "#/components/schemas/connector.productboard.discriminated_connector_config",
                          "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connector_config",
                          "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connector_config",
                          "reddit": "#/components/schemas/connector.reddit.discriminated_connector_config",
                          "sage": "#/components/schemas/connector.sage.discriminated_connector_config",
                          "salesforce": "#/components/schemas/connector.salesforce.discriminated_connector_config",
                          "salesloft": "#/components/schemas/connector.salesloft.discriminated_connector_config",
                          "segment": "#/components/schemas/connector.segment.discriminated_connector_config",
                          "servicem8": "#/components/schemas/connector.servicem8.discriminated_connector_config",
                          "servicenow": "#/components/schemas/connector.servicenow.discriminated_connector_config",
                          "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connector_config",
                          "shopify": "#/components/schemas/connector.shopify.discriminated_connector_config",
                          "signnow": "#/components/schemas/connector.signnow.discriminated_connector_config",
                          "slack": "#/components/schemas/connector.slack.discriminated_connector_config",
                          "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connector_config",
                          "snowflake": "#/components/schemas/connector.snowflake.discriminated_connector_config",
                          "spotify": "#/components/schemas/connector.spotify.discriminated_connector_config",
                          "squarespace": "#/components/schemas/connector.squarespace.discriminated_connector_config",
                          "squareup": "#/components/schemas/connector.squareup.discriminated_connector_config",
                          "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connector_config",
                          "strava": "#/components/schemas/connector.strava.discriminated_connector_config",
                          "teamwork": "#/components/schemas/connector.teamwork.discriminated_connector_config",
                          "ticktick": "#/components/schemas/connector.ticktick.discriminated_connector_config",
                          "timely": "#/components/schemas/connector.timely.discriminated_connector_config",
                          "todoist": "#/components/schemas/connector.todoist.discriminated_connector_config",
                          "tremendous": "#/components/schemas/connector.tremendous.discriminated_connector_config",
                          "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connector_config",
                          "tumblr": "#/components/schemas/connector.tumblr.discriminated_connector_config",
                          "twinfield": "#/components/schemas/connector.twinfield.discriminated_connector_config",
                          "twitch": "#/components/schemas/connector.twitch.discriminated_connector_config",
                          "twitter": "#/components/schemas/connector.twitter.discriminated_connector_config",
                          "typeform": "#/components/schemas/connector.typeform.discriminated_connector_config",
                          "uber": "#/components/schemas/connector.uber.discriminated_connector_config",
                          "vimeo": "#/components/schemas/connector.vimeo.discriminated_connector_config",
                          "wakatime": "#/components/schemas/connector.wakatime.discriminated_connector_config",
                          "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connector_config",
                          "webflow": "#/components/schemas/connector.webflow.discriminated_connector_config",
                          "whoop": "#/components/schemas/connector.whoop.discriminated_connector_config",
                          "wordpress": "#/components/schemas/connector.wordpress.discriminated_connector_config",
                          "wrike": "#/components/schemas/connector.wrike.discriminated_connector_config",
                          "xero": "#/components/schemas/connector.xero.discriminated_connector_config",
                          "yahoo": "#/components/schemas/connector.yahoo.discriminated_connector_config",
                          "yandex": "#/components/schemas/connector.yandex.discriminated_connector_config",
                          "zapier": "#/components/schemas/connector.zapier.discriminated_connector_config",
                          "zendesk": "#/components/schemas/connector.zendesk.discriminated_connector_config",
                          "zenefits": "#/components/schemas/connector.zenefits.discriminated_connector_config",
                          "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connector_config",
                          "zoho": "#/components/schemas/connector.zoho.discriminated_connector_config",
                          "zoom": "#/components/schemas/connector.zoom.discriminated_connector_config",
                          "airtable": "#/components/schemas/connector.airtable.discriminated_connector_config",
                          "apollo": "#/components/schemas/connector.apollo.discriminated_connector_config",
                          "brex": "#/components/schemas/connector.brex.discriminated_connector_config",
                          "coda": "#/components/schemas/connector.coda.discriminated_connector_config",
                          "finch": "#/components/schemas/connector.finch.discriminated_connector_config",
                          "firebase": "#/components/schemas/connector.firebase.discriminated_connector_config",
                          "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connector_config",
                          "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connector_config",
                          "heron": "#/components/schemas/connector.heron.discriminated_connector_config",
                          "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connector_config",
                          "mercury": "#/components/schemas/connector.mercury.discriminated_connector_config",
                          "merge": "#/components/schemas/connector.merge.discriminated_connector_config",
                          "moota": "#/components/schemas/connector.moota.discriminated_connector_config",
                          "onebrick": "#/components/schemas/connector.onebrick.discriminated_connector_config",
                          "openledger": "#/components/schemas/connector.openledger.discriminated_connector_config",
                          "plaid": "#/components/schemas/connector.plaid.discriminated_connector_config",
                          "postgres": "#/components/schemas/connector.postgres.discriminated_connector_config",
                          "ramp": "#/components/schemas/connector.ramp.discriminated_connector_config",
                          "saltedge": "#/components/schemas/connector.saltedge.discriminated_connector_config",
                          "splitwise": "#/components/schemas/connector.splitwise.discriminated_connector_config",
                          "stripe": "#/components/schemas/connector.stripe.discriminated_connector_config",
                          "teller": "#/components/schemas/connector.teller.discriminated_connector_config",
                          "toggl": "#/components/schemas/connector.toggl.discriminated_connector_config",
                          "twenty": "#/components/schemas/connector.twenty.discriminated_connector_config",
                          "venmo": "#/components/schemas/connector.venmo.discriminated_connector_config",
                          "wise": "#/components/schemas/connector.wise.discriminated_connector_config",
                          "yodlee": "#/components/schemas/connector.yodlee.discriminated_connector_config"
                        }
                      },
                      "description": "Connector specific data"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "connector": {
                          "$ref": "#/components/schemas/core.connector"
                        },
                        "integrations": {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/core.integration_select"
                          }
                        },
                        "connection_count": {
                          "type": "number"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connector-config": {
      "get": {
        "operationId": "listConnectorConfigs",
        "summary": "List Configured Connectors",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3000,
              "default": 50,
              "description": "Limit the number of items returned"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Offset the items returned"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "connector",
                  "connector.schemas",
                  "connection_count"
                ],
                "description": "Fields to expand: connector (includes connector details), enabled_integrations (includes enabled integrations details)"
              }
            }
          },
          {
            "in": "query",
            "name": "connector_names",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/core.connector.name"
              }
            }
          },
          {
            "in": "query",
            "name": "search_query",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string"
                              },
                              "org_id": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "disabled": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "metadata": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {},
                                "description": "\n  JSON object can can be used to associate arbitrary metadata to\n  avoid needing a separate 1-1 table just for simple key values in your application.\n  During updates this object will be shallowly merged\n"
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "updated_at",
                              "org_id",
                              "display_name",
                              "disabled"
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/connector.accelo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.adobe.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.adyen.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.aircall.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.amazon.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.apaleo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.asana.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.attio.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.auth0.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.autodesk.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.aws.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bamboohr.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.basecamp.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.battlenet.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bitbucket.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bitly.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.blackbaud.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.boldsign.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.box.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.braintree.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.calendly.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.clickup.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.close.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.confluence.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.contentful.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.contentstack.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.copper.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.coros.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.datev.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.deel.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.dialpad.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.digitalocean.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.discord.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.docusign.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.dropbox.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ebay.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.egnyte.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.envoy.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.eventbrite.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.exist.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.facebook.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.factorial.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.figma.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.fitbit.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.fortnox.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.freshbooks.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.front.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.github.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gitlab.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gong.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-calendar.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-docs.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-drive.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-mail.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-sheet.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gorgias.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.grain.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gumroad.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gusto.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.harvest.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.highlevel.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.hubspot.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.instagram.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.intercom.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.jira.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.keap.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.lever.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linear.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linkedin.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linkhut.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mailchimp.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.miro.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.monday.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mural.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.namely.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.netsuite.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.notion.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.odoo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.okta.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.osu.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.oura.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.outreach.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pagerduty.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pandadoc.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.payfit.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.paypal.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pennylane.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pinterest.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pipedrive.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.podium.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.productboard.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.qualtrics.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.quickbooks.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.reddit.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.sage.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.salesforce.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.salesloft.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.segment.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.servicem8.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.servicenow.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.sharepoint.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.shopify.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.signnow.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.slack.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.smartsheet.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.snowflake.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.spotify.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.squarespace.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.squareup.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.stackexchange.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.strava.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.teamwork.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ticktick.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.timely.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.todoist.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tremendous.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tumblr.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twinfield.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twitch.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twitter.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.typeform.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.uber.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.vimeo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wakatime.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wealthbox.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.webflow.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.whoop.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wordpress.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wrike.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.xero.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yahoo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yandex.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zapier.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zendesk.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zenefits.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoho.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoom.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.airtable.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.apollo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.brex.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.coda.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.finch.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.firebase.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.foreceipt.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.greenhouse.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.heron.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mercury.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.merge.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.moota.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.onebrick.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.openledger.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.plaid.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.postgres.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ramp.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.saltedge.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.splitwise.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.stripe.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.teller.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.toggl.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twenty.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.venmo.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wise.discriminated_connector_config"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yodlee.discriminated_connector_config"
                              }
                            ],
                            "discriminator": {
                              "propertyName": "connector_name",
                              "mapping": {
                                "accelo": "#/components/schemas/connector.accelo.discriminated_connector_config",
                                "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connector_config",
                                "adobe": "#/components/schemas/connector.adobe.discriminated_connector_config",
                                "adyen": "#/components/schemas/connector.adyen.discriminated_connector_config",
                                "aircall": "#/components/schemas/connector.aircall.discriminated_connector_config",
                                "amazon": "#/components/schemas/connector.amazon.discriminated_connector_config",
                                "apaleo": "#/components/schemas/connector.apaleo.discriminated_connector_config",
                                "asana": "#/components/schemas/connector.asana.discriminated_connector_config",
                                "attio": "#/components/schemas/connector.attio.discriminated_connector_config",
                                "auth0": "#/components/schemas/connector.auth0.discriminated_connector_config",
                                "autodesk": "#/components/schemas/connector.autodesk.discriminated_connector_config",
                                "aws": "#/components/schemas/connector.aws.discriminated_connector_config",
                                "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connector_config",
                                "basecamp": "#/components/schemas/connector.basecamp.discriminated_connector_config",
                                "battlenet": "#/components/schemas/connector.battlenet.discriminated_connector_config",
                                "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connector_config",
                                "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connector_config",
                                "bitly": "#/components/schemas/connector.bitly.discriminated_connector_config",
                                "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connector_config",
                                "boldsign": "#/components/schemas/connector.boldsign.discriminated_connector_config",
                                "box": "#/components/schemas/connector.box.discriminated_connector_config",
                                "braintree": "#/components/schemas/connector.braintree.discriminated_connector_config",
                                "calendly": "#/components/schemas/connector.calendly.discriminated_connector_config",
                                "clickup": "#/components/schemas/connector.clickup.discriminated_connector_config",
                                "close": "#/components/schemas/connector.close.discriminated_connector_config",
                                "confluence": "#/components/schemas/connector.confluence.discriminated_connector_config",
                                "contentful": "#/components/schemas/connector.contentful.discriminated_connector_config",
                                "contentstack": "#/components/schemas/connector.contentstack.discriminated_connector_config",
                                "copper": "#/components/schemas/connector.copper.discriminated_connector_config",
                                "coros": "#/components/schemas/connector.coros.discriminated_connector_config",
                                "datev": "#/components/schemas/connector.datev.discriminated_connector_config",
                                "deel": "#/components/schemas/connector.deel.discriminated_connector_config",
                                "dialpad": "#/components/schemas/connector.dialpad.discriminated_connector_config",
                                "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connector_config",
                                "discord": "#/components/schemas/connector.discord.discriminated_connector_config",
                                "docusign": "#/components/schemas/connector.docusign.discriminated_connector_config",
                                "dropbox": "#/components/schemas/connector.dropbox.discriminated_connector_config",
                                "ebay": "#/components/schemas/connector.ebay.discriminated_connector_config",
                                "egnyte": "#/components/schemas/connector.egnyte.discriminated_connector_config",
                                "envoy": "#/components/schemas/connector.envoy.discriminated_connector_config",
                                "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connector_config",
                                "exist": "#/components/schemas/connector.exist.discriminated_connector_config",
                                "facebook": "#/components/schemas/connector.facebook.discriminated_connector_config",
                                "factorial": "#/components/schemas/connector.factorial.discriminated_connector_config",
                                "figma": "#/components/schemas/connector.figma.discriminated_connector_config",
                                "fitbit": "#/components/schemas/connector.fitbit.discriminated_connector_config",
                                "fortnox": "#/components/schemas/connector.fortnox.discriminated_connector_config",
                                "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connector_config",
                                "front": "#/components/schemas/connector.front.discriminated_connector_config",
                                "github": "#/components/schemas/connector.github.discriminated_connector_config",
                                "gitlab": "#/components/schemas/connector.gitlab.discriminated_connector_config",
                                "gong": "#/components/schemas/connector.gong.discriminated_connector_config",
                                "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connector_config",
                                "google-docs": "#/components/schemas/connector.google-docs.discriminated_connector_config",
                                "google-drive": "#/components/schemas/connector.google-drive.discriminated_connector_config",
                                "google-mail": "#/components/schemas/connector.google-mail.discriminated_connector_config",
                                "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connector_config",
                                "gorgias": "#/components/schemas/connector.gorgias.discriminated_connector_config",
                                "grain": "#/components/schemas/connector.grain.discriminated_connector_config",
                                "gumroad": "#/components/schemas/connector.gumroad.discriminated_connector_config",
                                "gusto": "#/components/schemas/connector.gusto.discriminated_connector_config",
                                "harvest": "#/components/schemas/connector.harvest.discriminated_connector_config",
                                "highlevel": "#/components/schemas/connector.highlevel.discriminated_connector_config",
                                "hubspot": "#/components/schemas/connector.hubspot.discriminated_connector_config",
                                "instagram": "#/components/schemas/connector.instagram.discriminated_connector_config",
                                "intercom": "#/components/schemas/connector.intercom.discriminated_connector_config",
                                "jira": "#/components/schemas/connector.jira.discriminated_connector_config",
                                "keap": "#/components/schemas/connector.keap.discriminated_connector_config",
                                "lever": "#/components/schemas/connector.lever.discriminated_connector_config",
                                "linear": "#/components/schemas/connector.linear.discriminated_connector_config",
                                "linkedin": "#/components/schemas/connector.linkedin.discriminated_connector_config",
                                "linkhut": "#/components/schemas/connector.linkhut.discriminated_connector_config",
                                "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connector_config",
                                "miro": "#/components/schemas/connector.miro.discriminated_connector_config",
                                "monday": "#/components/schemas/connector.monday.discriminated_connector_config",
                                "mural": "#/components/schemas/connector.mural.discriminated_connector_config",
                                "namely": "#/components/schemas/connector.namely.discriminated_connector_config",
                                "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connector_config",
                                "netsuite": "#/components/schemas/connector.netsuite.discriminated_connector_config",
                                "notion": "#/components/schemas/connector.notion.discriminated_connector_config",
                                "odoo": "#/components/schemas/connector.odoo.discriminated_connector_config",
                                "okta": "#/components/schemas/connector.okta.discriminated_connector_config",
                                "osu": "#/components/schemas/connector.osu.discriminated_connector_config",
                                "oura": "#/components/schemas/connector.oura.discriminated_connector_config",
                                "outreach": "#/components/schemas/connector.outreach.discriminated_connector_config",
                                "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connector_config",
                                "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connector_config",
                                "payfit": "#/components/schemas/connector.payfit.discriminated_connector_config",
                                "paypal": "#/components/schemas/connector.paypal.discriminated_connector_config",
                                "pennylane": "#/components/schemas/connector.pennylane.discriminated_connector_config",
                                "pinterest": "#/components/schemas/connector.pinterest.discriminated_connector_config",
                                "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connector_config",
                                "podium": "#/components/schemas/connector.podium.discriminated_connector_config",
                                "productboard": "#/components/schemas/connector.productboard.discriminated_connector_config",
                                "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connector_config",
                                "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connector_config",
                                "reddit": "#/components/schemas/connector.reddit.discriminated_connector_config",
                                "sage": "#/components/schemas/connector.sage.discriminated_connector_config",
                                "salesforce": "#/components/schemas/connector.salesforce.discriminated_connector_config",
                                "salesloft": "#/components/schemas/connector.salesloft.discriminated_connector_config",
                                "segment": "#/components/schemas/connector.segment.discriminated_connector_config",
                                "servicem8": "#/components/schemas/connector.servicem8.discriminated_connector_config",
                                "servicenow": "#/components/schemas/connector.servicenow.discriminated_connector_config",
                                "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connector_config",
                                "shopify": "#/components/schemas/connector.shopify.discriminated_connector_config",
                                "signnow": "#/components/schemas/connector.signnow.discriminated_connector_config",
                                "slack": "#/components/schemas/connector.slack.discriminated_connector_config",
                                "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connector_config",
                                "snowflake": "#/components/schemas/connector.snowflake.discriminated_connector_config",
                                "spotify": "#/components/schemas/connector.spotify.discriminated_connector_config",
                                "squarespace": "#/components/schemas/connector.squarespace.discriminated_connector_config",
                                "squareup": "#/components/schemas/connector.squareup.discriminated_connector_config",
                                "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connector_config",
                                "strava": "#/components/schemas/connector.strava.discriminated_connector_config",
                                "teamwork": "#/components/schemas/connector.teamwork.discriminated_connector_config",
                                "ticktick": "#/components/schemas/connector.ticktick.discriminated_connector_config",
                                "timely": "#/components/schemas/connector.timely.discriminated_connector_config",
                                "todoist": "#/components/schemas/connector.todoist.discriminated_connector_config",
                                "tremendous": "#/components/schemas/connector.tremendous.discriminated_connector_config",
                                "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connector_config",
                                "tumblr": "#/components/schemas/connector.tumblr.discriminated_connector_config",
                                "twinfield": "#/components/schemas/connector.twinfield.discriminated_connector_config",
                                "twitch": "#/components/schemas/connector.twitch.discriminated_connector_config",
                                "twitter": "#/components/schemas/connector.twitter.discriminated_connector_config",
                                "typeform": "#/components/schemas/connector.typeform.discriminated_connector_config",
                                "uber": "#/components/schemas/connector.uber.discriminated_connector_config",
                                "vimeo": "#/components/schemas/connector.vimeo.discriminated_connector_config",
                                "wakatime": "#/components/schemas/connector.wakatime.discriminated_connector_config",
                                "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connector_config",
                                "webflow": "#/components/schemas/connector.webflow.discriminated_connector_config",
                                "whoop": "#/components/schemas/connector.whoop.discriminated_connector_config",
                                "wordpress": "#/components/schemas/connector.wordpress.discriminated_connector_config",
                                "wrike": "#/components/schemas/connector.wrike.discriminated_connector_config",
                                "xero": "#/components/schemas/connector.xero.discriminated_connector_config",
                                "yahoo": "#/components/schemas/connector.yahoo.discriminated_connector_config",
                                "yandex": "#/components/schemas/connector.yandex.discriminated_connector_config",
                                "zapier": "#/components/schemas/connector.zapier.discriminated_connector_config",
                                "zendesk": "#/components/schemas/connector.zendesk.discriminated_connector_config",
                                "zenefits": "#/components/schemas/connector.zenefits.discriminated_connector_config",
                                "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connector_config",
                                "zoho": "#/components/schemas/connector.zoho.discriminated_connector_config",
                                "zoom": "#/components/schemas/connector.zoom.discriminated_connector_config",
                                "airtable": "#/components/schemas/connector.airtable.discriminated_connector_config",
                                "apollo": "#/components/schemas/connector.apollo.discriminated_connector_config",
                                "brex": "#/components/schemas/connector.brex.discriminated_connector_config",
                                "coda": "#/components/schemas/connector.coda.discriminated_connector_config",
                                "finch": "#/components/schemas/connector.finch.discriminated_connector_config",
                                "firebase": "#/components/schemas/connector.firebase.discriminated_connector_config",
                                "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connector_config",
                                "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connector_config",
                                "heron": "#/components/schemas/connector.heron.discriminated_connector_config",
                                "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connector_config",
                                "mercury": "#/components/schemas/connector.mercury.discriminated_connector_config",
                                "merge": "#/components/schemas/connector.merge.discriminated_connector_config",
                                "moota": "#/components/schemas/connector.moota.discriminated_connector_config",
                                "onebrick": "#/components/schemas/connector.onebrick.discriminated_connector_config",
                                "openledger": "#/components/schemas/connector.openledger.discriminated_connector_config",
                                "plaid": "#/components/schemas/connector.plaid.discriminated_connector_config",
                                "postgres": "#/components/schemas/connector.postgres.discriminated_connector_config",
                                "ramp": "#/components/schemas/connector.ramp.discriminated_connector_config",
                                "saltedge": "#/components/schemas/connector.saltedge.discriminated_connector_config",
                                "splitwise": "#/components/schemas/connector.splitwise.discriminated_connector_config",
                                "stripe": "#/components/schemas/connector.stripe.discriminated_connector_config",
                                "teller": "#/components/schemas/connector.teller.discriminated_connector_config",
                                "toggl": "#/components/schemas/connector.toggl.discriminated_connector_config",
                                "twenty": "#/components/schemas/connector.twenty.discriminated_connector_config",
                                "venmo": "#/components/schemas/connector.venmo.discriminated_connector_config",
                                "wise": "#/components/schemas/connector.wise.discriminated_connector_config",
                                "yodlee": "#/components/schemas/connector.yodlee.discriminated_connector_config"
                              }
                            },
                            "description": "Connector specific data"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "connector": {
                                "$ref": "#/components/schemas/core.connector"
                              },
                              "integrations": {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/core.integration_select"
                                }
                              },
                              "connection_count": {
                                "type": "number"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of items in the database for the organization"
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Limit the number of items returned"
                    },
                    "offset": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Offset the items returned"
                    },
                    "has_next_page": {
                      "type": "boolean",
                      "description": "Convenience flag = offset + limit >= total"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "limit",
                    "offset"
                  ],
                  "description": "The list of connector configurations"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connection/{id}": {
      "get": {
        "operationId": "getConnection",
        "summary": "Get Connection",
        "description": "Get details of a specific connection, including credentials",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the connection, starts with `conn_`",
            "schema": {
              "type": "string",
              "pattern": "^conn_",
              "description": "The id of the connection, starts with `conn_`"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "include_secrets",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "refresh_policy",
            "description": "Controls credential refresh: none (never), force (always), or auto (when expired, default)",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "force",
                "auto"
              ],
              "description": "Controls credential refresh: none (never), force (always), or auto (when expired, default)",
              "default": "auto"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "connector"
                ],
                "description": "Fields to expand: connector (includes connector details)"
              },
              "default": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "customer_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "connector_config_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "integration_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "status_message": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "disabled": {
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "status": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "healthy",
                            "disconnected",
                            "error",
                            "manual",
                            "unknown",
                            null
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {},
                          "description": "\n  JSON object can can be used to associate arbitrary metadata to\n  avoid needing a separate 1-1 table just for simple key values in your application.\n  During updates this object will be shallowly merged\n"
                        }
                      },
                      "required": [
                        "id",
                        "customer_id",
                        "connector_config_id",
                        "integration_id",
                        "created_at",
                        "updated_at",
                        "display_name",
                        "disabled"
                      ]
                    },
                    {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/connector.accelo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.adobe.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.adyen.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.aircall.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.amazon.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.apaleo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.asana.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.attio.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.auth0.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.autodesk.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.aws.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bamboohr.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.basecamp.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.battlenet.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bitbucket.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.bitly.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.blackbaud.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.boldsign.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.box.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.braintree.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.calendly.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.clickup.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.close.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.confluence.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.contentful.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.contentstack.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.copper.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.coros.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.datev.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.deel.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.dialpad.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.digitalocean.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.discord.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.docusign.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.dropbox.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ebay.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.egnyte.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.envoy.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.eventbrite.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.exist.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.facebook.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.factorial.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.figma.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.fitbit.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.fortnox.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.freshbooks.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.front.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.github.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gitlab.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gong.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-calendar.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-docs.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-drive.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-mail.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.google-sheet.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gorgias.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.grain.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gumroad.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.gusto.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.harvest.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.highlevel.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.hubspot.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.instagram.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.intercom.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.jira.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.keap.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.lever.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linear.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linkedin.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.linkhut.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mailchimp.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.miro.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.monday.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mural.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.namely.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.netsuite.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.notion.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.odoo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.okta.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.osu.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.oura.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.outreach.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pagerduty.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pandadoc.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.payfit.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.paypal.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pennylane.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pinterest.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.pipedrive.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.podium.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.productboard.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.qualtrics.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.quickbooks.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.reddit.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.sage.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.salesforce.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.salesloft.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.segment.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.servicem8.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.servicenow.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.sharepoint.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.shopify.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.signnow.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.slack.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.smartsheet.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.snowflake.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.spotify.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.squarespace.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.squareup.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.stackexchange.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.strava.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.teamwork.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ticktick.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.timely.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.todoist.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tremendous.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.tumblr.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twinfield.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twitch.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twitter.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.typeform.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.uber.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.vimeo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wakatime.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wealthbox.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.webflow.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.whoop.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wordpress.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wrike.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.xero.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yahoo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yandex.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zapier.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zendesk.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zenefits.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoho.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.zoom.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.airtable.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.apollo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.brex.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.coda.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.finch.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.firebase.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.foreceipt.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.greenhouse.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.heron.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.mercury.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.merge.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.moota.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.onebrick.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.openledger.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.plaid.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.postgres.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.ramp.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.saltedge.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.splitwise.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.stripe.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.teller.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.toggl.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.twenty.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.venmo.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.wise.discriminated_connection_settings"
                        },
                        {
                          "$ref": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                        }
                      ],
                      "discriminator": {
                        "propertyName": "connector_name",
                        "mapping": {
                          "accelo": "#/components/schemas/connector.accelo.discriminated_connection_settings",
                          "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings",
                          "adobe": "#/components/schemas/connector.adobe.discriminated_connection_settings",
                          "adyen": "#/components/schemas/connector.adyen.discriminated_connection_settings",
                          "aircall": "#/components/schemas/connector.aircall.discriminated_connection_settings",
                          "amazon": "#/components/schemas/connector.amazon.discriminated_connection_settings",
                          "apaleo": "#/components/schemas/connector.apaleo.discriminated_connection_settings",
                          "asana": "#/components/schemas/connector.asana.discriminated_connection_settings",
                          "attio": "#/components/schemas/connector.attio.discriminated_connection_settings",
                          "auth0": "#/components/schemas/connector.auth0.discriminated_connection_settings",
                          "autodesk": "#/components/schemas/connector.autodesk.discriminated_connection_settings",
                          "aws": "#/components/schemas/connector.aws.discriminated_connection_settings",
                          "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connection_settings",
                          "basecamp": "#/components/schemas/connector.basecamp.discriminated_connection_settings",
                          "battlenet": "#/components/schemas/connector.battlenet.discriminated_connection_settings",
                          "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings",
                          "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connection_settings",
                          "bitly": "#/components/schemas/connector.bitly.discriminated_connection_settings",
                          "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connection_settings",
                          "boldsign": "#/components/schemas/connector.boldsign.discriminated_connection_settings",
                          "box": "#/components/schemas/connector.box.discriminated_connection_settings",
                          "braintree": "#/components/schemas/connector.braintree.discriminated_connection_settings",
                          "calendly": "#/components/schemas/connector.calendly.discriminated_connection_settings",
                          "clickup": "#/components/schemas/connector.clickup.discriminated_connection_settings",
                          "close": "#/components/schemas/connector.close.discriminated_connection_settings",
                          "confluence": "#/components/schemas/connector.confluence.discriminated_connection_settings",
                          "contentful": "#/components/schemas/connector.contentful.discriminated_connection_settings",
                          "contentstack": "#/components/schemas/connector.contentstack.discriminated_connection_settings",
                          "copper": "#/components/schemas/connector.copper.discriminated_connection_settings",
                          "coros": "#/components/schemas/connector.coros.discriminated_connection_settings",
                          "datev": "#/components/schemas/connector.datev.discriminated_connection_settings",
                          "deel": "#/components/schemas/connector.deel.discriminated_connection_settings",
                          "dialpad": "#/components/schemas/connector.dialpad.discriminated_connection_settings",
                          "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connection_settings",
                          "discord": "#/components/schemas/connector.discord.discriminated_connection_settings",
                          "docusign": "#/components/schemas/connector.docusign.discriminated_connection_settings",
                          "dropbox": "#/components/schemas/connector.dropbox.discriminated_connection_settings",
                          "ebay": "#/components/schemas/connector.ebay.discriminated_connection_settings",
                          "egnyte": "#/components/schemas/connector.egnyte.discriminated_connection_settings",
                          "envoy": "#/components/schemas/connector.envoy.discriminated_connection_settings",
                          "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connection_settings",
                          "exist": "#/components/schemas/connector.exist.discriminated_connection_settings",
                          "facebook": "#/components/schemas/connector.facebook.discriminated_connection_settings",
                          "factorial": "#/components/schemas/connector.factorial.discriminated_connection_settings",
                          "figma": "#/components/schemas/connector.figma.discriminated_connection_settings",
                          "fitbit": "#/components/schemas/connector.fitbit.discriminated_connection_settings",
                          "fortnox": "#/components/schemas/connector.fortnox.discriminated_connection_settings",
                          "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connection_settings",
                          "front": "#/components/schemas/connector.front.discriminated_connection_settings",
                          "github": "#/components/schemas/connector.github.discriminated_connection_settings",
                          "gitlab": "#/components/schemas/connector.gitlab.discriminated_connection_settings",
                          "gong": "#/components/schemas/connector.gong.discriminated_connection_settings",
                          "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connection_settings",
                          "google-docs": "#/components/schemas/connector.google-docs.discriminated_connection_settings",
                          "google-drive": "#/components/schemas/connector.google-drive.discriminated_connection_settings",
                          "google-mail": "#/components/schemas/connector.google-mail.discriminated_connection_settings",
                          "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connection_settings",
                          "gorgias": "#/components/schemas/connector.gorgias.discriminated_connection_settings",
                          "grain": "#/components/schemas/connector.grain.discriminated_connection_settings",
                          "gumroad": "#/components/schemas/connector.gumroad.discriminated_connection_settings",
                          "gusto": "#/components/schemas/connector.gusto.discriminated_connection_settings",
                          "harvest": "#/components/schemas/connector.harvest.discriminated_connection_settings",
                          "highlevel": "#/components/schemas/connector.highlevel.discriminated_connection_settings",
                          "hubspot": "#/components/schemas/connector.hubspot.discriminated_connection_settings",
                          "instagram": "#/components/schemas/connector.instagram.discriminated_connection_settings",
                          "intercom": "#/components/schemas/connector.intercom.discriminated_connection_settings",
                          "jira": "#/components/schemas/connector.jira.discriminated_connection_settings",
                          "keap": "#/components/schemas/connector.keap.discriminated_connection_settings",
                          "lever": "#/components/schemas/connector.lever.discriminated_connection_settings",
                          "linear": "#/components/schemas/connector.linear.discriminated_connection_settings",
                          "linkedin": "#/components/schemas/connector.linkedin.discriminated_connection_settings",
                          "linkhut": "#/components/schemas/connector.linkhut.discriminated_connection_settings",
                          "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connection_settings",
                          "miro": "#/components/schemas/connector.miro.discriminated_connection_settings",
                          "monday": "#/components/schemas/connector.monday.discriminated_connection_settings",
                          "mural": "#/components/schemas/connector.mural.discriminated_connection_settings",
                          "namely": "#/components/schemas/connector.namely.discriminated_connection_settings",
                          "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings",
                          "netsuite": "#/components/schemas/connector.netsuite.discriminated_connection_settings",
                          "notion": "#/components/schemas/connector.notion.discriminated_connection_settings",
                          "odoo": "#/components/schemas/connector.odoo.discriminated_connection_settings",
                          "okta": "#/components/schemas/connector.okta.discriminated_connection_settings",
                          "osu": "#/components/schemas/connector.osu.discriminated_connection_settings",
                          "oura": "#/components/schemas/connector.oura.discriminated_connection_settings",
                          "outreach": "#/components/schemas/connector.outreach.discriminated_connection_settings",
                          "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connection_settings",
                          "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connection_settings",
                          "payfit": "#/components/schemas/connector.payfit.discriminated_connection_settings",
                          "paypal": "#/components/schemas/connector.paypal.discriminated_connection_settings",
                          "pennylane": "#/components/schemas/connector.pennylane.discriminated_connection_settings",
                          "pinterest": "#/components/schemas/connector.pinterest.discriminated_connection_settings",
                          "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connection_settings",
                          "podium": "#/components/schemas/connector.podium.discriminated_connection_settings",
                          "productboard": "#/components/schemas/connector.productboard.discriminated_connection_settings",
                          "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connection_settings",
                          "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connection_settings",
                          "reddit": "#/components/schemas/connector.reddit.discriminated_connection_settings",
                          "sage": "#/components/schemas/connector.sage.discriminated_connection_settings",
                          "salesforce": "#/components/schemas/connector.salesforce.discriminated_connection_settings",
                          "salesloft": "#/components/schemas/connector.salesloft.discriminated_connection_settings",
                          "segment": "#/components/schemas/connector.segment.discriminated_connection_settings",
                          "servicem8": "#/components/schemas/connector.servicem8.discriminated_connection_settings",
                          "servicenow": "#/components/schemas/connector.servicenow.discriminated_connection_settings",
                          "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connection_settings",
                          "shopify": "#/components/schemas/connector.shopify.discriminated_connection_settings",
                          "signnow": "#/components/schemas/connector.signnow.discriminated_connection_settings",
                          "slack": "#/components/schemas/connector.slack.discriminated_connection_settings",
                          "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connection_settings",
                          "snowflake": "#/components/schemas/connector.snowflake.discriminated_connection_settings",
                          "spotify": "#/components/schemas/connector.spotify.discriminated_connection_settings",
                          "squarespace": "#/components/schemas/connector.squarespace.discriminated_connection_settings",
                          "squareup": "#/components/schemas/connector.squareup.discriminated_connection_settings",
                          "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connection_settings",
                          "strava": "#/components/schemas/connector.strava.discriminated_connection_settings",
                          "teamwork": "#/components/schemas/connector.teamwork.discriminated_connection_settings",
                          "ticktick": "#/components/schemas/connector.ticktick.discriminated_connection_settings",
                          "timely": "#/components/schemas/connector.timely.discriminated_connection_settings",
                          "todoist": "#/components/schemas/connector.todoist.discriminated_connection_settings",
                          "tremendous": "#/components/schemas/connector.tremendous.discriminated_connection_settings",
                          "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings",
                          "tumblr": "#/components/schemas/connector.tumblr.discriminated_connection_settings",
                          "twinfield": "#/components/schemas/connector.twinfield.discriminated_connection_settings",
                          "twitch": "#/components/schemas/connector.twitch.discriminated_connection_settings",
                          "twitter": "#/components/schemas/connector.twitter.discriminated_connection_settings",
                          "typeform": "#/components/schemas/connector.typeform.discriminated_connection_settings",
                          "uber": "#/components/schemas/connector.uber.discriminated_connection_settings",
                          "vimeo": "#/components/schemas/connector.vimeo.discriminated_connection_settings",
                          "wakatime": "#/components/schemas/connector.wakatime.discriminated_connection_settings",
                          "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connection_settings",
                          "webflow": "#/components/schemas/connector.webflow.discriminated_connection_settings",
                          "whoop": "#/components/schemas/connector.whoop.discriminated_connection_settings",
                          "wordpress": "#/components/schemas/connector.wordpress.discriminated_connection_settings",
                          "wrike": "#/components/schemas/connector.wrike.discriminated_connection_settings",
                          "xero": "#/components/schemas/connector.xero.discriminated_connection_settings",
                          "yahoo": "#/components/schemas/connector.yahoo.discriminated_connection_settings",
                          "yandex": "#/components/schemas/connector.yandex.discriminated_connection_settings",
                          "zapier": "#/components/schemas/connector.zapier.discriminated_connection_settings",
                          "zendesk": "#/components/schemas/connector.zendesk.discriminated_connection_settings",
                          "zenefits": "#/components/schemas/connector.zenefits.discriminated_connection_settings",
                          "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings",
                          "zoho": "#/components/schemas/connector.zoho.discriminated_connection_settings",
                          "zoom": "#/components/schemas/connector.zoom.discriminated_connection_settings",
                          "airtable": "#/components/schemas/connector.airtable.discriminated_connection_settings",
                          "apollo": "#/components/schemas/connector.apollo.discriminated_connection_settings",
                          "brex": "#/components/schemas/connector.brex.discriminated_connection_settings",
                          "coda": "#/components/schemas/connector.coda.discriminated_connection_settings",
                          "finch": "#/components/schemas/connector.finch.discriminated_connection_settings",
                          "firebase": "#/components/schemas/connector.firebase.discriminated_connection_settings",
                          "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connection_settings",
                          "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connection_settings",
                          "heron": "#/components/schemas/connector.heron.discriminated_connection_settings",
                          "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings",
                          "mercury": "#/components/schemas/connector.mercury.discriminated_connection_settings",
                          "merge": "#/components/schemas/connector.merge.discriminated_connection_settings",
                          "moota": "#/components/schemas/connector.moota.discriminated_connection_settings",
                          "onebrick": "#/components/schemas/connector.onebrick.discriminated_connection_settings",
                          "openledger": "#/components/schemas/connector.openledger.discriminated_connection_settings",
                          "plaid": "#/components/schemas/connector.plaid.discriminated_connection_settings",
                          "postgres": "#/components/schemas/connector.postgres.discriminated_connection_settings",
                          "ramp": "#/components/schemas/connector.ramp.discriminated_connection_settings",
                          "saltedge": "#/components/schemas/connector.saltedge.discriminated_connection_settings",
                          "splitwise": "#/components/schemas/connector.splitwise.discriminated_connection_settings",
                          "stripe": "#/components/schemas/connector.stripe.discriminated_connection_settings",
                          "teller": "#/components/schemas/connector.teller.discriminated_connection_settings",
                          "toggl": "#/components/schemas/connector.toggl.discriminated_connection_settings",
                          "twenty": "#/components/schemas/connector.twenty.discriminated_connection_settings",
                          "venmo": "#/components/schemas/connector.venmo.discriminated_connection_settings",
                          "wise": "#/components/schemas/connector.wise.discriminated_connection_settings",
                          "yodlee": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                        }
                      },
                      "description": "Connector specific data"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "connector": {
                          "$ref": "#/components/schemas/core.connector"
                        },
                        "integration": {
                          "$ref": "#/components/schemas/core.integration_select"
                        }
                      }
                    }
                  ],
                  "description": "The connection details"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteConnection",
        "summary": "Delete Connection",
        "description": "Delete a connection",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the connection, starts with `conn_`",
            "schema": {
              "type": "string",
              "pattern": "^conn_",
              "description": "The id of the connection, starts with `conn_`"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^conn_",
                      "description": "The id of the connection, starts with `conn_`"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connection": {
      "get": {
        "operationId": "listConnections",
        "summary": "List Connections",
        "description": "List all connections with optional filtering. Does not retrieve secrets or perform any connection healthcheck. For that use `getConnection` or `checkConnectionHealth`.",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3000,
              "default": 50,
              "description": "Limit the number of items returned"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Offset the items returned"
            }
          },
          {
            "in": "query",
            "name": "connector_names",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/core.connector.name"
              }
            }
          },
          {
            "in": "query",
            "name": "customer_id",
            "description": "The id of the customer in your application. Ensure it is unique for that customer.",
            "schema": {
              "type": "string",
              "description": "The id of the customer in your application. Ensure it is unique for that customer."
            }
          },
          {
            "in": "query",
            "name": "connector_config_id",
            "description": "The id of the connector config, starts with `ccfg_`",
            "schema": {
              "type": "string",
              "pattern": "^ccfg_",
              "description": "The id of the connector config, starts with `ccfg_`"
            }
          },
          {
            "in": "query",
            "name": "include_secrets",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "connector"
                ],
                "description": "Fields to expand: connector (includes connector details)"
              },
              "default": [],
              "description": "Expand the response with additional optionals"
            }
          },
          {
            "in": "query",
            "name": "search_query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh_policy",
            "description": "Controls credential refresh: none (never), force (always), or auto (when expired, default)",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "force",
                "auto"
              ],
              "description": "Controls credential refresh: none (never), force (always), or auto (when expired, default)",
              "default": "none"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "customer_id": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "connector_config_id": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "integration_id": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "status_message": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "disabled": {
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "status": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "enum": [
                                  "healthy",
                                  "disconnected",
                                  "error",
                                  "manual",
                                  "unknown",
                                  null
                                ]
                              },
                              "metadata": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {},
                                "description": "\n  JSON object can can be used to associate arbitrary metadata to\n  avoid needing a separate 1-1 table just for simple key values in your application.\n  During updates this object will be shallowly merged\n"
                              }
                            },
                            "required": [
                              "id",
                              "customer_id",
                              "connector_config_id",
                              "integration_id",
                              "created_at",
                              "updated_at",
                              "display_name",
                              "disabled"
                            ]
                          },
                          {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/connector.accelo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.adobe.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.adyen.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.aircall.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.amazon.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.apaleo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.asana.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.attio.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.auth0.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.autodesk.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.aws.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bamboohr.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.basecamp.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.battlenet.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bitbucket.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.bitly.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.blackbaud.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.boldsign.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.box.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.braintree.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.calendly.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.clickup.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.close.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.confluence.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.contentful.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.contentstack.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.copper.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.coros.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.datev.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.deel.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.dialpad.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.digitalocean.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.discord.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.docusign.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.dropbox.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ebay.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.egnyte.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.envoy.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.eventbrite.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.exist.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.facebook.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.factorial.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.figma.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.fitbit.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.fortnox.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.freshbooks.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.front.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.github.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gitlab.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gong.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-calendar.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-docs.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-drive.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-mail.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.google-sheet.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gorgias.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.grain.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gumroad.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.gusto.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.harvest.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.highlevel.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.hubspot.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.instagram.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.intercom.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.jira.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.keap.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.lever.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linear.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linkedin.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.linkhut.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mailchimp.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.miro.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.monday.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mural.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.namely.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.netsuite.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.notion.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.odoo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.okta.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.osu.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.oura.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.outreach.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pagerduty.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pandadoc.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.payfit.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.paypal.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pennylane.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pinterest.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.pipedrive.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.podium.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.productboard.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.qualtrics.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.quickbooks.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.reddit.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.sage.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.salesforce.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.salesloft.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.segment.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.servicem8.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.servicenow.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.sharepoint.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.shopify.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.signnow.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.slack.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.smartsheet.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.snowflake.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.spotify.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.squarespace.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.squareup.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.stackexchange.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.strava.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.teamwork.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ticktick.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.timely.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.todoist.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tremendous.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.tumblr.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twinfield.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twitch.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twitter.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.typeform.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.uber.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.vimeo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wakatime.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wealthbox.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.webflow.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.whoop.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wordpress.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wrike.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.xero.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yahoo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yandex.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zapier.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zendesk.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zenefits.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoho.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.zoom.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.airtable.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.apollo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.brex.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.coda.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.finch.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.firebase.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.foreceipt.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.greenhouse.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.heron.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.mercury.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.merge.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.moota.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.onebrick.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.openledger.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.plaid.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.postgres.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.ramp.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.saltedge.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.splitwise.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.stripe.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.teller.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.toggl.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.twenty.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.venmo.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.wise.discriminated_connection_settings"
                              },
                              {
                                "$ref": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                              }
                            ],
                            "discriminator": {
                              "propertyName": "connector_name",
                              "mapping": {
                                "accelo": "#/components/schemas/connector.accelo.discriminated_connection_settings",
                                "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings",
                                "adobe": "#/components/schemas/connector.adobe.discriminated_connection_settings",
                                "adyen": "#/components/schemas/connector.adyen.discriminated_connection_settings",
                                "aircall": "#/components/schemas/connector.aircall.discriminated_connection_settings",
                                "amazon": "#/components/schemas/connector.amazon.discriminated_connection_settings",
                                "apaleo": "#/components/schemas/connector.apaleo.discriminated_connection_settings",
                                "asana": "#/components/schemas/connector.asana.discriminated_connection_settings",
                                "attio": "#/components/schemas/connector.attio.discriminated_connection_settings",
                                "auth0": "#/components/schemas/connector.auth0.discriminated_connection_settings",
                                "autodesk": "#/components/schemas/connector.autodesk.discriminated_connection_settings",
                                "aws": "#/components/schemas/connector.aws.discriminated_connection_settings",
                                "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connection_settings",
                                "basecamp": "#/components/schemas/connector.basecamp.discriminated_connection_settings",
                                "battlenet": "#/components/schemas/connector.battlenet.discriminated_connection_settings",
                                "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings",
                                "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connection_settings",
                                "bitly": "#/components/schemas/connector.bitly.discriminated_connection_settings",
                                "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connection_settings",
                                "boldsign": "#/components/schemas/connector.boldsign.discriminated_connection_settings",
                                "box": "#/components/schemas/connector.box.discriminated_connection_settings",
                                "braintree": "#/components/schemas/connector.braintree.discriminated_connection_settings",
                                "calendly": "#/components/schemas/connector.calendly.discriminated_connection_settings",
                                "clickup": "#/components/schemas/connector.clickup.discriminated_connection_settings",
                                "close": "#/components/schemas/connector.close.discriminated_connection_settings",
                                "confluence": "#/components/schemas/connector.confluence.discriminated_connection_settings",
                                "contentful": "#/components/schemas/connector.contentful.discriminated_connection_settings",
                                "contentstack": "#/components/schemas/connector.contentstack.discriminated_connection_settings",
                                "copper": "#/components/schemas/connector.copper.discriminated_connection_settings",
                                "coros": "#/components/schemas/connector.coros.discriminated_connection_settings",
                                "datev": "#/components/schemas/connector.datev.discriminated_connection_settings",
                                "deel": "#/components/schemas/connector.deel.discriminated_connection_settings",
                                "dialpad": "#/components/schemas/connector.dialpad.discriminated_connection_settings",
                                "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connection_settings",
                                "discord": "#/components/schemas/connector.discord.discriminated_connection_settings",
                                "docusign": "#/components/schemas/connector.docusign.discriminated_connection_settings",
                                "dropbox": "#/components/schemas/connector.dropbox.discriminated_connection_settings",
                                "ebay": "#/components/schemas/connector.ebay.discriminated_connection_settings",
                                "egnyte": "#/components/schemas/connector.egnyte.discriminated_connection_settings",
                                "envoy": "#/components/schemas/connector.envoy.discriminated_connection_settings",
                                "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connection_settings",
                                "exist": "#/components/schemas/connector.exist.discriminated_connection_settings",
                                "facebook": "#/components/schemas/connector.facebook.discriminated_connection_settings",
                                "factorial": "#/components/schemas/connector.factorial.discriminated_connection_settings",
                                "figma": "#/components/schemas/connector.figma.discriminated_connection_settings",
                                "fitbit": "#/components/schemas/connector.fitbit.discriminated_connection_settings",
                                "fortnox": "#/components/schemas/connector.fortnox.discriminated_connection_settings",
                                "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connection_settings",
                                "front": "#/components/schemas/connector.front.discriminated_connection_settings",
                                "github": "#/components/schemas/connector.github.discriminated_connection_settings",
                                "gitlab": "#/components/schemas/connector.gitlab.discriminated_connection_settings",
                                "gong": "#/components/schemas/connector.gong.discriminated_connection_settings",
                                "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connection_settings",
                                "google-docs": "#/components/schemas/connector.google-docs.discriminated_connection_settings",
                                "google-drive": "#/components/schemas/connector.google-drive.discriminated_connection_settings",
                                "google-mail": "#/components/schemas/connector.google-mail.discriminated_connection_settings",
                                "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connection_settings",
                                "gorgias": "#/components/schemas/connector.gorgias.discriminated_connection_settings",
                                "grain": "#/components/schemas/connector.grain.discriminated_connection_settings",
                                "gumroad": "#/components/schemas/connector.gumroad.discriminated_connection_settings",
                                "gusto": "#/components/schemas/connector.gusto.discriminated_connection_settings",
                                "harvest": "#/components/schemas/connector.harvest.discriminated_connection_settings",
                                "highlevel": "#/components/schemas/connector.highlevel.discriminated_connection_settings",
                                "hubspot": "#/components/schemas/connector.hubspot.discriminated_connection_settings",
                                "instagram": "#/components/schemas/connector.instagram.discriminated_connection_settings",
                                "intercom": "#/components/schemas/connector.intercom.discriminated_connection_settings",
                                "jira": "#/components/schemas/connector.jira.discriminated_connection_settings",
                                "keap": "#/components/schemas/connector.keap.discriminated_connection_settings",
                                "lever": "#/components/schemas/connector.lever.discriminated_connection_settings",
                                "linear": "#/components/schemas/connector.linear.discriminated_connection_settings",
                                "linkedin": "#/components/schemas/connector.linkedin.discriminated_connection_settings",
                                "linkhut": "#/components/schemas/connector.linkhut.discriminated_connection_settings",
                                "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connection_settings",
                                "miro": "#/components/schemas/connector.miro.discriminated_connection_settings",
                                "monday": "#/components/schemas/connector.monday.discriminated_connection_settings",
                                "mural": "#/components/schemas/connector.mural.discriminated_connection_settings",
                                "namely": "#/components/schemas/connector.namely.discriminated_connection_settings",
                                "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings",
                                "netsuite": "#/components/schemas/connector.netsuite.discriminated_connection_settings",
                                "notion": "#/components/schemas/connector.notion.discriminated_connection_settings",
                                "odoo": "#/components/schemas/connector.odoo.discriminated_connection_settings",
                                "okta": "#/components/schemas/connector.okta.discriminated_connection_settings",
                                "osu": "#/components/schemas/connector.osu.discriminated_connection_settings",
                                "oura": "#/components/schemas/connector.oura.discriminated_connection_settings",
                                "outreach": "#/components/schemas/connector.outreach.discriminated_connection_settings",
                                "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connection_settings",
                                "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connection_settings",
                                "payfit": "#/components/schemas/connector.payfit.discriminated_connection_settings",
                                "paypal": "#/components/schemas/connector.paypal.discriminated_connection_settings",
                                "pennylane": "#/components/schemas/connector.pennylane.discriminated_connection_settings",
                                "pinterest": "#/components/schemas/connector.pinterest.discriminated_connection_settings",
                                "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connection_settings",
                                "podium": "#/components/schemas/connector.podium.discriminated_connection_settings",
                                "productboard": "#/components/schemas/connector.productboard.discriminated_connection_settings",
                                "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connection_settings",
                                "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connection_settings",
                                "reddit": "#/components/schemas/connector.reddit.discriminated_connection_settings",
                                "sage": "#/components/schemas/connector.sage.discriminated_connection_settings",
                                "salesforce": "#/components/schemas/connector.salesforce.discriminated_connection_settings",
                                "salesloft": "#/components/schemas/connector.salesloft.discriminated_connection_settings",
                                "segment": "#/components/schemas/connector.segment.discriminated_connection_settings",
                                "servicem8": "#/components/schemas/connector.servicem8.discriminated_connection_settings",
                                "servicenow": "#/components/schemas/connector.servicenow.discriminated_connection_settings",
                                "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connection_settings",
                                "shopify": "#/components/schemas/connector.shopify.discriminated_connection_settings",
                                "signnow": "#/components/schemas/connector.signnow.discriminated_connection_settings",
                                "slack": "#/components/schemas/connector.slack.discriminated_connection_settings",
                                "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connection_settings",
                                "snowflake": "#/components/schemas/connector.snowflake.discriminated_connection_settings",
                                "spotify": "#/components/schemas/connector.spotify.discriminated_connection_settings",
                                "squarespace": "#/components/schemas/connector.squarespace.discriminated_connection_settings",
                                "squareup": "#/components/schemas/connector.squareup.discriminated_connection_settings",
                                "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connection_settings",
                                "strava": "#/components/schemas/connector.strava.discriminated_connection_settings",
                                "teamwork": "#/components/schemas/connector.teamwork.discriminated_connection_settings",
                                "ticktick": "#/components/schemas/connector.ticktick.discriminated_connection_settings",
                                "timely": "#/components/schemas/connector.timely.discriminated_connection_settings",
                                "todoist": "#/components/schemas/connector.todoist.discriminated_connection_settings",
                                "tremendous": "#/components/schemas/connector.tremendous.discriminated_connection_settings",
                                "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings",
                                "tumblr": "#/components/schemas/connector.tumblr.discriminated_connection_settings",
                                "twinfield": "#/components/schemas/connector.twinfield.discriminated_connection_settings",
                                "twitch": "#/components/schemas/connector.twitch.discriminated_connection_settings",
                                "twitter": "#/components/schemas/connector.twitter.discriminated_connection_settings",
                                "typeform": "#/components/schemas/connector.typeform.discriminated_connection_settings",
                                "uber": "#/components/schemas/connector.uber.discriminated_connection_settings",
                                "vimeo": "#/components/schemas/connector.vimeo.discriminated_connection_settings",
                                "wakatime": "#/components/schemas/connector.wakatime.discriminated_connection_settings",
                                "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connection_settings",
                                "webflow": "#/components/schemas/connector.webflow.discriminated_connection_settings",
                                "whoop": "#/components/schemas/connector.whoop.discriminated_connection_settings",
                                "wordpress": "#/components/schemas/connector.wordpress.discriminated_connection_settings",
                                "wrike": "#/components/schemas/connector.wrike.discriminated_connection_settings",
                                "xero": "#/components/schemas/connector.xero.discriminated_connection_settings",
                                "yahoo": "#/components/schemas/connector.yahoo.discriminated_connection_settings",
                                "yandex": "#/components/schemas/connector.yandex.discriminated_connection_settings",
                                "zapier": "#/components/schemas/connector.zapier.discriminated_connection_settings",
                                "zendesk": "#/components/schemas/connector.zendesk.discriminated_connection_settings",
                                "zenefits": "#/components/schemas/connector.zenefits.discriminated_connection_settings",
                                "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings",
                                "zoho": "#/components/schemas/connector.zoho.discriminated_connection_settings",
                                "zoom": "#/components/schemas/connector.zoom.discriminated_connection_settings",
                                "airtable": "#/components/schemas/connector.airtable.discriminated_connection_settings",
                                "apollo": "#/components/schemas/connector.apollo.discriminated_connection_settings",
                                "brex": "#/components/schemas/connector.brex.discriminated_connection_settings",
                                "coda": "#/components/schemas/connector.coda.discriminated_connection_settings",
                                "finch": "#/components/schemas/connector.finch.discriminated_connection_settings",
                                "firebase": "#/components/schemas/connector.firebase.discriminated_connection_settings",
                                "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connection_settings",
                                "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connection_settings",
                                "heron": "#/components/schemas/connector.heron.discriminated_connection_settings",
                                "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings",
                                "mercury": "#/components/schemas/connector.mercury.discriminated_connection_settings",
                                "merge": "#/components/schemas/connector.merge.discriminated_connection_settings",
                                "moota": "#/components/schemas/connector.moota.discriminated_connection_settings",
                                "onebrick": "#/components/schemas/connector.onebrick.discriminated_connection_settings",
                                "openledger": "#/components/schemas/connector.openledger.discriminated_connection_settings",
                                "plaid": "#/components/schemas/connector.plaid.discriminated_connection_settings",
                                "postgres": "#/components/schemas/connector.postgres.discriminated_connection_settings",
                                "ramp": "#/components/schemas/connector.ramp.discriminated_connection_settings",
                                "saltedge": "#/components/schemas/connector.saltedge.discriminated_connection_settings",
                                "splitwise": "#/components/schemas/connector.splitwise.discriminated_connection_settings",
                                "stripe": "#/components/schemas/connector.stripe.discriminated_connection_settings",
                                "teller": "#/components/schemas/connector.teller.discriminated_connection_settings",
                                "toggl": "#/components/schemas/connector.toggl.discriminated_connection_settings",
                                "twenty": "#/components/schemas/connector.twenty.discriminated_connection_settings",
                                "venmo": "#/components/schemas/connector.venmo.discriminated_connection_settings",
                                "wise": "#/components/schemas/connector.wise.discriminated_connection_settings",
                                "yodlee": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                              }
                            },
                            "description": "Connector specific data"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "connector": {
                                "$ref": "#/components/schemas/core.connector"
                              },
                              "integration": {
                                "$ref": "#/components/schemas/core.integration_select"
                              }
                            }
                          }
                        ],
                        "description": "The connection details"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of items in the database for the organization"
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Limit the number of items returned"
                    },
                    "offset": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Offset the items returned"
                    },
                    "has_next_page": {
                      "type": "boolean",
                      "description": "Convenience flag = offset + limit >= total"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "limit",
                    "offset"
                  ],
                  "description": "The list of connections"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createConnection",
        "summary": "Create Connection",
        "description": "Import an existing connection after validation",
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connector_config_id": {
                    "type": "string",
                    "pattern": "^ccfg_",
                    "description": "The id of the connector config, starts with `ccfg_`"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "customer_id": {
                    "type": "string",
                    "description": "The id of the customer in your application. Ensure it is unique for that customer."
                  },
                  "data": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/connector.accelo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.adobe.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.adyen.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.aircall.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.amazon.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.apaleo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.asana.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.attio.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.auth0.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.autodesk.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.aws.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.bamboohr.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.basecamp.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.battlenet.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.bitbucket.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.bitly.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.blackbaud.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.boldsign.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.box.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.braintree.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.calendly.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.clickup.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.close.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.confluence.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.contentful.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.contentstack.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.copper.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.coros.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.datev.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.deel.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.dialpad.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.digitalocean.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.discord.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.docusign.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.dropbox.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.ebay.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.egnyte.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.envoy.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.eventbrite.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.exist.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.facebook.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.factorial.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.figma.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.fitbit.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.fortnox.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.freshbooks.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.front.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.github.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.gitlab.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.gong.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.google-calendar.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.google-docs.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.google-drive.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.google-mail.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.google-sheet.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.gorgias.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.grain.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.gumroad.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.gusto.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.harvest.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.highlevel.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.hubspot.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.instagram.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.intercom.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.jira.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.keap.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.lever.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.linear.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.linkedin.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.linkhut.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.mailchimp.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.miro.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.monday.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.mural.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.namely.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.netsuite.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.notion.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.odoo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.okta.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.osu.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.oura.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.outreach.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.pagerduty.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.pandadoc.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.payfit.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.paypal.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.pennylane.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.pinterest.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.pipedrive.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.podium.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.productboard.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.qualtrics.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.quickbooks.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.reddit.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.sage.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.salesforce.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.salesloft.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.segment.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.servicem8.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.servicenow.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.sharepoint.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.shopify.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.signnow.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.slack.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.smartsheet.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.snowflake.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.spotify.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.squarespace.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.squareup.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.stackexchange.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.strava.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.teamwork.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.ticktick.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.timely.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.todoist.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.tremendous.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.tumblr.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.twinfield.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.twitch.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.twitter.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.typeform.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.uber.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.vimeo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.wakatime.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.wealthbox.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.webflow.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.whoop.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.wordpress.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.wrike.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.xero.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.yahoo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.yandex.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zapier.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zendesk.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zenefits.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zoho.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.zoom.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.airtable.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.apollo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.brex.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.coda.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.finch.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.firebase.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.foreceipt.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.greenhouse.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.heron.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.mercury.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.merge.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.moota.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.onebrick.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.openledger.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.plaid.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.postgres.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.ramp.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.saltedge.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.splitwise.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.stripe.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.teller.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.toggl.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.twenty.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.venmo.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.wise.discriminated_connection_settings"
                      },
                      {
                        "$ref": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "connector_name",
                      "mapping": {
                        "accelo": "#/components/schemas/connector.accelo.discriminated_connection_settings",
                        "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings",
                        "adobe": "#/components/schemas/connector.adobe.discriminated_connection_settings",
                        "adyen": "#/components/schemas/connector.adyen.discriminated_connection_settings",
                        "aircall": "#/components/schemas/connector.aircall.discriminated_connection_settings",
                        "amazon": "#/components/schemas/connector.amazon.discriminated_connection_settings",
                        "apaleo": "#/components/schemas/connector.apaleo.discriminated_connection_settings",
                        "asana": "#/components/schemas/connector.asana.discriminated_connection_settings",
                        "attio": "#/components/schemas/connector.attio.discriminated_connection_settings",
                        "auth0": "#/components/schemas/connector.auth0.discriminated_connection_settings",
                        "autodesk": "#/components/schemas/connector.autodesk.discriminated_connection_settings",
                        "aws": "#/components/schemas/connector.aws.discriminated_connection_settings",
                        "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connection_settings",
                        "basecamp": "#/components/schemas/connector.basecamp.discriminated_connection_settings",
                        "battlenet": "#/components/schemas/connector.battlenet.discriminated_connection_settings",
                        "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings",
                        "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connection_settings",
                        "bitly": "#/components/schemas/connector.bitly.discriminated_connection_settings",
                        "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connection_settings",
                        "boldsign": "#/components/schemas/connector.boldsign.discriminated_connection_settings",
                        "box": "#/components/schemas/connector.box.discriminated_connection_settings",
                        "braintree": "#/components/schemas/connector.braintree.discriminated_connection_settings",
                        "calendly": "#/components/schemas/connector.calendly.discriminated_connection_settings",
                        "clickup": "#/components/schemas/connector.clickup.discriminated_connection_settings",
                        "close": "#/components/schemas/connector.close.discriminated_connection_settings",
                        "confluence": "#/components/schemas/connector.confluence.discriminated_connection_settings",
                        "contentful": "#/components/schemas/connector.contentful.discriminated_connection_settings",
                        "contentstack": "#/components/schemas/connector.contentstack.discriminated_connection_settings",
                        "copper": "#/components/schemas/connector.copper.discriminated_connection_settings",
                        "coros": "#/components/schemas/connector.coros.discriminated_connection_settings",
                        "datev": "#/components/schemas/connector.datev.discriminated_connection_settings",
                        "deel": "#/components/schemas/connector.deel.discriminated_connection_settings",
                        "dialpad": "#/components/schemas/connector.dialpad.discriminated_connection_settings",
                        "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connection_settings",
                        "discord": "#/components/schemas/connector.discord.discriminated_connection_settings",
                        "docusign": "#/components/schemas/connector.docusign.discriminated_connection_settings",
                        "dropbox": "#/components/schemas/connector.dropbox.discriminated_connection_settings",
                        "ebay": "#/components/schemas/connector.ebay.discriminated_connection_settings",
                        "egnyte": "#/components/schemas/connector.egnyte.discriminated_connection_settings",
                        "envoy": "#/components/schemas/connector.envoy.discriminated_connection_settings",
                        "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connection_settings",
                        "exist": "#/components/schemas/connector.exist.discriminated_connection_settings",
                        "facebook": "#/components/schemas/connector.facebook.discriminated_connection_settings",
                        "factorial": "#/components/schemas/connector.factorial.discriminated_connection_settings",
                        "figma": "#/components/schemas/connector.figma.discriminated_connection_settings",
                        "fitbit": "#/components/schemas/connector.fitbit.discriminated_connection_settings",
                        "fortnox": "#/components/schemas/connector.fortnox.discriminated_connection_settings",
                        "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connection_settings",
                        "front": "#/components/schemas/connector.front.discriminated_connection_settings",
                        "github": "#/components/schemas/connector.github.discriminated_connection_settings",
                        "gitlab": "#/components/schemas/connector.gitlab.discriminated_connection_settings",
                        "gong": "#/components/schemas/connector.gong.discriminated_connection_settings",
                        "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connection_settings",
                        "google-docs": "#/components/schemas/connector.google-docs.discriminated_connection_settings",
                        "google-drive": "#/components/schemas/connector.google-drive.discriminated_connection_settings",
                        "google-mail": "#/components/schemas/connector.google-mail.discriminated_connection_settings",
                        "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connection_settings",
                        "gorgias": "#/components/schemas/connector.gorgias.discriminated_connection_settings",
                        "grain": "#/components/schemas/connector.grain.discriminated_connection_settings",
                        "gumroad": "#/components/schemas/connector.gumroad.discriminated_connection_settings",
                        "gusto": "#/components/schemas/connector.gusto.discriminated_connection_settings",
                        "harvest": "#/components/schemas/connector.harvest.discriminated_connection_settings",
                        "highlevel": "#/components/schemas/connector.highlevel.discriminated_connection_settings",
                        "hubspot": "#/components/schemas/connector.hubspot.discriminated_connection_settings",
                        "instagram": "#/components/schemas/connector.instagram.discriminated_connection_settings",
                        "intercom": "#/components/schemas/connector.intercom.discriminated_connection_settings",
                        "jira": "#/components/schemas/connector.jira.discriminated_connection_settings",
                        "keap": "#/components/schemas/connector.keap.discriminated_connection_settings",
                        "lever": "#/components/schemas/connector.lever.discriminated_connection_settings",
                        "linear": "#/components/schemas/connector.linear.discriminated_connection_settings",
                        "linkedin": "#/components/schemas/connector.linkedin.discriminated_connection_settings",
                        "linkhut": "#/components/schemas/connector.linkhut.discriminated_connection_settings",
                        "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connection_settings",
                        "miro": "#/components/schemas/connector.miro.discriminated_connection_settings",
                        "monday": "#/components/schemas/connector.monday.discriminated_connection_settings",
                        "mural": "#/components/schemas/connector.mural.discriminated_connection_settings",
                        "namely": "#/components/schemas/connector.namely.discriminated_connection_settings",
                        "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings",
                        "netsuite": "#/components/schemas/connector.netsuite.discriminated_connection_settings",
                        "notion": "#/components/schemas/connector.notion.discriminated_connection_settings",
                        "odoo": "#/components/schemas/connector.odoo.discriminated_connection_settings",
                        "okta": "#/components/schemas/connector.okta.discriminated_connection_settings",
                        "osu": "#/components/schemas/connector.osu.discriminated_connection_settings",
                        "oura": "#/components/schemas/connector.oura.discriminated_connection_settings",
                        "outreach": "#/components/schemas/connector.outreach.discriminated_connection_settings",
                        "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connection_settings",
                        "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connection_settings",
                        "payfit": "#/components/schemas/connector.payfit.discriminated_connection_settings",
                        "paypal": "#/components/schemas/connector.paypal.discriminated_connection_settings",
                        "pennylane": "#/components/schemas/connector.pennylane.discriminated_connection_settings",
                        "pinterest": "#/components/schemas/connector.pinterest.discriminated_connection_settings",
                        "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connection_settings",
                        "podium": "#/components/schemas/connector.podium.discriminated_connection_settings",
                        "productboard": "#/components/schemas/connector.productboard.discriminated_connection_settings",
                        "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connection_settings",
                        "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connection_settings",
                        "reddit": "#/components/schemas/connector.reddit.discriminated_connection_settings",
                        "sage": "#/components/schemas/connector.sage.discriminated_connection_settings",
                        "salesforce": "#/components/schemas/connector.salesforce.discriminated_connection_settings",
                        "salesloft": "#/components/schemas/connector.salesloft.discriminated_connection_settings",
                        "segment": "#/components/schemas/connector.segment.discriminated_connection_settings",
                        "servicem8": "#/components/schemas/connector.servicem8.discriminated_connection_settings",
                        "servicenow": "#/components/schemas/connector.servicenow.discriminated_connection_settings",
                        "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connection_settings",
                        "shopify": "#/components/schemas/connector.shopify.discriminated_connection_settings",
                        "signnow": "#/components/schemas/connector.signnow.discriminated_connection_settings",
                        "slack": "#/components/schemas/connector.slack.discriminated_connection_settings",
                        "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connection_settings",
                        "snowflake": "#/components/schemas/connector.snowflake.discriminated_connection_settings",
                        "spotify": "#/components/schemas/connector.spotify.discriminated_connection_settings",
                        "squarespace": "#/components/schemas/connector.squarespace.discriminated_connection_settings",
                        "squareup": "#/components/schemas/connector.squareup.discriminated_connection_settings",
                        "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connection_settings",
                        "strava": "#/components/schemas/connector.strava.discriminated_connection_settings",
                        "teamwork": "#/components/schemas/connector.teamwork.discriminated_connection_settings",
                        "ticktick": "#/components/schemas/connector.ticktick.discriminated_connection_settings",
                        "timely": "#/components/schemas/connector.timely.discriminated_connection_settings",
                        "todoist": "#/components/schemas/connector.todoist.discriminated_connection_settings",
                        "tremendous": "#/components/schemas/connector.tremendous.discriminated_connection_settings",
                        "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings",
                        "tumblr": "#/components/schemas/connector.tumblr.discriminated_connection_settings",
                        "twinfield": "#/components/schemas/connector.twinfield.discriminated_connection_settings",
                        "twitch": "#/components/schemas/connector.twitch.discriminated_connection_settings",
                        "twitter": "#/components/schemas/connector.twitter.discriminated_connection_settings",
                        "typeform": "#/components/schemas/connector.typeform.discriminated_connection_settings",
                        "uber": "#/components/schemas/connector.uber.discriminated_connection_settings",
                        "vimeo": "#/components/schemas/connector.vimeo.discriminated_connection_settings",
                        "wakatime": "#/components/schemas/connector.wakatime.discriminated_connection_settings",
                        "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connection_settings",
                        "webflow": "#/components/schemas/connector.webflow.discriminated_connection_settings",
                        "whoop": "#/components/schemas/connector.whoop.discriminated_connection_settings",
                        "wordpress": "#/components/schemas/connector.wordpress.discriminated_connection_settings",
                        "wrike": "#/components/schemas/connector.wrike.discriminated_connection_settings",
                        "xero": "#/components/schemas/connector.xero.discriminated_connection_settings",
                        "yahoo": "#/components/schemas/connector.yahoo.discriminated_connection_settings",
                        "yandex": "#/components/schemas/connector.yandex.discriminated_connection_settings",
                        "zapier": "#/components/schemas/connector.zapier.discriminated_connection_settings",
                        "zendesk": "#/components/schemas/connector.zendesk.discriminated_connection_settings",
                        "zenefits": "#/components/schemas/connector.zenefits.discriminated_connection_settings",
                        "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings",
                        "zoho": "#/components/schemas/connector.zoho.discriminated_connection_settings",
                        "zoom": "#/components/schemas/connector.zoom.discriminated_connection_settings",
                        "airtable": "#/components/schemas/connector.airtable.discriminated_connection_settings",
                        "apollo": "#/components/schemas/connector.apollo.discriminated_connection_settings",
                        "brex": "#/components/schemas/connector.brex.discriminated_connection_settings",
                        "coda": "#/components/schemas/connector.coda.discriminated_connection_settings",
                        "finch": "#/components/schemas/connector.finch.discriminated_connection_settings",
                        "firebase": "#/components/schemas/connector.firebase.discriminated_connection_settings",
                        "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connection_settings",
                        "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connection_settings",
                        "heron": "#/components/schemas/connector.heron.discriminated_connection_settings",
                        "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings",
                        "mercury": "#/components/schemas/connector.mercury.discriminated_connection_settings",
                        "merge": "#/components/schemas/connector.merge.discriminated_connection_settings",
                        "moota": "#/components/schemas/connector.moota.discriminated_connection_settings",
                        "onebrick": "#/components/schemas/connector.onebrick.discriminated_connection_settings",
                        "openledger": "#/components/schemas/connector.openledger.discriminated_connection_settings",
                        "plaid": "#/components/schemas/connector.plaid.discriminated_connection_settings",
                        "postgres": "#/components/schemas/connector.postgres.discriminated_connection_settings",
                        "ramp": "#/components/schemas/connector.ramp.discriminated_connection_settings",
                        "saltedge": "#/components/schemas/connector.saltedge.discriminated_connection_settings",
                        "splitwise": "#/components/schemas/connector.splitwise.discriminated_connection_settings",
                        "stripe": "#/components/schemas/connector.stripe.discriminated_connection_settings",
                        "teller": "#/components/schemas/connector.teller.discriminated_connection_settings",
                        "toggl": "#/components/schemas/connector.toggl.discriminated_connection_settings",
                        "twenty": "#/components/schemas/connector.twenty.discriminated_connection_settings",
                        "venmo": "#/components/schemas/connector.venmo.discriminated_connection_settings",
                        "wise": "#/components/schemas/connector.wise.discriminated_connection_settings",
                        "yodlee": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
                      }
                    },
                    "description": "Connector specific data"
                  },
                  "check_connection": {
                    "type": "boolean",
                    "default": false,
                    "description": "Perform a synchronous connection check before creating it."
                  }
                },
                "required": [
                  "connector_config_id",
                  "customer_id",
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.connection_select"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customer_id}/token": {
      "post": {
        "operationId": "createToken",
        "summary": "Create Customer Authentication Token",
        "description": "Create a @Connect authentication token for a customer. This token can be used to embed @Connect in your application via the `@openint/connect` npm package.",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "description": "The unique ID of the customer to create the token for",
            "schema": {
              "type": "string",
              "minLength": 1,
              "description": "The unique ID of the customer to create the token for"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "validity_in_seconds": {
                    "type": "number",
                    "default": 2592000,
                    "description": "How long the publishable token and magic link url will be valid for (in seconds) before it expires. By default it will be valid for 30 days unless otherwise specified."
                  },
                  "connect_options": {
                    "type": "object",
                    "properties": {
                      "return_url": {
                        "type": "string",
                        "title": "Return URL",
                        "description": "Optional URL to return customers after adding a connection or if they press the Return To Organization button"
                      },
                      "connector_names": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/core.connector.name"
                        },
                        "title": "Connector Names",
                        "description": "The names of the connectors to show in the connect page. If not provided, all connectors will be shown"
                      },
                      "view": {
                        "type": "string",
                        "enum": [
                          "add",
                          "manage"
                        ],
                        "title": "Default View to load",
                        "description": "The default view to show when the magic link is opened. If omitted, by default it will smartly load the right view based on whether the user has connections or not"
                      },
                      "debug": {
                        "type": "boolean",
                        "title": "Debug",
                        "description": "Whether to enable debug mode"
                      },
                      "is_embedded": {
                        "type": "boolean",
                        "title": "Is Embedded",
                        "description": "Whether to enable embedded mode. Embedded mode hides the side bar with extra context for the end user (customer) on the organization"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "A short-lived publishable authentication token to use for customer api requests from the frontend. This token by default expires in 30 days unless otherwise specified via the validity_in_seconds parameter."
                    },
                    "magic_link_url": {
                      "type": "string",
                      "description": "A link that can be shared with customers to use @Connect in any browser. This link will expire in 30 days by default unless otherwise specified via the validity_in_seconds parameter."
                    },
                    "api_key": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "A long-lived customer API key to use for API requests. Not meant to be published to the frontend."
                    }
                  },
                  "required": [
                    "token",
                    "magic_link_url",
                    "api_key"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connection/{id}/check": {
      "post": {
        "operationId": "checkConnection",
        "summary": "Check Connection Health",
        "description": "Verify that a connection is healthy",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the connection, starts with `conn_`",
            "schema": {
              "type": "string",
              "pattern": "^conn_",
              "description": "The id of the connection, starts with `conn_`"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "healthy",
                        "disconnected",
                        "error",
                        "manual",
                        "unknown",
                        null
                      ]
                    },
                    "status_message": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "operationId": "listEvents",
        "summary": "List Organization Events",
        "description": "List all events for an organization",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3000,
              "default": 50,
              "description": "Limit the number of items returned"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the items returned",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "description": "Offset the items returned"
            }
          },
          {
            "in": "query",
            "name": "search_query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "expand",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "prompt"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/core.event"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of items in the database for the organization"
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Limit the number of items returned"
                    },
                    "offset": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Offset the items returned"
                    },
                    "has_next_page": {
                      "type": "boolean",
                      "description": "Convenience flag = offset + limit >= total"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "limit",
                    "offset"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "put": {
        "operationId": "upsertCustomer",
        "summary": "Upsert Customer",
        "description": "Create or update a customer",
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.customer_select"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "health",
        "summary": "Health Check",
        "description": "Check if the API is operational",
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "healthEcho",
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/connector-status": {
      "get": {
        "operationId": "connectorStatus",
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "hasConnectionForOrg": {
                            "type": "boolean"
                          },
                          "isHealthyForOrg": {
                            "type": "boolean"
                          },
                          "hasDefaultCredentials": {
                            "type": "boolean"
                          },
                          "complete": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "hasConnectionForOrg",
                          "isHealthyForOrg",
                          "hasDefaultCredentials",
                          "complete"
                        ]
                      }
                    },
                    "numTotalConnectors": {
                      "type": "number"
                    },
                    "numWithConnectionForOrg": {
                      "type": "number"
                    },
                    "numHealthyForOrg": {
                      "type": "number"
                    },
                    "numWithDefaultCredentials": {
                      "type": "number"
                    },
                    "numComplete": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "list",
                    "numTotalConnectors",
                    "numWithConnectionForOrg",
                    "numHealthyForOrg",
                    "numWithDefaultCredentials",
                    "numComplete"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/viewer": {
      "get": {
        "operationId": "viewer",
        "summary": "Get Current User",
        "description": "Get information about the current authenticated user",
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "anon",
                        "customer",
                        "user",
                        "org",
                        "system"
                      ]
                    }
                  },
                  "required": [
                    "role"
                  ],
                  "additionalProperties": true
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/webhook/{connector_name}": {
      "post": {
        "operationId": "handleWebhook",
        "description": "Handle a webhook event",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connector_name",
            "schema": {
              "$ref": "#/components/schemas/core.connector.name"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "info": {}
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/ai/message_template": {
      "get": {
        "operationId": "messageTemplate",
        "summary": "Get Message Template",
        "description": "Get a message template for an AI agent",
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string",
              "enum": [
                "javascript"
              ]
            }
          },
          {
            "in": "query",
            "name": "use_environment_variables",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string"
                    },
                    "template": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "language",
                    "template"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer",
        "description": "Organization API Key available in the settings page of the OpenInt Console or Customer API Key or Token Customer authentication token created using the create customer token API. It is passed in the `authorization` header with format: `Bearer {token}`"
      }
    },
    "schemas": {
      "connector.accelo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "accelo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.api\\.accelo\\.com",
                "description": "The subdomain of your Accelo account (e.g., https://domain.api.accelo.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "accelo"
      },
      "connector.accelo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "accelo"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "accelo"
      },
      "connector.acme-oauth2.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "acme-oauth2"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "acme-oauth2"
      },
      "connector.acme-oauth2.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "acme-oauth2"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "acme-oauth2"
      },
      "connector.adobe.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "adobe"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "adobe"
      },
      "connector.adobe.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "adobe"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "adobe"
      },
      "connector.adyen.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "adyen"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "environment": {
                "type": "string",
                "pattern": "(live|test)",
                "description": "The environment to use (e.g., live|test)"
              },
              "resource": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)-\\(live\\|test\\)\\.adyen\\.com",
                "description": "The resource to use for your various requests (e.g., https://kyc-(live|test).adyen.com)"
              }
            },
            "required": [
              "oauth",
              "environment",
              "resource"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "adyen"
      },
      "connector.adyen.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "adyen"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "adyen"
      },
      "connector.aircall.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "aircall"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "aircall"
      },
      "connector.aircall.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "aircall"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "aircall"
      },
      "connector.airtable.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "airtable"
          },
          "settings": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "airtableBase": {
                "type": "string"
              }
            },
            "required": [
              "apiKey",
              "airtableBase"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "airtable"
      },
      "connector.airtable.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "airtable"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "airtable"
      },
      "connector.amazon.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "amazon"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "extension": {
                "type": "string",
                "pattern": "[a-z.]+",
                "description": "The domain extension for your Amazon account (e.g., com)"
              }
            },
            "required": [
              "oauth",
              "extension"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "amazon"
      },
      "connector.amazon.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "amazon"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "amazon"
      },
      "connector.apaleo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "apaleo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "apaleo"
      },
      "connector.apaleo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "apaleo"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "apaleo"
      },
      "connector.apollo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "apollo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "api_key": {
                "type": "string"
              }
            },
            "required": [
              "api_key"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "apollo"
      },
      "connector.apollo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "apollo"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "apollo"
      },
      "connector.asana.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "asana"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "asana"
      },
      "connector.asana.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "asana"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "asana"
      },
      "connector.attio.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "attio"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "attio"
      },
      "connector.attio.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "attio"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "attio"
      },
      "connector.auth0.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "auth0"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.auth0\\.com",
                "description": "The subdomain of your Auth0 account (e.g., https://domain.auth0.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "auth0"
      },
      "connector.auth0.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "auth0"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "auth0"
      },
      "connector.autodesk.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "autodesk"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "autodesk"
      },
      "connector.autodesk.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "autodesk"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "autodesk"
      },
      "connector.aws.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "aws"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.amazoncognito\\.com",
                "description": "The subdomain of your AWS account (e.g., https://domain.amazoncognito.com)"
              },
              "extension": {
                "type": "string",
                "pattern": "[a-z.]+",
                "description": "The domain extension of your AWS account (e.g., com)"
              },
              "apiSubdomain": {
                "type": "string",
                "pattern": "https:\\/\\/cognito-([a-z.-]+)\\.amazonaws\\.com",
                "description": "The API subdomain to the API you want to connect to (e.g., https://cognito-idp.us-east-2.amazonaws.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain",
              "extension",
              "apiSubdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "aws"
      },
      "connector.aws.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "aws"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "aws"
      },
      "connector.bamboohr.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bamboohr"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.bamboohr\\.com",
                "description": "The subdomain of your BambooHR account (e.g., https://domain.bamboohr.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "bamboohr"
      },
      "connector.bamboohr.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bamboohr"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "bamboohr"
      },
      "connector.basecamp.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "basecamp"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "appDetails": {
                "type": "string",
                "description": "The details of your app (e.g., example-subdomain)"
              },
              "accountId": {
                "type": "string",
                "pattern": "[0-9]+",
                "description": "Your Account ID (e.g., 5899981)"
              }
            },
            "required": [
              "oauth",
              "appDetails",
              "accountId"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "basecamp"
      },
      "connector.basecamp.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "basecamp"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "basecamp"
      },
      "connector.battlenet.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "battlenet"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "extension": {
                "type": "string",
                "pattern": "[a-z.]+",
                "description": "The domain extension of your Battle.net account (e.g., com)"
              },
              "apiDomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z.]+)",
                "description": "The domain to where you will access your API (e.g., https://us.api.blizzard.com)"
              }
            },
            "required": [
              "oauth",
              "extension",
              "apiDomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "battlenet"
      },
      "connector.battlenet.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "battlenet"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "battlenet"
      },
      "connector.bigcommerce.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bigcommerce"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "storeHash": {
                "type": "string",
                "pattern": "[a-zA-Z0-9]+",
                "description": "The store hash of your BigCommerce account (e.g., Example123)"
              },
              "accountUuid": {
                "type": "string",
                "description": "The account UUID of your BigCommerce account (e.g., 123e4567-e89b-12d3-a456-426614174000)"
              }
            },
            "required": [
              "oauth",
              "storeHash",
              "accountUuid"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "bigcommerce"
      },
      "connector.bigcommerce.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bigcommerce"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "bigcommerce"
      },
      "connector.bitbucket.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bitbucket"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "bitbucket"
      },
      "connector.bitbucket.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bitbucket"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "bitbucket"
      },
      "connector.bitly.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bitly"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "bitly"
      },
      "connector.bitly.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "bitly"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "bitly"
      },
      "connector.blackbaud.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "blackbaud"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "blackbaud"
      },
      "connector.blackbaud.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "blackbaud"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "blackbaud"
      },
      "connector.boldsign.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "boldsign"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "boldsign"
      },
      "connector.boldsign.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "boldsign"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "boldsign"
      },
      "connector.box.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "box"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "box"
      },
      "connector.box.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "box"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "box"
      },
      "connector.braintree.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "braintree"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "braintree"
      },
      "connector.braintree.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "braintree"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "braintree"
      },
      "connector.brex.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "brex"
          },
          "settings": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "brex"
      },
      "connector.brex.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "brex"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "anyOf": [
                  {
                    "type": "null",
                    "description": "No oauth"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "clientSecret"
                    ],
                    "description": "Configure oauth"
                  }
                ],
                "description": "Oauth support"
              },
              "apikeyAuth": {
                "type": "boolean",
                "description": "API key auth support"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "brex"
      },
      "connector.calendly.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "calendly"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "calendly"
      },
      "connector.calendly.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "calendly"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "calendly"
      },
      "connector.clickup.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "clickup"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "clickup"
      },
      "connector.clickup.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "clickup"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "clickup"
      },
      "connector.close.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "close"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "close"
      },
      "connector.close.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "close"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "close"
      },
      "connector.coda.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "coda"
          },
          "settings": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "apiKey"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "coda"
      },
      "connector.coda.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "coda"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "coda"
      },
      "connector.confluence.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "confluence"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "confluence"
      },
      "connector.confluence.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "confluence"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "confluence"
      },
      "connector.contentful.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "contentful"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.contentful\\.com",
                "description": "The subdomain of your Contentful account (e.g., https://domain.contentful.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "contentful"
      },
      "connector.contentful.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "contentful"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "contentful"
      },
      "connector.contentstack.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "contentstack"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.contentstack\\.com",
                "description": "The subdomain of your Contentstack account (e.g., https://domain.contentstack.com)"
              },
              "appId": {
                "type": "string",
                "description": "The app ID of your Contentstack account (e.g., example-subdomain)"
              },
              "apiDomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)",
                "description": "The domain to where you will access your API (e.g., https://eu-api.contentstack.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain",
              "appId",
              "apiDomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "contentstack"
      },
      "connector.contentstack.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "contentstack"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "contentstack"
      },
      "connector.copper.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "copper"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "copper"
      },
      "connector.copper.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "copper"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "copper"
      },
      "connector.coros.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "coros"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "coros"
      },
      "connector.coros.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "coros"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "coros"
      },
      "connector.datev.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "datev"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "datev"
      },
      "connector.datev.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "datev"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "datev"
      },
      "connector.deel.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "deel"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "deel"
      },
      "connector.deel.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "deel"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "deel"
      },
      "connector.dialpad.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "dialpad"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "dialpad"
      },
      "connector.dialpad.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "dialpad"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "dialpad"
      },
      "connector.digitalocean.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "digitalocean"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "digitalocean"
      },
      "connector.digitalocean.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "digitalocean"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "digitalocean"
      },
      "connector.discord.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "discord"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "discord"
      },
      "connector.discord.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "discord"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "discord"
      },
      "connector.docusign.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "docusign"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "docusign"
      },
      "connector.docusign.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "docusign"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "docusign"
      },
      "connector.dropbox.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "dropbox"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "dropbox"
      },
      "connector.dropbox.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "dropbox"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "dropbox"
      },
      "connector.ebay.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ebay"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "ebay"
      },
      "connector.ebay.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ebay"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "ebay"
      },
      "connector.egnyte.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "egnyte"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.egnyte\\.com",
                "description": "The subdomain of your Egnyte account (e.g., https://domain.egnyte.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "egnyte"
      },
      "connector.egnyte.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "egnyte"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "egnyte"
      },
      "connector.envoy.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "envoy"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "envoy"
      },
      "connector.envoy.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "envoy"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "envoy"
      },
      "connector.eventbrite.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "eventbrite"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "eventbrite"
      },
      "connector.eventbrite.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "eventbrite"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "eventbrite"
      },
      "connector.exist.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "exist"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "exist"
      },
      "connector.exist.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "exist"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "exist"
      },
      "connector.facebook.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "facebook"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "facebook"
      },
      "connector.facebook.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "facebook"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "facebook"
      },
      "connector.factorial.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "factorial"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "factorial"
      },
      "connector.factorial.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "factorial"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "factorial"
      },
      "connector.figma.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "figma"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "figma"
      },
      "connector.figma.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "figma"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "figma"
      },
      "connector.finch.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "finch"
          },
          "settings": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              }
            },
            "required": [
              "access_token"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "finch"
      },
      "connector.finch.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "finch"
          },
          "config": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "api_version": {
                "type": "string",
                "description": "Finch API version"
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "company",
                    "directory",
                    "individual",
                    "ssn",
                    "employment",
                    "payment",
                    "pay_statement",
                    "benefits"
                  ]
                },
                "description": "Finch products to access, @see https://developer.tryfinch.com/api-reference/development-guides/Permissions"
              }
            },
            "required": [
              "client_id",
              "client_secret",
              "products"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "finch"
      },
      "connector.firebase.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "firebase"
          },
          "settings": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "const": "admin"
                  },
                  "serviceAccount": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "project_id"
                    ],
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "role",
                  "serviceAccount"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "const": "user"
                  },
                  "firebaseConfig": {
                    "type": "object",
                    "properties": {
                      "projectId": {
                        "type": "string"
                      },
                      "apiKey": {
                        "type": "string"
                      },
                      "appId": {
                        "type": "string"
                      },
                      "authDomain": {
                        "type": "string"
                      },
                      "databaseURL": {
                        "type": "string"
                      },
                      "storageBucket": {
                        "type": "string"
                      },
                      "measurementId": {
                        "type": "string"
                      },
                      "messagingSenderId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "projectId",
                      "apiKey",
                      "appId",
                      "authDomain",
                      "databaseURL"
                    ]
                  },
                  "authData": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "type": "string",
                            "const": "userJson"
                          },
                          "userJson": {
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "string"
                              },
                              "appName": {
                                "type": "string"
                              },
                              "stsTokenManager": {
                                "type": "object",
                                "additionalProperties": {}
                              }
                            },
                            "required": [
                              "uid",
                              "appName",
                              "stsTokenManager"
                            ],
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "method",
                          "userJson"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "type": "string",
                            "const": "customToken"
                          },
                          "customToken": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "method",
                          "customToken"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "type": "string",
                            "const": "emailPassword"
                          },
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "method",
                          "email",
                          "password"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "role",
                  "firebaseConfig",
                  "authData"
                ]
              }
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "firebase"
      },
      "connector.firebase.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "firebase"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "firebase"
      },
      "connector.fitbit.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "fitbit"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "fitbit"
      },
      "connector.fitbit.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "fitbit"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "fitbit"
      },
      "connector.foreceipt.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "foreceipt"
          },
          "settings": {
            "type": "object",
            "properties": {
              "credentials": {},
              "_id": {},
              "envName": {
                "type": "string",
                "enum": [
                  "staging",
                  "production"
                ]
              }
            },
            "required": [
              "envName"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "foreceipt"
      },
      "connector.foreceipt.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "foreceipt"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "foreceipt"
      },
      "connector.fortnox.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "fortnox"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "fortnox"
      },
      "connector.fortnox.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "fortnox"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "fortnox"
      },
      "connector.freshbooks.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "freshbooks"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "freshbooks"
      },
      "connector.freshbooks.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "freshbooks"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "freshbooks"
      },
      "connector.front.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "front"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "front"
      },
      "connector.front.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "front"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "front"
      },
      "connector.github.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "github"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "github"
      },
      "connector.github.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "github"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "github"
      },
      "connector.gitlab.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gitlab"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "gitlab"
      },
      "connector.gitlab.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gitlab"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "gitlab"
      },
      "connector.gong.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gong"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "api_base_url_for_customer": {
                "type": "string",
                "pattern": "https?:\\/\\/.*",
                "description": "The base URL of your Gong account (e.g., example)"
              }
            },
            "required": [
              "oauth",
              "api_base_url_for_customer"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "gong"
      },
      "connector.gong.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gong"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "gong"
      },
      "connector.google-calendar.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-calendar"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "google-calendar"
      },
      "connector.google-calendar.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-calendar"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "google-calendar"
      },
      "connector.google-docs.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-docs"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "google-docs"
      },
      "connector.google-docs.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-docs"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "google-docs"
      },
      "connector.google-drive.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-drive"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "google-drive"
      },
      "connector.google-drive.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-drive"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "google-drive"
      },
      "connector.google-mail.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-mail"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "google-mail"
      },
      "connector.google-mail.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-mail"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "google-mail"
      },
      "connector.google-sheet.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-sheet"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "google-sheet"
      },
      "connector.google-sheet.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "google-sheet"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "google-sheet"
      },
      "connector.gorgias.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gorgias"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.gorgias\\.com",
                "description": "The subdomain of your Gorgias account (e.g., https://domain.gorgias.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "gorgias"
      },
      "connector.gorgias.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gorgias"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "gorgias"
      },
      "connector.grain.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "grain"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "grain"
      },
      "connector.grain.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "grain"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "grain"
      },
      "connector.greenhouse.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "greenhouse"
          },
          "settings": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "apiKey"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "greenhouse"
      },
      "connector.greenhouse.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "greenhouse"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "greenhouse"
      },
      "connector.gumroad.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gumroad"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "gumroad"
      },
      "connector.gumroad.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gumroad"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "gumroad"
      },
      "connector.gusto.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gusto"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "gusto"
      },
      "connector.gusto.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "gusto"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "gusto"
      },
      "connector.harvest.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "harvest"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "appDetails": {
                "type": "string",
                "description": "The details of your app (e.g., example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "appDetails"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "harvest"
      },
      "connector.harvest.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "harvest"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "harvest"
      },
      "connector.heron.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "heron"
          },
          "settings": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "heron"
      },
      "connector.heron.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "heron"
          },
          "config": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "apiKey"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "heron"
      },
      "connector.highlevel.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "highlevel"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "highlevel"
      },
      "connector.highlevel.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "highlevel"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "highlevel"
      },
      "connector.hubspot.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "hubspot"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "hubspot"
      },
      "connector.hubspot.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "hubspot"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "hubspot"
      },
      "connector.instagram.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "instagram"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "instagram"
      },
      "connector.instagram.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "instagram"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "instagram"
      },
      "connector.intercom.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "intercom"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "intercom"
      },
      "connector.intercom.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "intercom"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "intercom"
      },
      "connector.jira.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "jira"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "jira"
      },
      "connector.jira.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "jira"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "jira"
      },
      "connector.keap.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "keap"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "keap"
      },
      "connector.keap.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "keap"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "keap"
      },
      "connector.lever.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "lever"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "lever"
      },
      "connector.lever.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "lever"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "lever"
      },
      "connector.linear.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linear"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "linear"
      },
      "connector.linear.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linear"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "linear"
      },
      "connector.linkedin.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linkedin"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "linkedin"
      },
      "connector.linkedin.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linkedin"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "linkedin"
      },
      "connector.linkhut.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linkhut"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "linkhut"
      },
      "connector.linkhut.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "linkhut"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "linkhut"
      },
      "connector.lunchmoney.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "lunchmoney"
          },
          "settings": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "lunchmoney"
      },
      "connector.lunchmoney.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "lunchmoney"
          },
          "config": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "lunchmoney"
      },
      "connector.mailchimp.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mailchimp"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "dc": {
                "type": "string",
                "pattern": "[a-z]+\\d*",
                "description": "The data center for your account (e.g., us6)"
              }
            },
            "required": [
              "oauth",
              "dc"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "mailchimp"
      },
      "connector.mailchimp.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mailchimp"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "mailchimp"
      },
      "connector.mercury.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mercury"
          },
          "settings": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "mercury"
      },
      "connector.mercury.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mercury"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "anyOf": [
                  {
                    "type": "null",
                    "description": "No oauth"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "clientSecret"
                    ],
                    "description": "Configure oauth"
                  }
                ],
                "description": "Oauth support"
              },
              "apikeyAuth": {
                "type": "boolean",
                "description": "API key auth support"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "mercury"
      },
      "connector.merge.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "merge"
          },
          "settings": {
            "type": "object",
            "properties": {
              "accountToken": {
                "type": "string"
              },
              "accountDetails": {}
            },
            "required": [
              "accountToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "merge"
      },
      "connector.merge.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "merge"
          },
          "config": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "apiKey"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "merge"
      },
      "connector.miro.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "miro"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "miro"
      },
      "connector.miro.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "miro"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "miro"
      },
      "connector.monday.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "monday"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "monday"
      },
      "connector.monday.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "monday"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "monday"
      },
      "connector.moota.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "moota"
          },
          "settings": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "moota"
      },
      "connector.moota.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "moota"
          },
          "config": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "required": [
              "token"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "moota"
      },
      "connector.mural.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mural"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "mural"
      },
      "connector.mural.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "mural"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "mural"
      },
      "connector.namely.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "namely"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "company": {
                "type": "string",
                "description": "The name of your Namely company (e.g., example)"
              }
            },
            "required": [
              "oauth",
              "company"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "namely"
      },
      "connector.namely.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "namely"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "namely"
      },
      "connector.nationbuilder.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "nationbuilder"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "accountId": {
                "type": "string",
                "description": "The account ID of your NationBuilder account (e.g., example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "accountId"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "nationbuilder"
      },
      "connector.nationbuilder.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "nationbuilder"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "nationbuilder"
      },
      "connector.netsuite.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "netsuite"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "accountId": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-_]+",
                "description": "The account ID of your NetSuite account (e.g., tstdrv231585)"
              }
            },
            "required": [
              "oauth",
              "accountId"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "netsuite"
      },
      "connector.netsuite.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "netsuite"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "netsuite"
      },
      "connector.notion.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "notion"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "notion"
      },
      "connector.notion.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "notion"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "notion"
      },
      "connector.odoo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "odoo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "serverUrl": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)",
                "description": "The domain of your Odoo account (e.g., https://example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "serverUrl"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "odoo"
      },
      "connector.odoo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "odoo"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "odoo"
      },
      "connector.okta.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "okta"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.okta\\.com",
                "description": "The subdomain of your Okta account (e.g., https://domain.okta.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "okta"
      },
      "connector.okta.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "okta"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "okta"
      },
      "connector.onebrick.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "onebrick"
          },
          "settings": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "onebrick"
      },
      "connector.onebrick.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "onebrick"
          },
          "config": {
            "type": "object",
            "properties": {
              "envName": {
                "type": "string",
                "enum": [
                  "sandbox",
                  "production"
                ]
              },
              "clientId": {
                "type": "string"
              },
              "clientSecret": {
                "type": "string"
              },
              "publicToken": {
                "type": "string"
              },
              "accessToken": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "redirectUrl": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "envName",
              "clientId",
              "clientSecret",
              "publicToken"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "onebrick"
      },
      "connector.openledger.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "openledger"
          },
          "settings": {
            "type": "object",
            "properties": {
              "entity_id": {
                "type": "string",
                "description": "Your entity's identifier, aka customer ID"
              }
            },
            "required": [
              "entity_id"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "openledger"
      },
      "connector.openledger.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "openledger"
          },
          "config": {
            "type": "object",
            "properties": {
              "developer_id": {
                "type": "string",
                "description": "Your developer ID for authentication"
              },
              "developer_secret": {
                "type": "string",
                "description": "Your developer secret"
              },
              "environment": {
                "type": "string",
                "enum": [
                  "development",
                  "production"
                ],
                "description": "Switch to \"production\" for live data"
              },
              "api_url": {
                "type": "string",
                "format": "uri",
                "description": "API endpoint"
              }
            },
            "required": [
              "developer_id",
              "developer_secret",
              "environment",
              "api_url"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "openledger"
      },
      "connector.osu.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "osu"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "osu"
      },
      "connector.osu.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "osu"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "osu"
      },
      "connector.oura.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "oura"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "oura"
      },
      "connector.oura.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "oura"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "oura"
      },
      "connector.outreach.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "outreach"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "outreach"
      },
      "connector.outreach.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "outreach"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "outreach"
      },
      "connector.pagerduty.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pagerduty"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "pagerduty"
      },
      "connector.pagerduty.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pagerduty"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "pagerduty"
      },
      "connector.pandadoc.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pandadoc"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "pandadoc"
      },
      "connector.pandadoc.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pandadoc"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "pandadoc"
      },
      "connector.payfit.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "payfit"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "payfit"
      },
      "connector.payfit.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "payfit"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "payfit"
      },
      "connector.paypal.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "paypal"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "paypal"
      },
      "connector.paypal.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "paypal"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "paypal"
      },
      "connector.pennylane.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pennylane"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "pennylane"
      },
      "connector.pennylane.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pennylane"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "pennylane"
      },
      "connector.pinterest.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pinterest"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "pinterest"
      },
      "connector.pinterest.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pinterest"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "pinterest"
      },
      "connector.pipedrive.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pipedrive"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "api_domain": {
                "type": "string",
                "pattern": "https?:\\/\\/.*",
                "description": "The API URL of your Pipedrive account (e.g., example)"
              }
            },
            "required": [
              "oauth",
              "api_domain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "pipedrive"
      },
      "connector.pipedrive.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "pipedrive"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "pipedrive"
      },
      "connector.plaid.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "plaid"
          },
          "settings": {
            "type": "object",
            "properties": {
              "itemId": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "accessToken": {
                "type": "string"
              },
              "institution": {},
              "item": {},
              "status": {},
              "webhookItemError": {
                "type": "null"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "plaid"
      },
      "connector.plaid.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "plaid"
          },
          "config": {
            "type": "object",
            "properties": {
              "envName": {
                "type": "string",
                "enum": [
                  "sandbox",
                  "development",
                  "production"
                ]
              },
              "credentials": {
                "anyOf": [
                  {
                    "type": "null",
                    "title": "Use OpenInt platform credentials"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "clientSecret"
                    ],
                    "title": "Use my own"
                  }
                ],
                "ui:field": "CredentialsField",
                "ui:fieldReplacesAnyOrOneOf": true
              },
              "clientName": {
                "type": "string",
                "maxLength": 30,
                "default": "This Application",
                "description": "The name of your application, as it should be displayed in Link.\n        Maximum length of 30 characters.\n        If a value longer than 30 characters is provided, Link will display \"This Application\" instead."
              },
              "products": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "assets",
                    "auth",
                    "balance",
                    "identity",
                    "investments",
                    "liabilities",
                    "payment_initiation",
                    "identity_verification",
                    "transactions",
                    "credit_details",
                    "income",
                    "income_verification",
                    "deposit_switch",
                    "standing_orders",
                    "transfer",
                    "employment",
                    "recurring_transactions"
                  ]
                },
                "default": [
                  "transactions"
                ],
                "ui:widget": "MultiSelectWidget"
              },
              "countryCodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "US",
                    "GB",
                    "ES",
                    "NL",
                    "FR",
                    "IE",
                    "CA",
                    "DE",
                    "IT",
                    "PL",
                    "DK",
                    "NO",
                    "SE",
                    "EE",
                    "LT",
                    "LV"
                  ]
                },
                "default": [
                  "US",
                  "CA"
                ],
                "ui:widget": "MultiSelectWidget"
              },
              "language": {
                "type": "string",
                "enum": [
                  "en",
                  "fr",
                  "es",
                  "nl",
                  "de"
                ],
                "default": "en"
              }
            },
            "required": [
              "envName",
              "clientName",
              "products",
              "countryCodes",
              "language"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "plaid"
      },
      "connector.podium.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "podium"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "apiVersion": {
                "type": "string",
                "description": "The API version of your Podium account (e.g., example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "apiVersion"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "podium"
      },
      "connector.podium.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "podium"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "podium"
      },
      "connector.postgres.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "postgres"
          },
          "settings": {
            "type": "object",
            "properties": {
              "databaseURL": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "postgres"
      },
      "connector.postgres.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "postgres"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "postgres"
      },
      "connector.productboard.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "productboard"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "productboard"
      },
      "connector.productboard.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "productboard"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "productboard"
      },
      "connector.qualtrics.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "qualtrics"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.qualtrics\\.com",
                "description": "The subdomain of your Qualtrics account (e.g., https://domain.qualtrics.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "qualtrics"
      },
      "connector.qualtrics.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "qualtrics"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "qualtrics"
      },
      "connector.quickbooks.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "quickbooks"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "quickbooks"
      },
      "connector.quickbooks.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "quickbooks"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "quickbooks"
      },
      "connector.ramp.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ramp"
          },
          "settings": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "startAfterTransactionId": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "ramp"
      },
      "connector.ramp.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ramp"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "clientSecret"
                ]
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "ramp"
      },
      "connector.reddit.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "reddit"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "reddit"
      },
      "connector.reddit.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "reddit"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "reddit"
      },
      "connector.sage.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "sage"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "sage"
      },
      "connector.sage.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "sage"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "sage"
      },
      "connector.salesforce.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "salesforce"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "instance_url": {
                "type": "string",
                "pattern": "https?:\\/\\/.*",
                "description": "The instance URL of your Salesforce account (e.g., example)"
              }
            },
            "required": [
              "oauth",
              "instance_url"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "salesforce"
      },
      "connector.salesforce.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "salesforce"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "salesforce"
      },
      "connector.salesloft.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "salesloft"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "salesloft"
      },
      "connector.salesloft.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "salesloft"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "salesloft"
      },
      "connector.saltedge.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "saltedge"
          },
          "settings": {}
        },
        "required": [
          "connector_name"
        ],
        "title": "saltedge"
      },
      "connector.saltedge.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "saltedge"
          },
          "config": {
            "type": "object",
            "properties": {
              "appId": {
                "type": "string"
              },
              "secret": {
                "type": "string"
              },
              "url": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "appId",
              "secret"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "saltedge"
      },
      "connector.segment.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "segment"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "segment"
      },
      "connector.segment.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "segment"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "segment"
      },
      "connector.servicem8.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "servicem8"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "servicem8"
      },
      "connector.servicem8.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "servicem8"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "servicem8"
      },
      "connector.servicenow.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "servicenow"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.service-now\\.com",
                "description": "The subdomain of your ServiceNow account (e.g., https://domain.service-now.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "servicenow"
      },
      "connector.servicenow.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "servicenow"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "servicenow"
      },
      "connector.sharepoint.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "sharepoint"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "sharepoint"
      },
      "connector.sharepoint.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "sharepoint"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "sharepoint"
      },
      "connector.shopify.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "shopify"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.myshopify\\.com",
                "description": "The subdomain of your Shopify account (e.g., https://domain.myshopify.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "shopify"
      },
      "connector.shopify.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "shopify"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "shopify"
      },
      "connector.signnow.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "signnow"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "signnow"
      },
      "connector.signnow.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "signnow"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "signnow"
      },
      "connector.slack.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "slack"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "slack"
      },
      "connector.slack.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "slack"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "slack"
      },
      "connector.smartsheet.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "smartsheet"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "smartsheet"
      },
      "connector.smartsheet.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "smartsheet"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "smartsheet"
      },
      "connector.snowflake.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "snowflake"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "snowflake_account_url": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)",
                "description": "The domain of your Snowflake account (e.g., https://example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "snowflake_account_url"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "snowflake"
      },
      "connector.snowflake.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "snowflake"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "snowflake"
      },
      "connector.splitwise.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "splitwise"
          },
          "settings": {
            "type": "object",
            "properties": {
              "currentUser": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "country_code": {
                    "type": "string"
                  },
                  "custom_picture": {
                    "type": "boolean"
                  },
                  "date_format": {
                    "type": "string"
                  },
                  "default_currency": {
                    "type": "string"
                  },
                  "default_group_id": {
                    "type": "number"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "force_refresh_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "added_as_friend": {
                        "type": "boolean"
                      },
                      "added_to_group": {
                        "type": "boolean"
                      },
                      "announcements": {
                        "type": "boolean"
                      },
                      "bills": {
                        "type": "boolean"
                      },
                      "expense_added": {
                        "type": "boolean"
                      },
                      "expense_updated": {
                        "type": "boolean"
                      },
                      "monthly_summary": {
                        "type": "boolean"
                      },
                      "payments": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "added_as_friend",
                      "added_to_group",
                      "announcements",
                      "bills",
                      "expense_added",
                      "expense_updated",
                      "monthly_summary",
                      "payments"
                    ]
                  },
                  "notifications_count": {
                    "type": "number"
                  },
                  "notifications_read": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "original": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "xxlarge": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "xlarge": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "large": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "medium": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "small": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "registration_status": {
                    "type": "string"
                  }
                },
                "required": [
                  "country_code",
                  "custom_picture",
                  "date_format",
                  "default_currency",
                  "default_group_id",
                  "email",
                  "first_name",
                  "force_refresh_at",
                  "id",
                  "last_name",
                  "locale",
                  "notifications",
                  "notifications_count",
                  "notifications_read",
                  "picture",
                  "registration_status"
                ]
              },
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "accessToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "splitwise"
      },
      "connector.splitwise.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "splitwise"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "splitwise"
      },
      "connector.spotify.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "spotify"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "spotify"
      },
      "connector.spotify.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "spotify"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "spotify"
      },
      "connector.squarespace.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "squarespace"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "customappDescription": {
                "type": "string",
                "description": "The user agent of your custom app (e.g., example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "customappDescription"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "squarespace"
      },
      "connector.squarespace.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "squarespace"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "squarespace"
      },
      "connector.squareup.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "squareup"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "squareup"
      },
      "connector.squareup.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "squareup"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "squareup"
      },
      "connector.stackexchange.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "stackexchange"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "stackexchange"
      },
      "connector.stackexchange.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "stackexchange"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "stackexchange"
      },
      "connector.strava.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "strava"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "strava"
      },
      "connector.strava.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "strava"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "strava"
      },
      "connector.stripe.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "stripe"
          },
          "settings": {
            "type": "object",
            "properties": {
              "secretKey": {
                "type": "string"
              }
            },
            "required": [
              "secretKey"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "stripe"
      },
      "connector.stripe.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "stripe"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "anyOf": [
                  {
                    "type": "null",
                    "description": "No oauth"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "clientId",
                      "clientSecret"
                    ],
                    "description": "Configure oauth"
                  }
                ],
                "description": "Oauth support"
              },
              "apikeyAuth": {
                "type": "boolean",
                "description": "API key auth support"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "stripe"
      },
      "connector.teamwork.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "teamwork"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "teamwork"
      },
      "connector.teamwork.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "teamwork"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "teamwork"
      },
      "connector.teller.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "teller"
          },
          "settings": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "required": [
              "token"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "teller"
      },
      "connector.teller.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "teller"
          },
          "config": {
            "type": "object",
            "properties": {
              "applicationId": {
                "type": "string"
              },
              "token": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "applicationId"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "teller"
      },
      "connector.ticktick.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ticktick"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "ticktick"
      },
      "connector.ticktick.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "ticktick"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "ticktick"
      },
      "connector.timely.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "timely"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "timely"
      },
      "connector.timely.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "timely"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "timely"
      },
      "connector.todoist.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "todoist"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "todoist"
      },
      "connector.todoist.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "todoist"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "todoist"
      },
      "connector.toggl.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "toggl"
          },
          "settings": {
            "type": "object",
            "properties": {
              "apiToken": {
                "type": "string"
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "password": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "apiToken"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "toggl"
      },
      "connector.toggl.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "toggl"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "toggl"
      },
      "connector.tremendous.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tremendous"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "tremendous"
      },
      "connector.tremendous.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tremendous"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "tremendous"
      },
      "connector.tsheetsteam.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tsheetsteam"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "tsheetsteam"
      },
      "connector.tsheetsteam.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tsheetsteam"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "tsheetsteam"
      },
      "connector.tumblr.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tumblr"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "tumblr"
      },
      "connector.tumblr.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "tumblr"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "tumblr"
      },
      "connector.twenty.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twenty"
          },
          "settings": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              }
            },
            "required": [
              "access_token"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "twenty"
      },
      "connector.twenty.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twenty"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "twenty"
      },
      "connector.twinfield.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twinfield"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "cluster": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.twinfield\\.com",
                "description": "The cluster to your Twinfield instance (e.g., https://accounting.twinfield.com)"
              }
            },
            "required": [
              "oauth",
              "cluster"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "twinfield"
      },
      "connector.twinfield.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twinfield"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "twinfield"
      },
      "connector.twitch.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twitch"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "twitch"
      },
      "connector.twitch.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twitch"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "twitch"
      },
      "connector.twitter.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twitter"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "twitter"
      },
      "connector.twitter.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "twitter"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "twitter"
      },
      "connector.typeform.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "typeform"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "typeform"
      },
      "connector.typeform.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "typeform"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "typeform"
      },
      "connector.uber.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "uber"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "uber"
      },
      "connector.uber.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "uber"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "uber"
      },
      "connector.venmo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "venmo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "me": {},
              "credentials": {}
            }
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "venmo"
      },
      "connector.venmo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "venmo"
          },
          "config": {
            "type": "object",
            "properties": {
              "v1BaseURL": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "v5BaseURL": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "proxy": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "cert": {
                    "type": "string"
                  }
                },
                "required": [
                  "url",
                  "cert"
                ]
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "venmo"
      },
      "connector.vimeo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "vimeo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "vimeo"
      },
      "connector.vimeo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "vimeo"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "vimeo"
      },
      "connector.wakatime.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wakatime"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "wakatime"
      },
      "connector.wakatime.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wakatime"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "wakatime"
      },
      "connector.wealthbox.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wealthbox"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "wealthbox"
      },
      "connector.wealthbox.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wealthbox"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "wealthbox"
      },
      "connector.webflow.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "webflow"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "webflow"
      },
      "connector.webflow.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "webflow"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "webflow"
      },
      "connector.whoop.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "whoop"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "whoop"
      },
      "connector.whoop.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "whoop"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "whoop"
      },
      "connector.wise.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wise"
          },
          "settings": {
            "type": "object",
            "properties": {
              "envName": {
                "type": "string",
                "enum": [
                  "sandbox",
                  "live"
                ]
              },
              "apiToken": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "envName"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "wise"
      },
      "connector.wise.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wise"
          },
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "wise"
      },
      "connector.wordpress.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wordpress"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "wordpress"
      },
      "connector.wordpress.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wordpress"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "wordpress"
      },
      "connector.wrike.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wrike"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "host": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)",
                "description": "The domain of your Wrike account (e.g., https://example-subdomain)"
              }
            },
            "required": [
              "oauth",
              "host"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "wrike"
      },
      "connector.wrike.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "wrike"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "wrike"
      },
      "connector.xero.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "xero"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "xero"
      },
      "connector.xero.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "xero"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "xero"
      },
      "connector.yahoo.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yahoo"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "apiDomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)",
                "description": "The domain to the API you want to connect to (e.g., https://fantasysports.yahooapis.com)"
              }
            },
            "required": [
              "oauth",
              "apiDomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "yahoo"
      },
      "connector.yahoo.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yahoo"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "yahoo"
      },
      "connector.yandex.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yandex"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "yandex"
      },
      "connector.yandex.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yandex"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "yandex"
      },
      "connector.yodlee.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yodlee"
          },
          "settings": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "accessToken": {
                    "type": "string"
                  },
                  "issuedAt": {
                    "type": "string"
                  },
                  "expiresIn": {
                    "type": "number"
                  }
                },
                "required": [
                  "accessToken",
                  "issuedAt",
                  "expiresIn"
                ]
              },
              "loginName": {
                "type": "string"
              },
              "providerAccountId": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "user": {
                "type": "null"
              },
              "provider": {
                "type": "null"
              },
              "providerAccount": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "aggregationSource": {
                    "type": "string"
                  },
                  "createdDate": {
                    "type": "string"
                  },
                  "dataset": {
                    "type": "array",
                    "items": {}
                  },
                  "id": {
                    "type": "number"
                  },
                  "isManual": {
                    "type": "boolean"
                  },
                  "providerId": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "LOGIN_IN_PROGRESS",
                      "USER_INPUT_REQUIRED",
                      "IN_PROGRESS",
                      "PARTIAL_SUCCESS",
                      "SUCCESS",
                      "FAILED"
                    ]
                  },
                  "isDeleted": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "required": [
                  "aggregationSource",
                  "createdDate",
                  "dataset",
                  "id",
                  "isManual",
                  "providerId",
                  "status"
                ]
              }
            },
            "required": [
              "loginName",
              "providerAccountId"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "yodlee"
      },
      "connector.yodlee.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "yodlee"
          },
          "config": {
            "type": "object",
            "properties": {
              "envName": {
                "type": "string",
                "enum": [
                  "sandbox",
                  "development",
                  "production"
                ]
              },
              "clientId": {
                "type": "string"
              },
              "clientSecret": {
                "type": "string"
              },
              "adminLoginName": {
                "type": "string"
              },
              "sandboxLoginName": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "proxy": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "cert": {
                    "type": "string"
                  }
                },
                "required": [
                  "url",
                  "cert"
                ]
              }
            },
            "required": [
              "envName",
              "clientId",
              "clientSecret",
              "adminLoginName"
            ]
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "yodlee"
      },
      "connector.zapier.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zapier"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zapier"
      },
      "connector.zapier.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zapier"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zapier"
      },
      "connector.zendesk.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zendesk"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "subdomain": {
                "type": "string",
                "pattern": "https:\\/\\/([a-z0-9_-]+)\\.zendesk\\.com",
                "description": "The subdomain of your Zendesk account (e.g., https://domain.zendesk.com)"
              }
            },
            "required": [
              "oauth",
              "subdomain"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zendesk"
      },
      "connector.zendesk.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zendesk"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zendesk"
      },
      "connector.zenefits.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zenefits"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zenefits"
      },
      "connector.zenefits.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zenefits"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zenefits"
      },
      "connector.zoho-desk.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoho-desk"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "extension": {
                "type": "string",
                "pattern": "https:\\/\\/accounts\\.zoho\\.([a-z.]+)\\/",
                "description": "The domain extension of your Zoho account (e.g., https://accounts.zoho.com/)"
              }
            },
            "required": [
              "oauth",
              "extension"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zoho-desk"
      },
      "connector.zoho-desk.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoho-desk"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zoho-desk"
      },
      "connector.zoho.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoho"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              },
              "extension": {
                "type": "string",
                "pattern": "https:\\/\\/accounts\\.zoho\\.([a-z.]+)\\/",
                "description": "The domain extension of your Zoho account (e.g., https://accounts.zoho.com/)"
              }
            },
            "required": [
              "oauth",
              "extension"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zoho"
      },
      "connector.zoho.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoho"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zoho"
      },
      "connector.zoom.discriminated_connection_settings": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoom"
          },
          "settings": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Client ID used for the connection"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "refresh_token": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      },
                      "expires_at": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "raw": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "access_token"
                    ],
                    "description": "Output of the postConnect hook for oauth2 connectors"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "last_fetched_at": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {}
                  }
                }
              },
              "access_token": {
                "type": "string",
                "description": "Same as oauth.credentials.access_token, but more convenient to access. Optional for backward compatibility until we remove the oauth field"
              }
            },
            "required": [
              "oauth"
            ]
          }
        },
        "required": [
          "connector_name"
        ],
        "title": "zoom"
      },
      "connector.zoom.discriminated_connector_config": {
        "type": "object",
        "properties": {
          "connector_name": {
            "type": "string",
            "const": "zoom"
          },
          "config": {
            "type": "object",
            "properties": {
              "oauth": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "client_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "scopes": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirect_uri": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom redirect URI"
                  }
                },
                "description": "Base oauth configuration for the connector",
                "ui:field": "OAuthField"
              }
            }
          }
        },
        "required": [
          "connector_name",
          "config"
        ],
        "title": "zoom"
      },
      "core.connection_select": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "customer_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "connector_config_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "integration_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status_message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "display_name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "disabled": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "status": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "healthy",
                  "disconnected",
                  "error",
                  "manual",
                  "unknown",
                  null
                ]
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {},
                "description": "\n  JSON object can can be used to associate arbitrary metadata to\n  avoid needing a separate 1-1 table just for simple key values in your application.\n  During updates this object will be shallowly merged\n"
              }
            },
            "required": [
              "id",
              "customer_id",
              "connector_config_id",
              "integration_id",
              "created_at",
              "updated_at",
              "display_name",
              "disabled"
            ]
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/connector.accelo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.adobe.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.adyen.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.aircall.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.amazon.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.apaleo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.asana.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.attio.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.auth0.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.autodesk.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.aws.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.bamboohr.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.basecamp.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.battlenet.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.bitbucket.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.bitly.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.blackbaud.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.boldsign.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.box.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.braintree.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.calendly.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.clickup.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.close.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.confluence.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.contentful.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.contentstack.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.copper.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.coros.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.datev.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.deel.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.dialpad.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.digitalocean.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.discord.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.docusign.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.dropbox.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.ebay.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.egnyte.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.envoy.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.eventbrite.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.exist.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.facebook.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.factorial.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.figma.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.fitbit.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.fortnox.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.freshbooks.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.front.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.github.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.gitlab.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.gong.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.google-calendar.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.google-docs.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.google-drive.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.google-mail.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.google-sheet.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.gorgias.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.grain.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.gumroad.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.gusto.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.harvest.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.highlevel.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.hubspot.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.instagram.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.intercom.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.jira.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.keap.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.lever.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.linear.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.linkedin.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.linkhut.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.mailchimp.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.miro.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.monday.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.mural.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.namely.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.netsuite.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.notion.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.odoo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.okta.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.osu.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.oura.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.outreach.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.pagerduty.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.pandadoc.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.payfit.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.paypal.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.pennylane.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.pinterest.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.pipedrive.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.podium.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.productboard.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.qualtrics.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.quickbooks.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.reddit.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.sage.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.salesforce.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.salesloft.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.segment.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.servicem8.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.servicenow.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.sharepoint.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.shopify.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.signnow.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.slack.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.smartsheet.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.snowflake.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.spotify.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.squarespace.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.squareup.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.stackexchange.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.strava.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.teamwork.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.ticktick.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.timely.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.todoist.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.tremendous.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.tumblr.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.twinfield.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.twitch.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.twitter.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.typeform.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.uber.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.vimeo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.wakatime.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.wealthbox.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.webflow.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.whoop.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.wordpress.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.wrike.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.xero.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.yahoo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.yandex.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zapier.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zendesk.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zenefits.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zoho.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.zoom.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.airtable.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.apollo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.brex.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.coda.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.finch.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.firebase.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.foreceipt.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.greenhouse.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.heron.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.mercury.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.merge.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.moota.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.onebrick.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.openledger.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.plaid.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.postgres.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.ramp.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.saltedge.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.splitwise.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.stripe.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.teller.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.toggl.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.twenty.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.venmo.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.wise.discriminated_connection_settings"
              },
              {
                "$ref": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
              }
            ],
            "discriminator": {
              "propertyName": "connector_name",
              "mapping": {
                "accelo": "#/components/schemas/connector.accelo.discriminated_connection_settings",
                "acme-oauth2": "#/components/schemas/connector.acme-oauth2.discriminated_connection_settings",
                "adobe": "#/components/schemas/connector.adobe.discriminated_connection_settings",
                "adyen": "#/components/schemas/connector.adyen.discriminated_connection_settings",
                "aircall": "#/components/schemas/connector.aircall.discriminated_connection_settings",
                "amazon": "#/components/schemas/connector.amazon.discriminated_connection_settings",
                "apaleo": "#/components/schemas/connector.apaleo.discriminated_connection_settings",
                "asana": "#/components/schemas/connector.asana.discriminated_connection_settings",
                "attio": "#/components/schemas/connector.attio.discriminated_connection_settings",
                "auth0": "#/components/schemas/connector.auth0.discriminated_connection_settings",
                "autodesk": "#/components/schemas/connector.autodesk.discriminated_connection_settings",
                "aws": "#/components/schemas/connector.aws.discriminated_connection_settings",
                "bamboohr": "#/components/schemas/connector.bamboohr.discriminated_connection_settings",
                "basecamp": "#/components/schemas/connector.basecamp.discriminated_connection_settings",
                "battlenet": "#/components/schemas/connector.battlenet.discriminated_connection_settings",
                "bigcommerce": "#/components/schemas/connector.bigcommerce.discriminated_connection_settings",
                "bitbucket": "#/components/schemas/connector.bitbucket.discriminated_connection_settings",
                "bitly": "#/components/schemas/connector.bitly.discriminated_connection_settings",
                "blackbaud": "#/components/schemas/connector.blackbaud.discriminated_connection_settings",
                "boldsign": "#/components/schemas/connector.boldsign.discriminated_connection_settings",
                "box": "#/components/schemas/connector.box.discriminated_connection_settings",
                "braintree": "#/components/schemas/connector.braintree.discriminated_connection_settings",
                "calendly": "#/components/schemas/connector.calendly.discriminated_connection_settings",
                "clickup": "#/components/schemas/connector.clickup.discriminated_connection_settings",
                "close": "#/components/schemas/connector.close.discriminated_connection_settings",
                "confluence": "#/components/schemas/connector.confluence.discriminated_connection_settings",
                "contentful": "#/components/schemas/connector.contentful.discriminated_connection_settings",
                "contentstack": "#/components/schemas/connector.contentstack.discriminated_connection_settings",
                "copper": "#/components/schemas/connector.copper.discriminated_connection_settings",
                "coros": "#/components/schemas/connector.coros.discriminated_connection_settings",
                "datev": "#/components/schemas/connector.datev.discriminated_connection_settings",
                "deel": "#/components/schemas/connector.deel.discriminated_connection_settings",
                "dialpad": "#/components/schemas/connector.dialpad.discriminated_connection_settings",
                "digitalocean": "#/components/schemas/connector.digitalocean.discriminated_connection_settings",
                "discord": "#/components/schemas/connector.discord.discriminated_connection_settings",
                "docusign": "#/components/schemas/connector.docusign.discriminated_connection_settings",
                "dropbox": "#/components/schemas/connector.dropbox.discriminated_connection_settings",
                "ebay": "#/components/schemas/connector.ebay.discriminated_connection_settings",
                "egnyte": "#/components/schemas/connector.egnyte.discriminated_connection_settings",
                "envoy": "#/components/schemas/connector.envoy.discriminated_connection_settings",
                "eventbrite": "#/components/schemas/connector.eventbrite.discriminated_connection_settings",
                "exist": "#/components/schemas/connector.exist.discriminated_connection_settings",
                "facebook": "#/components/schemas/connector.facebook.discriminated_connection_settings",
                "factorial": "#/components/schemas/connector.factorial.discriminated_connection_settings",
                "figma": "#/components/schemas/connector.figma.discriminated_connection_settings",
                "fitbit": "#/components/schemas/connector.fitbit.discriminated_connection_settings",
                "fortnox": "#/components/schemas/connector.fortnox.discriminated_connection_settings",
                "freshbooks": "#/components/schemas/connector.freshbooks.discriminated_connection_settings",
                "front": "#/components/schemas/connector.front.discriminated_connection_settings",
                "github": "#/components/schemas/connector.github.discriminated_connection_settings",
                "gitlab": "#/components/schemas/connector.gitlab.discriminated_connection_settings",
                "gong": "#/components/schemas/connector.gong.discriminated_connection_settings",
                "google-calendar": "#/components/schemas/connector.google-calendar.discriminated_connection_settings",
                "google-docs": "#/components/schemas/connector.google-docs.discriminated_connection_settings",
                "google-drive": "#/components/schemas/connector.google-drive.discriminated_connection_settings",
                "google-mail": "#/components/schemas/connector.google-mail.discriminated_connection_settings",
                "google-sheet": "#/components/schemas/connector.google-sheet.discriminated_connection_settings",
                "gorgias": "#/components/schemas/connector.gorgias.discriminated_connection_settings",
                "grain": "#/components/schemas/connector.grain.discriminated_connection_settings",
                "gumroad": "#/components/schemas/connector.gumroad.discriminated_connection_settings",
                "gusto": "#/components/schemas/connector.gusto.discriminated_connection_settings",
                "harvest": "#/components/schemas/connector.harvest.discriminated_connection_settings",
                "highlevel": "#/components/schemas/connector.highlevel.discriminated_connection_settings",
                "hubspot": "#/components/schemas/connector.hubspot.discriminated_connection_settings",
                "instagram": "#/components/schemas/connector.instagram.discriminated_connection_settings",
                "intercom": "#/components/schemas/connector.intercom.discriminated_connection_settings",
                "jira": "#/components/schemas/connector.jira.discriminated_connection_settings",
                "keap": "#/components/schemas/connector.keap.discriminated_connection_settings",
                "lever": "#/components/schemas/connector.lever.discriminated_connection_settings",
                "linear": "#/components/schemas/connector.linear.discriminated_connection_settings",
                "linkedin": "#/components/schemas/connector.linkedin.discriminated_connection_settings",
                "linkhut": "#/components/schemas/connector.linkhut.discriminated_connection_settings",
                "mailchimp": "#/components/schemas/connector.mailchimp.discriminated_connection_settings",
                "miro": "#/components/schemas/connector.miro.discriminated_connection_settings",
                "monday": "#/components/schemas/connector.monday.discriminated_connection_settings",
                "mural": "#/components/schemas/connector.mural.discriminated_connection_settings",
                "namely": "#/components/schemas/connector.namely.discriminated_connection_settings",
                "nationbuilder": "#/components/schemas/connector.nationbuilder.discriminated_connection_settings",
                "netsuite": "#/components/schemas/connector.netsuite.discriminated_connection_settings",
                "notion": "#/components/schemas/connector.notion.discriminated_connection_settings",
                "odoo": "#/components/schemas/connector.odoo.discriminated_connection_settings",
                "okta": "#/components/schemas/connector.okta.discriminated_connection_settings",
                "osu": "#/components/schemas/connector.osu.discriminated_connection_settings",
                "oura": "#/components/schemas/connector.oura.discriminated_connection_settings",
                "outreach": "#/components/schemas/connector.outreach.discriminated_connection_settings",
                "pagerduty": "#/components/schemas/connector.pagerduty.discriminated_connection_settings",
                "pandadoc": "#/components/schemas/connector.pandadoc.discriminated_connection_settings",
                "payfit": "#/components/schemas/connector.payfit.discriminated_connection_settings",
                "paypal": "#/components/schemas/connector.paypal.discriminated_connection_settings",
                "pennylane": "#/components/schemas/connector.pennylane.discriminated_connection_settings",
                "pinterest": "#/components/schemas/connector.pinterest.discriminated_connection_settings",
                "pipedrive": "#/components/schemas/connector.pipedrive.discriminated_connection_settings",
                "podium": "#/components/schemas/connector.podium.discriminated_connection_settings",
                "productboard": "#/components/schemas/connector.productboard.discriminated_connection_settings",
                "qualtrics": "#/components/schemas/connector.qualtrics.discriminated_connection_settings",
                "quickbooks": "#/components/schemas/connector.quickbooks.discriminated_connection_settings",
                "reddit": "#/components/schemas/connector.reddit.discriminated_connection_settings",
                "sage": "#/components/schemas/connector.sage.discriminated_connection_settings",
                "salesforce": "#/components/schemas/connector.salesforce.discriminated_connection_settings",
                "salesloft": "#/components/schemas/connector.salesloft.discriminated_connection_settings",
                "segment": "#/components/schemas/connector.segment.discriminated_connection_settings",
                "servicem8": "#/components/schemas/connector.servicem8.discriminated_connection_settings",
                "servicenow": "#/components/schemas/connector.servicenow.discriminated_connection_settings",
                "sharepoint": "#/components/schemas/connector.sharepoint.discriminated_connection_settings",
                "shopify": "#/components/schemas/connector.shopify.discriminated_connection_settings",
                "signnow": "#/components/schemas/connector.signnow.discriminated_connection_settings",
                "slack": "#/components/schemas/connector.slack.discriminated_connection_settings",
                "smartsheet": "#/components/schemas/connector.smartsheet.discriminated_connection_settings",
                "snowflake": "#/components/schemas/connector.snowflake.discriminated_connection_settings",
                "spotify": "#/components/schemas/connector.spotify.discriminated_connection_settings",
                "squarespace": "#/components/schemas/connector.squarespace.discriminated_connection_settings",
                "squareup": "#/components/schemas/connector.squareup.discriminated_connection_settings",
                "stackexchange": "#/components/schemas/connector.stackexchange.discriminated_connection_settings",
                "strava": "#/components/schemas/connector.strava.discriminated_connection_settings",
                "teamwork": "#/components/schemas/connector.teamwork.discriminated_connection_settings",
                "ticktick": "#/components/schemas/connector.ticktick.discriminated_connection_settings",
                "timely": "#/components/schemas/connector.timely.discriminated_connection_settings",
                "todoist": "#/components/schemas/connector.todoist.discriminated_connection_settings",
                "tremendous": "#/components/schemas/connector.tremendous.discriminated_connection_settings",
                "tsheetsteam": "#/components/schemas/connector.tsheetsteam.discriminated_connection_settings",
                "tumblr": "#/components/schemas/connector.tumblr.discriminated_connection_settings",
                "twinfield": "#/components/schemas/connector.twinfield.discriminated_connection_settings",
                "twitch": "#/components/schemas/connector.twitch.discriminated_connection_settings",
                "twitter": "#/components/schemas/connector.twitter.discriminated_connection_settings",
                "typeform": "#/components/schemas/connector.typeform.discriminated_connection_settings",
                "uber": "#/components/schemas/connector.uber.discriminated_connection_settings",
                "vimeo": "#/components/schemas/connector.vimeo.discriminated_connection_settings",
                "wakatime": "#/components/schemas/connector.wakatime.discriminated_connection_settings",
                "wealthbox": "#/components/schemas/connector.wealthbox.discriminated_connection_settings",
                "webflow": "#/components/schemas/connector.webflow.discriminated_connection_settings",
                "whoop": "#/components/schemas/connector.whoop.discriminated_connection_settings",
                "wordpress": "#/components/schemas/connector.wordpress.discriminated_connection_settings",
                "wrike": "#/components/schemas/connector.wrike.discriminated_connection_settings",
                "xero": "#/components/schemas/connector.xero.discriminated_connection_settings",
                "yahoo": "#/components/schemas/connector.yahoo.discriminated_connection_settings",
                "yandex": "#/components/schemas/connector.yandex.discriminated_connection_settings",
                "zapier": "#/components/schemas/connector.zapier.discriminated_connection_settings",
                "zendesk": "#/components/schemas/connector.zendesk.discriminated_connection_settings",
                "zenefits": "#/components/schemas/connector.zenefits.discriminated_connection_settings",
                "zoho-desk": "#/components/schemas/connector.zoho-desk.discriminated_connection_settings",
                "zoho": "#/components/schemas/connector.zoho.discriminated_connection_settings",
                "zoom": "#/components/schemas/connector.zoom.discriminated_connection_settings",
                "airtable": "#/components/schemas/connector.airtable.discriminated_connection_settings",
                "apollo": "#/components/schemas/connector.apollo.discriminated_connection_settings",
                "brex": "#/components/schemas/connector.brex.discriminated_connection_settings",
                "coda": "#/components/schemas/connector.coda.discriminated_connection_settings",
                "finch": "#/components/schemas/connector.finch.discriminated_connection_settings",
                "firebase": "#/components/schemas/connector.firebase.discriminated_connection_settings",
                "foreceipt": "#/components/schemas/connector.foreceipt.discriminated_connection_settings",
                "greenhouse": "#/components/schemas/connector.greenhouse.discriminated_connection_settings",
                "heron": "#/components/schemas/connector.heron.discriminated_connection_settings",
                "lunchmoney": "#/components/schemas/connector.lunchmoney.discriminated_connection_settings",
                "mercury": "#/components/schemas/connector.mercury.discriminated_connection_settings",
                "merge": "#/components/schemas/connector.merge.discriminated_connection_settings",
                "moota": "#/components/schemas/connector.moota.discriminated_connection_settings",
                "onebrick": "#/components/schemas/connector.onebrick.discriminated_connection_settings",
                "openledger": "#/components/schemas/connector.openledger.discriminated_connection_settings",
                "plaid": "#/components/schemas/connector.plaid.discriminated_connection_settings",
                "postgres": "#/components/schemas/connector.postgres.discriminated_connection_settings",
                "ramp": "#/components/schemas/connector.ramp.discriminated_connection_settings",
                "saltedge": "#/components/schemas/connector.saltedge.discriminated_connection_settings",
                "splitwise": "#/components/schemas/connector.splitwise.discriminated_connection_settings",
                "stripe": "#/components/schemas/connector.stripe.discriminated_connection_settings",
                "teller": "#/components/schemas/connector.teller.discriminated_connection_settings",
                "toggl": "#/components/schemas/connector.toggl.discriminated_connection_settings",
                "twenty": "#/components/schemas/connector.twenty.discriminated_connection_settings",
                "venmo": "#/components/schemas/connector.venmo.discriminated_connection_settings",
                "wise": "#/components/schemas/connector.wise.discriminated_connection_settings",
                "yodlee": "#/components/schemas/connector.yodlee.discriminated_connection_settings"
              }
            },
            "description": "Connector specific data"
          }
        ],
        "title": "connection_select"
      },
      "core.connector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "stage": {
            "type": "string",
            "enum": [
              "alpha",
              "beta",
              "ga",
              "hidden"
            ]
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "web",
                "mobile",
                "desktop",
                "local",
                "cloud"
              ]
            }
          },
          "schemas": {
            "type": "object",
            "properties": {
              "connector_config": {},
              "connection_settings": {},
              "integration_data": {},
              "webhook_input": {},
              "pre_connect_input": {},
              "connect_input": {},
              "connect_output": {}
            },
            "additionalProperties": false
          },
          "auth_type": {
            "type": "string",
            "enum": [
              "BASIC",
              "OAUTH1",
              "OAUTH2",
              "OAUTH2CC",
              "API_KEY",
              "CUSTOM"
            ]
          },
          "required_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "openint_default_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "openint_allowed_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "scope"
              ]
            }
          },
          "has_openint_credentials": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "title": "Connector"
      },
      "core.connector.name": {
        "type": "string",
        "enum": [
          "accelo",
          "acme-oauth2",
          "adobe",
          "adyen",
          "aircall",
          "airtable",
          "amazon",
          "apaleo",
          "apollo",
          "asana",
          "attio",
          "auth0",
          "autodesk",
          "aws",
          "bamboohr",
          "basecamp",
          "battlenet",
          "bigcommerce",
          "bitbucket",
          "bitly",
          "blackbaud",
          "boldsign",
          "box",
          "braintree",
          "brex",
          "calendly",
          "clickup",
          "close",
          "coda",
          "confluence",
          "contentful",
          "contentstack",
          "copper",
          "coros",
          "datev",
          "deel",
          "dialpad",
          "digitalocean",
          "discord",
          "docusign",
          "dropbox",
          "ebay",
          "egnyte",
          "envoy",
          "eventbrite",
          "exist",
          "facebook",
          "factorial",
          "figma",
          "finch",
          "firebase",
          "fitbit",
          "foreceipt",
          "fortnox",
          "freshbooks",
          "front",
          "github",
          "gitlab",
          "gong",
          "google-calendar",
          "google-docs",
          "google-drive",
          "google-mail",
          "google-sheet",
          "gorgias",
          "grain",
          "greenhouse",
          "gumroad",
          "gusto",
          "harvest",
          "heron",
          "highlevel",
          "hubspot",
          "instagram",
          "intercom",
          "jira",
          "keap",
          "lever",
          "linear",
          "linkedin",
          "linkhut",
          "lunchmoney",
          "mailchimp",
          "mercury",
          "merge",
          "miro",
          "monday",
          "moota",
          "mural",
          "namely",
          "nationbuilder",
          "netsuite",
          "notion",
          "odoo",
          "okta",
          "onebrick",
          "openledger",
          "osu",
          "oura",
          "outreach",
          "pagerduty",
          "pandadoc",
          "payfit",
          "paypal",
          "pennylane",
          "pinterest",
          "pipedrive",
          "plaid",
          "podium",
          "postgres",
          "productboard",
          "qualtrics",
          "quickbooks",
          "ramp",
          "reddit",
          "sage",
          "salesforce",
          "salesloft",
          "saltedge",
          "segment",
          "servicem8",
          "servicenow",
          "sharepoint",
          "shopify",
          "signnow",
          "slack",
          "smartsheet",
          "snowflake",
          "splitwise",
          "spotify",
          "squarespace",
          "squareup",
          "stackexchange",
          "strava",
          "stripe",
          "teamwork",
          "teller",
          "ticktick",
          "timely",
          "todoist",
          "toggl",
          "tremendous",
          "tsheetsteam",
          "tumblr",
          "twenty",
          "twinfield",
          "twitch",
          "twitter",
          "typeform",
          "uber",
          "venmo",
          "vimeo",
          "wakatime",
          "wealthbox",
          "webflow",
          "whoop",
          "wise",
          "wordpress",
          "wrike",
          "xero",
          "yahoo",
          "yandex",
          "yodlee",
          "zapier",
          "zendesk",
          "zenefits",
          "zoho",
          "zoho-desk",
          "zoom"
        ],
        "title": "connector"
      },
      "core.customer_select": {
        "type": "object",
        "properties": {
          "org_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "api_key": {
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              {
                "type": "object",
                "additionalProperties": {}
              },
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "org_id",
          "id",
          "api_key",
          "metadata",
          "created_at",
          "updated_at"
        ],
        "title": "customer_select"
      },
      "core.event": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "user": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  {
                    "type": "array",
                    "items": {}
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "v": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "org_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "user_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "customer_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "prompt": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "timestamp",
              "user",
              "v",
              "org_id",
              "user_id",
              "customer_id"
            ]
          },
          {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "debug.debug"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "webhook.received"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "traceId": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "query": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "headers": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "body": {}
                    },
                    "required": [
                      "traceId",
                      "method",
                      "path",
                      "query",
                      "headers"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "db.user-created"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "db.user-deleted"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "db.connection-created"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connection_id": {
                        "type": "string",
                        "description": "Must start with 'conn_'"
                      }
                    },
                    "required": [
                      "connection_id"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "db.connection-deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connection_id": {
                        "type": "string",
                        "description": "Must start with 'conn_'"
                      }
                    },
                    "required": [
                      "connection_id"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "user.signin"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "user.signout"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.session-started"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connector_name": {
                        "type": "string"
                      },
                      "meta": {}
                    },
                    "required": [
                      "connector_name"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.session-cancelled"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connector_name": {
                        "type": "string"
                      },
                      "meta": {}
                    },
                    "required": [
                      "connector_name"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.session-succeeded"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connector_name": {
                        "type": "string"
                      },
                      "meta": {}
                    },
                    "required": [
                      "connector_name"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.session-errored"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connector_name": {
                        "type": "string"
                      },
                      "meta": {}
                    },
                    "required": [
                      "connector_name"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.loaded"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.loading-error"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "error_message": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "error_details": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.connection-connected"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connection_id": {
                        "type": "string",
                        "description": "Must start with 'conn_'"
                      },
                      "customer_id": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "connection_id",
                      "customer_id"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.connection-deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connection_id": {
                        "type": "string",
                        "description": "Must start with 'conn_'"
                      },
                      "customer_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "connection_id",
                      "customer_id"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "connect.connection-checked"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "connection_id": {
                        "type": "string",
                        "description": "Must start with 'conn_'"
                      },
                      "status": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "status_message": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "customer_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "connection_id",
                      "status",
                      "status_message",
                      "customer_id"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "api.token-copied"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "api.graphql-request"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "api.rest-request"
                  },
                  "data": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "const": "pageview"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "current_url": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "current_url",
                      "path"
                    ]
                  }
                },
                "required": [
                  "name",
                  "data"
                ]
              }
            ]
          }
        ],
        "title": "event"
      },
      "core.integration_select": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "standard": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              {
                "type": "object",
                "additionalProperties": {}
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "external": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              {
                "type": "object",
                "additionalProperties": {}
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "connector_name": {
            "$ref": "#/components/schemas/core.connector.name"
          },
          "name": {
            "type": "string"
          },
          "logo_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "stage": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "alpha",
              "beta",
              "ga",
              null
            ]
          },
          "platforms": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "enum": [
                "web",
                "mobile",
                "desktop"
              ]
            }
          },
          "category": {
            "type": [
              "string",
              "null"
            ]
          },
          "auth_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "version": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "standard",
          "external",
          "created_at",
          "updated_at",
          "connector_name",
          "name"
        ],
        "title": "integration_select"
      },
      "error.BAD_REQUEST": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Invalid input data"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "BAD_REQUEST"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Invalid input data error (400)",
        "description": "The error information",
        "example": {
          "code": "BAD_REQUEST",
          "message": "Invalid input data",
          "issues": []
        }
      },
      "error.FORBIDDEN": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Insufficient access"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "FORBIDDEN"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Insufficient access error (403)",
        "description": "The error information",
        "example": {
          "code": "FORBIDDEN",
          "message": "Insufficient access",
          "issues": []
        }
      },
      "error.INTERNAL_SERVER_ERROR": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Internal server error"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Internal server error error (500)",
        "description": "The error information",
        "example": {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "Internal server error",
          "issues": []
        }
      },
      "error.NOT_FOUND": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Not found"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "NOT_FOUND"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Not found error (404)",
        "description": "The error information",
        "example": {
          "code": "NOT_FOUND",
          "message": "Not found",
          "issues": []
        }
      },
      "error.UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Authorization not provided"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "UNAUTHORIZED"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Authorization not provided error (401)",
        "description": "The error information",
        "example": {
          "code": "UNAUTHORIZED",
          "message": "Authorization not provided",
          "issues": []
        }
      }
    }
  }
}