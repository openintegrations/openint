# set -U fish_user_paths $fish_user_paths ./bin
export PATH="$PATH:./bin"

export SENTRY_SUPPRESS_TURBOPACK_WARNING=1
export NODE_OPTIONS='--disable-warning=ExperimentalWarning --max-old-space-size=8192'


# Add this to your .bashrc or .zshrc
# Add this to your .envrc file
source "$HOME/.nvm/nvm.sh"  # Adjust path according to your NVM installation
auto_nvm() {
  if [[ -f package.json ]]; then
    # Extract node version from package.json engines field
    NODE_VERSION=$(cat package.json | grep -o '"node": *"[^"]*"' | grep -o '"[^"]*"$' | sed 's/"//g')

    # If version is found, use it
    if [[ ! -z $NODE_VERSION ]]; then
      # Handle version ranges by taking the minimum version
      NODE_VERSION=$(echo $NODE_VERSION | sed -E 's/[^0-9.].*//g')
      echo "Found Node.js version $NODE_VERSION in package.json, switching..."
      nvm use $NODE_VERSION || nvm install $NODE_VERSION
    fi
  elif [[ -f .nvmrc ]]; then
    # Fall back to .nvmrc if it exists
    nvm use
  fi
}

# Run it in the current directory when shell starts
auto_nvm

# Load local configuration if it exists
if [ -f .envrc.local ]; then
  echo "Loading .envrc.local"
  source_env .envrc.local
fi
