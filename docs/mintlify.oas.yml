openapi: 3.1.0
info:
  title: OpenInt
  version: 1.0.0
servers:
  - url: https://api.openint.dev/v1
paths:
  /connector:
    get:
      operationId: listConnectors
      summary: List Connectors
      description: List all connectors to understand what integrations are available to configure
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: query
          name: limit
          description: Limit the number of items returned
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 50
            description: Limit the number of items returned
        - in: query
          name: offset
          description: Offset the items returned
          schema:
            type: integer
            minimum: 0
            default: 0
            description: Offset the items returned
        - in: query
          name: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - schemas
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/core.connector'
                      properties:
                        integrations:
                          type: array
                          items:
                            $ref: '#/components/schemas/core.integration_select'
                  total:
                    type: integer
                    minimum: 0
                    description: Total number of items in the database for the organization
                  limit:
                    type: integer
                    minimum: 0
                    description: Limit the number of items returned
                  offset:
                    type: integer
                    minimum: 0
                    description: Offset the items returned
                  has_next_page:
                    type: boolean
                    description: Convenience flag = offset + limit >= total
                required:
                  - items
                  - total
                  - limit
                  - offset
                description: List of connectors
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              // Automatically fetches more pages as needed.
              for await (const listConnectorsResponse of client.listConnectors()) {
                console.log(listConnectorsResponse.name);
              }
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            page = client.list_connectors()
            page = page.items[0]
            print(page.name)
  /connector-config/{id}:
    get:
      operationId: getConnectorConfig
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: id
          description: The id of the connector config, starts with `ccfg_`
          schema:
            type: string
            pattern: ^ccfg_
            description: The id of the connector config, starts with `ccfg_`
          required: true
        - in: query
          name: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - connector
                - connector.schemas
                - connection_count
              description: 'Fields to expand: connector (includes connector details), enabled_integrations (includes enabled integrations details)'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      org_id:
                        type: string
                      display_name:
                        type:
                          - string
                          - 'null'
                      disabled:
                        type:
                          - boolean
                          - 'null'
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                        description: |2

                            JSON object can can be used to associate arbitrary metadata to
                            avoid needing a separate 1-1 table just for simple key values in your application.
                            During updates this object will be shallowly merged
                    required:
                      - id
                      - created_at
                      - updated_at
                      - org_id
                      - display_name
                      - disabled
                  - oneOf:
                      - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.aircall.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.confluence.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.discord.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.facebook.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.github.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.gong.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.google-calendar.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.google-docs.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.google-drive.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.google-mail.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.google-sheet.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.hubspot.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.instagram.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.intercom.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.jira.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.lever.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.linear.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.linkedin.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.notion.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.outreach.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.pipedrive.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.quickbooks.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.reddit.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.salesloft.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.sharepoint.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.slack.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.twitter.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.xero.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.airtable.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.apollo.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.brex.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.coda.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.finch.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.firebase.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.foreceipt.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.greenhouse.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.heron.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.mercury.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.merge.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.moota.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.onebrick.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.openledger.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.plaid.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.postgres.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.ramp.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.saltedge.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.splitwise.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.stripe.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.teller.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.toggl.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.twenty.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.venmo.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.wise.discriminated_connector_config'
                      - $ref: '#/components/schemas/connector.yodlee.discriminated_connector_config'
                    discriminator:
                      propertyName: connector_name
                      mapping:
                        acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connector_config'
                        aircall: '#/components/schemas/connector.aircall.discriminated_connector_config'
                        confluence: '#/components/schemas/connector.confluence.discriminated_connector_config'
                        discord: '#/components/schemas/connector.discord.discriminated_connector_config'
                        facebook: '#/components/schemas/connector.facebook.discriminated_connector_config'
                        github: '#/components/schemas/connector.github.discriminated_connector_config'
                        gong: '#/components/schemas/connector.gong.discriminated_connector_config'
                        google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connector_config'
                        google-docs: '#/components/schemas/connector.google-docs.discriminated_connector_config'
                        google-drive: '#/components/schemas/connector.google-drive.discriminated_connector_config'
                        google-mail: '#/components/schemas/connector.google-mail.discriminated_connector_config'
                        google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connector_config'
                        hubspot: '#/components/schemas/connector.hubspot.discriminated_connector_config'
                        instagram: '#/components/schemas/connector.instagram.discriminated_connector_config'
                        intercom: '#/components/schemas/connector.intercom.discriminated_connector_config'
                        jira: '#/components/schemas/connector.jira.discriminated_connector_config'
                        lever: '#/components/schemas/connector.lever.discriminated_connector_config'
                        linear: '#/components/schemas/connector.linear.discriminated_connector_config'
                        linkedin: '#/components/schemas/connector.linkedin.discriminated_connector_config'
                        notion: '#/components/schemas/connector.notion.discriminated_connector_config'
                        outreach: '#/components/schemas/connector.outreach.discriminated_connector_config'
                        pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connector_config'
                        quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connector_config'
                        reddit: '#/components/schemas/connector.reddit.discriminated_connector_config'
                        salesloft: '#/components/schemas/connector.salesloft.discriminated_connector_config'
                        sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connector_config'
                        slack: '#/components/schemas/connector.slack.discriminated_connector_config'
                        twitter: '#/components/schemas/connector.twitter.discriminated_connector_config'
                        xero: '#/components/schemas/connector.xero.discriminated_connector_config'
                        zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connector_config'
                        airtable: '#/components/schemas/connector.airtable.discriminated_connector_config'
                        apollo: '#/components/schemas/connector.apollo.discriminated_connector_config'
                        brex: '#/components/schemas/connector.brex.discriminated_connector_config'
                        coda: '#/components/schemas/connector.coda.discriminated_connector_config'
                        finch: '#/components/schemas/connector.finch.discriminated_connector_config'
                        firebase: '#/components/schemas/connector.firebase.discriminated_connector_config'
                        foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connector_config'
                        greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connector_config'
                        heron: '#/components/schemas/connector.heron.discriminated_connector_config'
                        lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connector_config'
                        mercury: '#/components/schemas/connector.mercury.discriminated_connector_config'
                        merge: '#/components/schemas/connector.merge.discriminated_connector_config'
                        moota: '#/components/schemas/connector.moota.discriminated_connector_config'
                        onebrick: '#/components/schemas/connector.onebrick.discriminated_connector_config'
                        openledger: '#/components/schemas/connector.openledger.discriminated_connector_config'
                        plaid: '#/components/schemas/connector.plaid.discriminated_connector_config'
                        postgres: '#/components/schemas/connector.postgres.discriminated_connector_config'
                        ramp: '#/components/schemas/connector.ramp.discriminated_connector_config'
                        saltedge: '#/components/schemas/connector.saltedge.discriminated_connector_config'
                        splitwise: '#/components/schemas/connector.splitwise.discriminated_connector_config'
                        stripe: '#/components/schemas/connector.stripe.discriminated_connector_config'
                        teller: '#/components/schemas/connector.teller.discriminated_connector_config'
                        toggl: '#/components/schemas/connector.toggl.discriminated_connector_config'
                        twenty: '#/components/schemas/connector.twenty.discriminated_connector_config'
                        venmo: '#/components/schemas/connector.venmo.discriminated_connector_config'
                        wise: '#/components/schemas/connector.wise.discriminated_connector_config'
                        yodlee: '#/components/schemas/connector.yodlee.discriminated_connector_config'
                    description: Connector specific data
                  - type: object
                    properties:
                      connector:
                        $ref: '#/components/schemas/core.connector'
                      integrations:
                        type: object
                        additionalProperties:
                          $ref: '#/components/schemas/core.integration_select'
                      connection_count:
                        type: number
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
  /connector-config:
    get:
      operationId: listConnectorConfigs
      summary: List Configured Connectors
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: query
          name: limit
          description: Limit the number of items returned
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 50
            description: Limit the number of items returned
        - in: query
          name: offset
          description: Offset the items returned
          schema:
            type: integer
            minimum: 0
            default: 0
            description: Offset the items returned
        - in: query
          name: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - connector
                - connector.schemas
                - connection_count
              description: 'Fields to expand: connector (includes connector details), enabled_integrations (includes enabled integrations details)'
        - in: query
          name: connector_names
          schema:
            type: array
            items:
              $ref: '#/components/schemas/core.connector.name'
        - in: query
          name: search_query
          schema:
            type:
              - string
              - 'null'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            org_id:
                              type: string
                            display_name:
                              type:
                                - string
                                - 'null'
                            disabled:
                              type:
                                - boolean
                                - 'null'
                            metadata:
                              type:
                                - object
                                - 'null'
                              additionalProperties: {}
                              description: |2

                                  JSON object can can be used to associate arbitrary metadata to
                                  avoid needing a separate 1-1 table just for simple key values in your application.
                                  During updates this object will be shallowly merged
                          required:
                            - id
                            - created_at
                            - updated_at
                            - org_id
                            - display_name
                            - disabled
                        - oneOf:
                            - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.aircall.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.confluence.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.discord.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.facebook.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.github.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.gong.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.google-calendar.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.google-docs.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.google-drive.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.google-mail.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.google-sheet.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.hubspot.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.instagram.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.intercom.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.jira.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.lever.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.linear.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.linkedin.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.notion.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.outreach.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.pipedrive.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.quickbooks.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.reddit.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.salesloft.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.sharepoint.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.slack.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.twitter.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.xero.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.airtable.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.apollo.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.brex.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.coda.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.finch.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.firebase.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.foreceipt.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.greenhouse.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.heron.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.mercury.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.merge.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.moota.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.onebrick.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.openledger.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.plaid.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.postgres.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.ramp.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.saltedge.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.splitwise.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.stripe.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.teller.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.toggl.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.twenty.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.venmo.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.wise.discriminated_connector_config'
                            - $ref: '#/components/schemas/connector.yodlee.discriminated_connector_config'
                          discriminator:
                            propertyName: connector_name
                            mapping:
                              acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connector_config'
                              aircall: '#/components/schemas/connector.aircall.discriminated_connector_config'
                              confluence: '#/components/schemas/connector.confluence.discriminated_connector_config'
                              discord: '#/components/schemas/connector.discord.discriminated_connector_config'
                              facebook: '#/components/schemas/connector.facebook.discriminated_connector_config'
                              github: '#/components/schemas/connector.github.discriminated_connector_config'
                              gong: '#/components/schemas/connector.gong.discriminated_connector_config'
                              google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connector_config'
                              google-docs: '#/components/schemas/connector.google-docs.discriminated_connector_config'
                              google-drive: '#/components/schemas/connector.google-drive.discriminated_connector_config'
                              google-mail: '#/components/schemas/connector.google-mail.discriminated_connector_config'
                              google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connector_config'
                              hubspot: '#/components/schemas/connector.hubspot.discriminated_connector_config'
                              instagram: '#/components/schemas/connector.instagram.discriminated_connector_config'
                              intercom: '#/components/schemas/connector.intercom.discriminated_connector_config'
                              jira: '#/components/schemas/connector.jira.discriminated_connector_config'
                              lever: '#/components/schemas/connector.lever.discriminated_connector_config'
                              linear: '#/components/schemas/connector.linear.discriminated_connector_config'
                              linkedin: '#/components/schemas/connector.linkedin.discriminated_connector_config'
                              notion: '#/components/schemas/connector.notion.discriminated_connector_config'
                              outreach: '#/components/schemas/connector.outreach.discriminated_connector_config'
                              pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connector_config'
                              quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connector_config'
                              reddit: '#/components/schemas/connector.reddit.discriminated_connector_config'
                              salesloft: '#/components/schemas/connector.salesloft.discriminated_connector_config'
                              sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connector_config'
                              slack: '#/components/schemas/connector.slack.discriminated_connector_config'
                              twitter: '#/components/schemas/connector.twitter.discriminated_connector_config'
                              xero: '#/components/schemas/connector.xero.discriminated_connector_config'
                              zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connector_config'
                              airtable: '#/components/schemas/connector.airtable.discriminated_connector_config'
                              apollo: '#/components/schemas/connector.apollo.discriminated_connector_config'
                              brex: '#/components/schemas/connector.brex.discriminated_connector_config'
                              coda: '#/components/schemas/connector.coda.discriminated_connector_config'
                              finch: '#/components/schemas/connector.finch.discriminated_connector_config'
                              firebase: '#/components/schemas/connector.firebase.discriminated_connector_config'
                              foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connector_config'
                              greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connector_config'
                              heron: '#/components/schemas/connector.heron.discriminated_connector_config'
                              lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connector_config'
                              mercury: '#/components/schemas/connector.mercury.discriminated_connector_config'
                              merge: '#/components/schemas/connector.merge.discriminated_connector_config'
                              moota: '#/components/schemas/connector.moota.discriminated_connector_config'
                              onebrick: '#/components/schemas/connector.onebrick.discriminated_connector_config'
                              openledger: '#/components/schemas/connector.openledger.discriminated_connector_config'
                              plaid: '#/components/schemas/connector.plaid.discriminated_connector_config'
                              postgres: '#/components/schemas/connector.postgres.discriminated_connector_config'
                              ramp: '#/components/schemas/connector.ramp.discriminated_connector_config'
                              saltedge: '#/components/schemas/connector.saltedge.discriminated_connector_config'
                              splitwise: '#/components/schemas/connector.splitwise.discriminated_connector_config'
                              stripe: '#/components/schemas/connector.stripe.discriminated_connector_config'
                              teller: '#/components/schemas/connector.teller.discriminated_connector_config'
                              toggl: '#/components/schemas/connector.toggl.discriminated_connector_config'
                              twenty: '#/components/schemas/connector.twenty.discriminated_connector_config'
                              venmo: '#/components/schemas/connector.venmo.discriminated_connector_config'
                              wise: '#/components/schemas/connector.wise.discriminated_connector_config'
                              yodlee: '#/components/schemas/connector.yodlee.discriminated_connector_config'
                          description: Connector specific data
                        - type: object
                          properties:
                            connector:
                              $ref: '#/components/schemas/core.connector'
                            integrations:
                              type: object
                              additionalProperties:
                                $ref: '#/components/schemas/core.integration_select'
                            connection_count:
                              type: number
                  total:
                    type: integer
                    minimum: 0
                    description: Total number of items in the database for the organization
                  limit:
                    type: integer
                    minimum: 0
                    description: Limit the number of items returned
                  offset:
                    type: integer
                    minimum: 0
                    description: Offset the items returned
                  has_next_page:
                    type: boolean
                    description: Convenience flag = offset + limit >= total
                required:
                  - items
                  - total
                  - limit
                  - offset
                description: The list of connector configurations
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              // Automatically fetches more pages as needed.
              for await (const listConnectionConfigsResponse of client.listConnectionConfigs()) {
                console.log(listConnectionConfigsResponse);
              }
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            page = client.list_connection_configs()
            page = page.items[0]
            print(page)
  /connection/{id}:
    get:
      operationId: getConnection
      summary: Get Connection
      description: Get details of a specific connection, including credentials
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: id
          description: The id of the connection, starts with `conn_`
          schema:
            type: string
            pattern: ^conn_
            description: The id of the connection, starts with `conn_`
          required: true
        - in: query
          name: include_secrets
          schema:
            type: boolean
        - in: query
          name: refresh_policy
          description: 'Controls credential refresh: none (never), force (always), or auto (when expired, default)'
          schema:
            type: string
            enum:
              - none
              - force
              - auto
            description: 'Controls credential refresh: none (never), force (always), or auto (when expired, default)'
            default: auto
        - in: query
          name: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - connector
              description: 'Fields to expand: connector (includes connector details)'
            default: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                      customer_id:
                        type:
                          - string
                          - 'null'
                      connector_config_id:
                        type:
                          - string
                          - 'null'
                      integration_id:
                        type:
                          - string
                          - 'null'
                      status_message:
                        type:
                          - string
                          - 'null'
                      created_at:
                        type: string
                      updated_at:
                        type: string
                      display_name:
                        type:
                          - string
                          - 'null'
                      disabled:
                        type:
                          - boolean
                          - 'null'
                      status:
                        type:
                          - string
                          - 'null'
                        enum:
                          - healthy
                          - disconnected
                          - error
                          - manual
                          - unknown
                          - null
                      metadata:
                        type:
                          - object
                          - 'null'
                        additionalProperties: {}
                        description: |2

                            JSON object can can be used to associate arbitrary metadata to
                            avoid needing a separate 1-1 table just for simple key values in your application.
                            During updates this object will be shallowly merged
                    required:
                      - id
                      - customer_id
                      - connector_config_id
                      - integration_id
                      - created_at
                      - updated_at
                      - display_name
                      - disabled
                  - oneOf:
                      - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.discord.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.github.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.gong.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.jira.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.lever.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.linear.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.notion.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.slack.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.xero.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.brex.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.coda.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.finch.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.heron.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.merge.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.moota.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.teller.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.wise.discriminated_connection_settings'
                      - $ref: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                    discriminator:
                      propertyName: connector_name
                      mapping:
                        acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                        aircall: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                        confluence: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                        discord: '#/components/schemas/connector.discord.discriminated_connection_settings'
                        facebook: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                        github: '#/components/schemas/connector.github.discriminated_connection_settings'
                        gong: '#/components/schemas/connector.gong.discriminated_connection_settings'
                        google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                        google-docs: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                        google-drive: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                        google-mail: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                        google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                        hubspot: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                        instagram: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                        intercom: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                        jira: '#/components/schemas/connector.jira.discriminated_connection_settings'
                        lever: '#/components/schemas/connector.lever.discriminated_connection_settings'
                        linear: '#/components/schemas/connector.linear.discriminated_connection_settings'
                        linkedin: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                        notion: '#/components/schemas/connector.notion.discriminated_connection_settings'
                        outreach: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                        pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                        quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                        reddit: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                        salesloft: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                        sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                        slack: '#/components/schemas/connector.slack.discriminated_connection_settings'
                        twitter: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                        xero: '#/components/schemas/connector.xero.discriminated_connection_settings'
                        zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                        airtable: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                        apollo: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                        brex: '#/components/schemas/connector.brex.discriminated_connection_settings'
                        coda: '#/components/schemas/connector.coda.discriminated_connection_settings'
                        finch: '#/components/schemas/connector.finch.discriminated_connection_settings'
                        firebase: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                        foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                        greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                        heron: '#/components/schemas/connector.heron.discriminated_connection_settings'
                        lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                        mercury: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                        merge: '#/components/schemas/connector.merge.discriminated_connection_settings'
                        moota: '#/components/schemas/connector.moota.discriminated_connection_settings'
                        onebrick: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                        openledger: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                        plaid: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                        postgres: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                        ramp: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                        saltedge: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                        splitwise: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                        stripe: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                        teller: '#/components/schemas/connector.teller.discriminated_connection_settings'
                        toggl: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                        twenty: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                        venmo: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                        wise: '#/components/schemas/connector.wise.discriminated_connection_settings'
                        yodlee: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                    description: Connector specific data
                  - type: object
                    properties:
                      connector:
                        $ref: '#/components/schemas/core.connector'
                      integration:
                        $ref: '#/components/schemas/core.integration_select'
                description: The connection details
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.getConnection('conn_');

              console.log(response);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.get_connection(
                id="conn_",
            )
            print(response)
    delete:
      operationId: deleteConnection
      summary: Delete Connection
      description: Delete a connection
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: id
          description: The id of the connection, starts with `conn_`
          schema:
            type: string
            pattern: ^conn_
            description: The id of the connection, starts with `conn_`
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    pattern: ^conn_
                    description: The id of the connection, starts with `conn_`
                required:
                  - id
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.deleteConnection('conn_');

              console.log(response.id);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.delete_connection(
                "conn_",
            )
            print(response.id)
  /connection:
    get:
      operationId: listConnections
      summary: List Connections
      description: List all connections with optional filtering. Does not retrieve secrets or perform any connection healthcheck. For that use `getConnection` or `checkConnectionHealth`.
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: query
          name: limit
          description: Limit the number of items returned
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 50
            description: Limit the number of items returned
        - in: query
          name: offset
          description: Offset the items returned
          schema:
            type: integer
            minimum: 0
            default: 0
            description: Offset the items returned
        - in: query
          name: connector_names
          schema:
            type: array
            items:
              $ref: '#/components/schemas/core.connector.name'
        - in: query
          name: customer_id
          description: The id of the customer in your application. Ensure it is unique for that customer.
          schema:
            type: string
            description: The id of the customer in your application. Ensure it is unique for that customer.
        - in: query
          name: connector_config_id
          description: The id of the connector config, starts with `ccfg_`
          schema:
            type: string
            pattern: ^ccfg_
            description: The id of the connector config, starts with `ccfg_`
        - in: query
          name: include_secrets
          schema:
            type: boolean
        - in: query
          name: expand
          schema:
            type: array
            items:
              type: string
              enum:
                - connector
              description: 'Fields to expand: connector (includes connector details)'
            default: []
            description: Expand the response with additional optionals
        - in: query
          name: search_query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: string
                            customer_id:
                              type:
                                - string
                                - 'null'
                            connector_config_id:
                              type:
                                - string
                                - 'null'
                            integration_id:
                              type:
                                - string
                                - 'null'
                            status_message:
                              type:
                                - string
                                - 'null'
                            created_at:
                              type: string
                            updated_at:
                              type: string
                            display_name:
                              type:
                                - string
                                - 'null'
                            disabled:
                              type:
                                - boolean
                                - 'null'
                            status:
                              type:
                                - string
                                - 'null'
                              enum:
                                - healthy
                                - disconnected
                                - error
                                - manual
                                - unknown
                                - null
                            metadata:
                              type:
                                - object
                                - 'null'
                              additionalProperties: {}
                              description: |2

                                  JSON object can can be used to associate arbitrary metadata to
                                  avoid needing a separate 1-1 table just for simple key values in your application.
                                  During updates this object will be shallowly merged
                          required:
                            - id
                            - customer_id
                            - connector_config_id
                            - integration_id
                            - created_at
                            - updated_at
                            - display_name
                            - disabled
                        - oneOf:
                            - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.discord.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.github.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.gong.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.jira.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.lever.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.linear.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.notion.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.slack.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.xero.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.brex.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.coda.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.finch.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.heron.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.merge.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.moota.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.teller.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.wise.discriminated_connection_settings'
                            - $ref: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                          discriminator:
                            propertyName: connector_name
                            mapping:
                              acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                              aircall: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                              confluence: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                              discord: '#/components/schemas/connector.discord.discriminated_connection_settings'
                              facebook: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                              github: '#/components/schemas/connector.github.discriminated_connection_settings'
                              gong: '#/components/schemas/connector.gong.discriminated_connection_settings'
                              google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                              google-docs: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                              google-drive: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                              google-mail: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                              google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                              hubspot: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                              instagram: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                              intercom: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                              jira: '#/components/schemas/connector.jira.discriminated_connection_settings'
                              lever: '#/components/schemas/connector.lever.discriminated_connection_settings'
                              linear: '#/components/schemas/connector.linear.discriminated_connection_settings'
                              linkedin: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                              notion: '#/components/schemas/connector.notion.discriminated_connection_settings'
                              outreach: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                              pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                              quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                              reddit: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                              salesloft: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                              sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                              slack: '#/components/schemas/connector.slack.discriminated_connection_settings'
                              twitter: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                              xero: '#/components/schemas/connector.xero.discriminated_connection_settings'
                              zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                              airtable: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                              apollo: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                              brex: '#/components/schemas/connector.brex.discriminated_connection_settings'
                              coda: '#/components/schemas/connector.coda.discriminated_connection_settings'
                              finch: '#/components/schemas/connector.finch.discriminated_connection_settings'
                              firebase: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                              foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                              greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                              heron: '#/components/schemas/connector.heron.discriminated_connection_settings'
                              lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                              mercury: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                              merge: '#/components/schemas/connector.merge.discriminated_connection_settings'
                              moota: '#/components/schemas/connector.moota.discriminated_connection_settings'
                              onebrick: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                              openledger: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                              plaid: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                              postgres: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                              ramp: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                              saltedge: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                              splitwise: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                              stripe: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                              teller: '#/components/schemas/connector.teller.discriminated_connection_settings'
                              toggl: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                              twenty: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                              venmo: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                              wise: '#/components/schemas/connector.wise.discriminated_connection_settings'
                              yodlee: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                          description: Connector specific data
                        - type: object
                          properties:
                            connector:
                              $ref: '#/components/schemas/core.connector'
                            integration:
                              $ref: '#/components/schemas/core.integration_select'
                      description: The connection details
                  total:
                    type: integer
                    minimum: 0
                    description: Total number of items in the database for the organization
                  limit:
                    type: integer
                    minimum: 0
                    description: Limit the number of items returned
                  offset:
                    type: integer
                    minimum: 0
                    description: Offset the items returned
                  has_next_page:
                    type: boolean
                    description: Convenience flag = offset + limit >= total
                required:
                  - items
                  - total
                  - limit
                  - offset
                description: The list of connections
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NOT_FOUND'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              // Automatically fetches more pages as needed.
              for await (const listConnectionsResponse of client.listConnections()) {
                console.log(listConnectionsResponse);
              }
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            page = client.list_connections()
            page = page.items[0]
            print(page)
    post:
      operationId: createConnection
      summary: Create Connection
      description: Import an existing connection after validation
      security:
        - ApiKey: []
        - CustomerToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connector_config_id:
                  type: string
                  pattern: ^ccfg_
                  description: The id of the connector config, starts with `ccfg_`
                metadata:
                  type: object
                  additionalProperties: {}
                customer_id:
                  type: string
                  description: The id of the customer in your application. Ensure it is unique for that customer.
                data:
                  oneOf:
                    - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.discord.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.github.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.gong.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.jira.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.lever.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.linear.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.notion.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.slack.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.xero.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.brex.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.coda.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.finch.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.heron.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.merge.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.moota.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.teller.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.wise.discriminated_connection_settings'
                    - $ref: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                  discriminator:
                    propertyName: connector_name
                    mapping:
                      acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
                      aircall: '#/components/schemas/connector.aircall.discriminated_connection_settings'
                      confluence: '#/components/schemas/connector.confluence.discriminated_connection_settings'
                      discord: '#/components/schemas/connector.discord.discriminated_connection_settings'
                      facebook: '#/components/schemas/connector.facebook.discriminated_connection_settings'
                      github: '#/components/schemas/connector.github.discriminated_connection_settings'
                      gong: '#/components/schemas/connector.gong.discriminated_connection_settings'
                      google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
                      google-docs: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
                      google-drive: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
                      google-mail: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
                      google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
                      hubspot: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
                      instagram: '#/components/schemas/connector.instagram.discriminated_connection_settings'
                      intercom: '#/components/schemas/connector.intercom.discriminated_connection_settings'
                      jira: '#/components/schemas/connector.jira.discriminated_connection_settings'
                      lever: '#/components/schemas/connector.lever.discriminated_connection_settings'
                      linear: '#/components/schemas/connector.linear.discriminated_connection_settings'
                      linkedin: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
                      notion: '#/components/schemas/connector.notion.discriminated_connection_settings'
                      outreach: '#/components/schemas/connector.outreach.discriminated_connection_settings'
                      pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
                      quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
                      reddit: '#/components/schemas/connector.reddit.discriminated_connection_settings'
                      salesloft: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
                      sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
                      slack: '#/components/schemas/connector.slack.discriminated_connection_settings'
                      twitter: '#/components/schemas/connector.twitter.discriminated_connection_settings'
                      xero: '#/components/schemas/connector.xero.discriminated_connection_settings'
                      zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
                      airtable: '#/components/schemas/connector.airtable.discriminated_connection_settings'
                      apollo: '#/components/schemas/connector.apollo.discriminated_connection_settings'
                      brex: '#/components/schemas/connector.brex.discriminated_connection_settings'
                      coda: '#/components/schemas/connector.coda.discriminated_connection_settings'
                      finch: '#/components/schemas/connector.finch.discriminated_connection_settings'
                      firebase: '#/components/schemas/connector.firebase.discriminated_connection_settings'
                      foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
                      greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
                      heron: '#/components/schemas/connector.heron.discriminated_connection_settings'
                      lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
                      mercury: '#/components/schemas/connector.mercury.discriminated_connection_settings'
                      merge: '#/components/schemas/connector.merge.discriminated_connection_settings'
                      moota: '#/components/schemas/connector.moota.discriminated_connection_settings'
                      onebrick: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
                      openledger: '#/components/schemas/connector.openledger.discriminated_connection_settings'
                      plaid: '#/components/schemas/connector.plaid.discriminated_connection_settings'
                      postgres: '#/components/schemas/connector.postgres.discriminated_connection_settings'
                      ramp: '#/components/schemas/connector.ramp.discriminated_connection_settings'
                      saltedge: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
                      splitwise: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
                      stripe: '#/components/schemas/connector.stripe.discriminated_connection_settings'
                      teller: '#/components/schemas/connector.teller.discriminated_connection_settings'
                      toggl: '#/components/schemas/connector.toggl.discriminated_connection_settings'
                      twenty: '#/components/schemas/connector.twenty.discriminated_connection_settings'
                      venmo: '#/components/schemas/connector.venmo.discriminated_connection_settings'
                      wise: '#/components/schemas/connector.wise.discriminated_connection_settings'
                      yodlee: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
                  description: Connector specific data
                check_connection:
                  type: boolean
                  default: false
                  description: Perform a synchronous connection check before creating it.
              required:
                - connector_config_id
                - customer_id
                - data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/core.connection_select'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.createConnection({
                connector_config_id: 'ccfg_',
                customer_id: 'customer_id',
                data: { connector_name: 'acme-oauth2' },
              });

              console.log(response);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.create_connection(
                connector_config_id="ccfg_",
                customer_id="customer_id",
                data={
                    "connector_name": "acme-oauth2"
                },
            )
            print(response)
  /customer/{customer_id}/magic-link:
    post:
      operationId: createMagicLink
      summary: Create Magic Link
      description: Create a @Connect magic link that is ready to be shared with customers who want to use @Connect
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: customer_id
          description: The unique ID of the customer to create the magic link for
          schema:
            type: string
            minLength: 1
            description: The unique ID of the customer to create the magic link for
          required: true
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                validity_in_seconds:
                  type: number
                  default: 2592000
                  description: How long the magic link will be valid for (in seconds) before it expires
                connect_options:
                  type: object
                  properties:
                    return_url:
                      type: string
                      title: Return URL
                      description: Optional URL to return customers after adding a connection or if they press the Return To Organization button
                    connector_names:
                      type: array
                      items:
                        $ref: '#/components/schemas/core.connector.name'
                      title: Connector Names
                      description: The names of the connectors to show in the connect page. If not provided, all connectors will be shown
                    view:
                      type: string
                      enum:
                        - add
                        - manage
                      title: Default View to load
                      description: The default view to show when the magic link is opened. If omitted, by default it will smartly load the right view based on whether the user has connections or not
                    debug:
                      type: boolean
                      title: Debug
                      description: Whether to enable debug mode
                    is_embedded:
                      type: boolean
                      title: Is Embedded
                      description: Whether to enable embedded mode. Embedded mode hides the side bar with extra context for the end user (customer) on the organization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  magic_link_url:
                    type: string
                    description: The Connect magic link url to share with the user.
                required:
                  - magic_link_url
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.createMagicLink('x');

              console.log(response.magic_link_url);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.create_magic_link(
                customer_id="x",
            )
            print(response.magic_link_url)
  /customer/{customer_id}/token:
    post:
      operationId: createToken
      summary: Create Customer Authentication Token
      description: Create a @Connect authentication token for a customer. This token can be used to embed @Connect in your application via the `@openint/connect` npm package.
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: customer_id
          description: The unique ID of the customer to create the token for
          schema:
            type: string
            minLength: 1
            description: The unique ID of the customer to create the token for
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validity_in_seconds:
                  type: number
                  default: 2592000
                connect_options:
                  type: object
                  properties:
                    return_url:
                      type: string
                      title: Return URL
                      description: Optional URL to return customers after adding a connection or if they press the Return To Organization button
                    connector_names:
                      type: array
                      items:
                        $ref: '#/components/schemas/core.connector.name'
                      title: Connector Names
                      description: The names of the connectors to show in the connect page. If not provided, all connectors will be shown
                    view:
                      type: string
                      enum:
                        - add
                        - manage
                      title: Default View to load
                      description: The default view to show when the magic link is opened. If omitted, by default it will smartly load the right view based on whether the user has connections or not
                    debug:
                      type: boolean
                      title: Debug
                      description: Whether to enable debug mode
                    is_embedded:
                      type: boolean
                      title: Is Embedded
                      description: Whether to enable embedded mode. Embedded mode hides the side bar with extra context for the end user (customer) on the organization
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The authentication token to use for API requests
                required:
                  - token
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.createToken('x');

              console.log(response.token);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.create_token(
                customer_id="x",
            )
            print(response.token)
  /connection/{id}/check:
    post:
      operationId: checkConnection
      summary: Check Connection Health
      description: Verify that a connection is healthy
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: id
          description: The id of the connection, starts with `conn_`
          schema:
            type: string
            pattern: ^conn_
            description: The id of the connection, starts with `conn_`
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type:
                      - string
                      - 'null'
                    enum:
                      - healthy
                      - disconnected
                      - error
                      - manual
                      - unknown
                      - null
                  status_message:
                    type:
                      - string
                      - 'null'
                required:
                  - id
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
      x-codeSamples:
        - lang: JavaScript
          source: |-
            import Openint from '@openint/sdk';

            const client = new Openint({
              token: process.env['OPENINT_API_KEY_OR_CUSTOMER_TOKEN'], // This is the default and can be omitted
            });

            async function main() {
              const response = await client.checkConnection('conn_');

              console.log(response.id);
            }

            main();
        - lang: Python
          source: |-
            import os
            from openint import Openint

            client = Openint(
                token=os.environ.get("OPENINT_API_KEY_OR_CUSTOMER_TOKEN"),  # This is the default and can be omitted
            )
            response = client.check_connection(
                "conn_",
            )
            print(response.id)
  /webhook/{connector_name}:
    post:
      operationId: handleWebhook
      description: Handle a webhook event
      security:
        - ApiKey: []
        - CustomerToken: []
      parameters:
        - in: path
          name: connector_name
          schema:
            $ref: '#/components/schemas/core.connector.name'
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                      - error
                  info: {}
                required:
                  - status
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BAD_REQUEST'
        '401':
          description: Authorization not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UNAUTHORIZED'
        '403':
          description: Insufficient access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.FORBIDDEN'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.INTERNAL_SERVER_ERROR'
components:
  securitySchemes:
    ApiKey:
      type: http
      scheme: bearer
      description: 'Organization API key generated in the OpenInt Console and passed in the `authorization` header with format: `Bearer {apiKey}`'
    CustomerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Customer authentication token created using the create customer token API and passed in the `authorization` header with format: `Bearer {token}`'
  schemas:
    connector.acme-oauth2.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: acme-oauth2
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: acme-oauth2
    connector.acme-oauth2.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: acme-oauth2
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: acme-oauth2
    connector.aircall.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: aircall
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: aircall
    connector.aircall.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: aircall
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: aircall
    connector.airtable.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: airtable
        settings:
          type: object
          properties:
            apiKey:
              type: string
            airtableBase:
              type: string
          required:
            - apiKey
            - airtableBase
      required:
        - connector_name
      title: airtable
    connector.airtable.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: airtable
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: airtable
    connector.apollo.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: apollo
        settings:
          type: object
          properties:
            api_key:
              type: string
          required:
            - api_key
      required:
        - connector_name
      title: apollo
    connector.apollo.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: apollo
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: apollo
    connector.brex.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: brex
        settings:
          type: object
          properties:
            accessToken:
              type: string
          required:
            - accessToken
      required:
        - connector_name
      title: brex
    connector.brex.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: brex
        config:
          type: object
          properties:
            oauth:
              anyOf:
                - type: 'null'
                  description: No oauth
                - type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                  required:
                    - clientId
                    - clientSecret
                  description: Configure oauth
              description: Oauth support
            apikeyAuth:
              type: boolean
              description: API key auth support
      required:
        - connector_name
        - config
      title: brex
    connector.coda.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: coda
        settings:
          type: object
          properties:
            apiKey:
              type: string
          required:
            - apiKey
      required:
        - connector_name
      title: coda
    connector.coda.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: coda
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: coda
    connector.confluence.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: confluence
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: confluence
    connector.confluence.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: confluence
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: confluence
    connector.discord.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: discord
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: discord
    connector.discord.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: discord
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: discord
    connector.facebook.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: facebook
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: facebook
    connector.facebook.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: facebook
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: facebook
    connector.finch.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: finch
        settings:
          type: object
          properties:
            access_token:
              type: string
          required:
            - access_token
      required:
        - connector_name
      title: finch
    connector.finch.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: finch
        config:
          type: object
          properties:
            client_id:
              type: string
            client_secret:
              type: string
            api_version:
              type: string
              description: Finch API version
            products:
              type: array
              items:
                type: string
                enum:
                  - company
                  - directory
                  - individual
                  - ssn
                  - employment
                  - payment
                  - pay_statement
                  - benefits
              description: Finch products to access, @see https://developer.tryfinch.com/api-reference/development-guides/Permissions
          required:
            - client_id
            - client_secret
            - products
      required:
        - connector_name
        - config
      title: finch
    connector.firebase.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: firebase
        settings:
          oneOf:
            - type: object
              properties:
                role:
                  type: string
                  const: admin
                serviceAccount:
                  type: object
                  properties:
                    project_id:
                      type: string
                  required:
                    - project_id
                  additionalProperties: {}
              required:
                - role
                - serviceAccount
            - type: object
              properties:
                role:
                  type: string
                  const: user
                firebaseConfig:
                  type: object
                  properties:
                    projectId:
                      type: string
                    apiKey:
                      type: string
                    appId:
                      type: string
                    authDomain:
                      type: string
                    databaseURL:
                      type: string
                    storageBucket:
                      type: string
                    measurementId:
                      type: string
                    messagingSenderId:
                      type: string
                  required:
                    - projectId
                    - apiKey
                    - appId
                    - authDomain
                    - databaseURL
                authData:
                  oneOf:
                    - type: object
                      properties:
                        method:
                          type: string
                          const: userJson
                        userJson:
                          type: object
                          properties:
                            uid:
                              type: string
                            appName:
                              type: string
                            stsTokenManager:
                              type: object
                              additionalProperties: {}
                          required:
                            - uid
                            - appName
                            - stsTokenManager
                          additionalProperties: {}
                      required:
                        - method
                        - userJson
                    - type: object
                      properties:
                        method:
                          type: string
                          const: customToken
                        customToken:
                          type: string
                      required:
                        - method
                        - customToken
                    - type: object
                      properties:
                        method:
                          type: string
                          const: emailPassword
                        email:
                          type: string
                        password:
                          type: string
                      required:
                        - method
                        - email
                        - password
              required:
                - role
                - firebaseConfig
                - authData
      required:
        - connector_name
      title: firebase
    connector.firebase.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: firebase
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: firebase
    connector.foreceipt.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: foreceipt
        settings:
          type: object
          properties:
            credentials: {}
            _id: {}
            envName:
              type: string
              enum:
                - staging
                - production
          required:
            - envName
      required:
        - connector_name
      title: foreceipt
    connector.foreceipt.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: foreceipt
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: foreceipt
    connector.github.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: github
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: github
    connector.github.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: github
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: github
    connector.gong.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: gong
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
            api_base_url_for_customer:
              type: string
              pattern: https?:\/\/.*
              description: The base URL of your Gong account (e.g., example)
          required:
            - oauth
            - api_base_url_for_customer
      required:
        - connector_name
      title: gong
    connector.gong.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: gong
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: gong
    connector.google-calendar.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: google-calendar
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: google-calendar
    connector.google-calendar.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: google-calendar
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: google-calendar
    connector.google-docs.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: google-docs
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: google-docs
    connector.google-docs.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: google-docs
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: google-docs
    connector.google-drive.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: google-drive
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: google-drive
    connector.google-drive.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: google-drive
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: google-drive
    connector.google-mail.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: google-mail
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: google-mail
    connector.google-mail.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: google-mail
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: google-mail
    connector.google-sheet.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: google-sheet
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: google-sheet
    connector.google-sheet.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: google-sheet
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: google-sheet
    connector.greenhouse.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: greenhouse
        settings:
          type: object
          properties:
            apiKey:
              type: string
          required:
            - apiKey
      required:
        - connector_name
      title: greenhouse
    connector.greenhouse.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: greenhouse
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: greenhouse
    connector.heron.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: heron
        settings:
          type: object
          additionalProperties: false
      required:
        - connector_name
      title: heron
    connector.heron.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: heron
        config:
          type: object
          properties:
            apiKey:
              type: string
          required:
            - apiKey
      required:
        - connector_name
        - config
      title: heron
    connector.hubspot.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: hubspot
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: hubspot
    connector.hubspot.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: hubspot
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: hubspot
    connector.instagram.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: instagram
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: instagram
    connector.instagram.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: instagram
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: instagram
    connector.intercom.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: intercom
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: intercom
    connector.intercom.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: intercom
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: intercom
    connector.jira.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: jira
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: jira
    connector.jira.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: jira
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: jira
    connector.lever.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: lever
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: lever
    connector.lever.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: lever
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: lever
    connector.linear.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: linear
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: linear
    connector.linear.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: linear
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: linear
    connector.linkedin.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: linkedin
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: linkedin
    connector.linkedin.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: linkedin
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: linkedin
    connector.lunchmoney.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: lunchmoney
        settings:
          type: object
          additionalProperties: false
      required:
        - connector_name
      title: lunchmoney
    connector.lunchmoney.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: lunchmoney
        config:
          type: object
          properties:
            accessToken:
              type: string
          required:
            - accessToken
      required:
        - connector_name
        - config
      title: lunchmoney
    connector.mercury.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: mercury
        settings:
          type: object
          additionalProperties: false
      required:
        - connector_name
      title: mercury
    connector.mercury.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: mercury
        config:
          type: object
          properties:
            oauth:
              anyOf:
                - type: 'null'
                  description: No oauth
                - type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                  required:
                    - clientId
                    - clientSecret
                  description: Configure oauth
              description: Oauth support
            apikeyAuth:
              type: boolean
              description: API key auth support
      required:
        - connector_name
        - config
      title: mercury
    connector.merge.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: merge
        settings:
          type: object
          properties:
            accountToken:
              type: string
            accountDetails: {}
          required:
            - accountToken
      required:
        - connector_name
      title: merge
    connector.merge.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: merge
        config:
          type: object
          properties:
            apiKey:
              type: string
          required:
            - apiKey
      required:
        - connector_name
        - config
      title: merge
    connector.moota.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: moota
        settings:
          type: object
          additionalProperties: false
      required:
        - connector_name
      title: moota
    connector.moota.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: moota
        config:
          type: object
          properties:
            token:
              type: string
          required:
            - token
      required:
        - connector_name
        - config
      title: moota
    connector.notion.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: notion
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: notion
    connector.notion.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: notion
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: notion
    connector.onebrick.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: onebrick
        settings:
          type: object
          properties:
            accessToken:
              type: string
          required:
            - accessToken
      required:
        - connector_name
      title: onebrick
    connector.onebrick.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: onebrick
        config:
          type: object
          properties:
            envName:
              type: string
              enum:
                - sandbox
                - production
            clientId:
              type: string
            clientSecret:
              type: string
            publicToken:
              type: string
            accessToken:
              type:
                - string
                - 'null'
            redirectUrl:
              type:
                - string
                - 'null'
          required:
            - envName
            - clientId
            - clientSecret
            - publicToken
      required:
        - connector_name
        - config
      title: onebrick
    connector.openledger.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: openledger
        settings:
          type: object
          properties:
            entity_id:
              type: string
              description: Your entity's identifier, aka customer ID
          required:
            - entity_id
      required:
        - connector_name
      title: openledger
    connector.openledger.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: openledger
        config:
          type: object
          properties:
            developer_id:
              type: string
              description: Your developer ID for authentication
            developer_secret:
              type: string
              description: Your developer secret
            environment:
              type: string
              enum:
                - development
                - production
              description: Switch to "production" for live data
            api_url:
              type: string
              format: uri
              description: API endpoint
          required:
            - developer_id
            - developer_secret
            - environment
            - api_url
      required:
        - connector_name
        - config
      title: openledger
    connector.outreach.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: outreach
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: outreach
    connector.outreach.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: outreach
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: outreach
    connector.pipedrive.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: pipedrive
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
            api_domain:
              type: string
              pattern: https?:\/\/.*
              description: The API URL of your Pipedrive account (e.g., example)
          required:
            - oauth
            - api_domain
      required:
        - connector_name
      title: pipedrive
    connector.pipedrive.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: pipedrive
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: pipedrive
    connector.plaid.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: plaid
        settings:
          type: object
          properties:
            itemId:
              type:
                - string
                - 'null'
            accessToken:
              type: string
            institution: {}
            item: {}
            status: {}
            webhookItemError:
              type: 'null'
          required:
            - accessToken
      required:
        - connector_name
      title: plaid
    connector.plaid.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: plaid
        config:
          type: object
          properties:
            envName:
              type: string
              enum:
                - sandbox
                - development
                - production
            credentials:
              anyOf:
                - type: 'null'
                  title: Use OpenInt platform credentials
                - type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                  required:
                    - clientId
                    - clientSecret
                  title: Use my own
              ui:field: CredentialsField
              ui:fieldReplacesAnyOrOneOf: true
            clientName:
              type: string
              maxLength: 30
              default: This Application
              description: |-
                The name of your application, as it should be displayed in Link.
                        Maximum length of 30 characters.
                        If a value longer than 30 characters is provided, Link will display "This Application" instead.
            products:
              type: array
              items:
                type: string
                enum:
                  - assets
                  - auth
                  - balance
                  - identity
                  - investments
                  - liabilities
                  - payment_initiation
                  - identity_verification
                  - transactions
                  - credit_details
                  - income
                  - income_verification
                  - deposit_switch
                  - standing_orders
                  - transfer
                  - employment
                  - recurring_transactions
              default:
                - transactions
              ui:widget: MultiSelectWidget
            countryCodes:
              type: array
              items:
                type: string
                enum:
                  - US
                  - GB
                  - ES
                  - NL
                  - FR
                  - IE
                  - CA
                  - DE
                  - IT
                  - PL
                  - DK
                  - 'NO'
                  - SE
                  - EE
                  - LT
                  - LV
              default:
                - US
                - CA
              ui:widget: MultiSelectWidget
            language:
              type: string
              enum:
                - en
                - fr
                - es
                - nl
                - de
              default: en
          required:
            - envName
            - clientName
            - products
            - countryCodes
            - language
      required:
        - connector_name
        - config
      title: plaid
    connector.postgres.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: postgres
        settings:
          type: object
          properties:
            databaseURL:
              type: string
      required:
        - connector_name
      title: postgres
    connector.postgres.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: postgres
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: postgres
    connector.quickbooks.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: quickbooks
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
            realmId:
              type: string
              pattern: \d{16}
              description: The realmId of your quickbooks company (e.g., 9341453474484455)
          required:
            - oauth
            - realmId
      required:
        - connector_name
      title: quickbooks
    connector.quickbooks.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: quickbooks
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
            envName:
              type: string
              enum:
                - sandbox
                - production
              default: sandbox
          required:
            - envName
      required:
        - connector_name
        - config
      title: quickbooks
    connector.ramp.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: ramp
        settings:
          type: object
          properties:
            accessToken:
              type:
                - string
                - 'null'
            startAfterTransactionId:
              type:
                - string
                - 'null'
      required:
        - connector_name
      title: ramp
    connector.ramp.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: ramp
        config:
          type: object
          properties:
            oauth:
              type: object
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
              required:
                - clientId
                - clientSecret
          required:
            - oauth
      required:
        - connector_name
        - config
      title: ramp
    connector.reddit.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: reddit
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: reddit
    connector.reddit.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: reddit
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: reddit
    connector.salesloft.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: salesloft
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: salesloft
    connector.salesloft.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: salesloft
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: salesloft
    connector.saltedge.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: saltedge
        settings: {}
      required:
        - connector_name
      title: saltedge
    connector.saltedge.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: saltedge
        config:
          type: object
          properties:
            appId:
              type: string
            secret:
              type: string
            url:
              type:
                - string
                - 'null'
          required:
            - appId
            - secret
      required:
        - connector_name
        - config
      title: saltedge
    connector.sharepoint.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: sharepoint
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: sharepoint
    connector.sharepoint.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: sharepoint
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: sharepoint
    connector.slack.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: slack
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: slack
    connector.slack.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: slack
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: slack
    connector.splitwise.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: splitwise
        settings:
          type: object
          properties:
            currentUser:
              type:
                - object
                - 'null'
              properties:
                country_code:
                  type: string
                custom_picture:
                  type: boolean
                date_format:
                  type: string
                default_currency:
                  type: string
                default_group_id:
                  type: number
                email:
                  type: string
                first_name:
                  type: string
                force_refresh_at:
                  type: string
                id:
                  type: number
                last_name:
                  type: string
                locale:
                  type: string
                notifications:
                  type: object
                  properties:
                    added_as_friend:
                      type: boolean
                    added_to_group:
                      type: boolean
                    announcements:
                      type: boolean
                    bills:
                      type: boolean
                    expense_added:
                      type: boolean
                    expense_updated:
                      type: boolean
                    monthly_summary:
                      type: boolean
                    payments:
                      type: boolean
                  required:
                    - added_as_friend
                    - added_to_group
                    - announcements
                    - bills
                    - expense_added
                    - expense_updated
                    - monthly_summary
                    - payments
                notifications_count:
                  type: number
                notifications_read:
                  type: string
                picture:
                  type: object
                  properties:
                    original:
                      type:
                        - string
                        - 'null'
                    xxlarge:
                      type:
                        - string
                        - 'null'
                    xlarge:
                      type:
                        - string
                        - 'null'
                    large:
                      type:
                        - string
                        - 'null'
                    medium:
                      type:
                        - string
                        - 'null'
                    small:
                      type:
                        - string
                        - 'null'
                registration_status:
                  type: string
              required:
                - country_code
                - custom_picture
                - date_format
                - default_currency
                - default_group_id
                - email
                - first_name
                - force_refresh_at
                - id
                - last_name
                - locale
                - notifications
                - notifications_count
                - notifications_read
                - picture
                - registration_status
            accessToken:
              type: string
          required:
            - accessToken
      required:
        - connector_name
      title: splitwise
    connector.splitwise.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: splitwise
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: splitwise
    connector.stripe.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: stripe
        settings:
          type: object
          properties:
            secretKey:
              type: string
          required:
            - secretKey
      required:
        - connector_name
      title: stripe
    connector.stripe.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: stripe
        config:
          type: object
          properties:
            oauth:
              anyOf:
                - type: 'null'
                  description: No oauth
                - type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
                  required:
                    - clientId
                    - clientSecret
                  description: Configure oauth
              description: Oauth support
            apikeyAuth:
              type: boolean
              description: API key auth support
      required:
        - connector_name
        - config
      title: stripe
    connector.teller.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: teller
        settings:
          type: object
          properties:
            token:
              type: string
          required:
            - token
      required:
        - connector_name
      title: teller
    connector.teller.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: teller
        config:
          type: object
          properties:
            applicationId:
              type: string
            token:
              type:
                - string
                - 'null'
          required:
            - applicationId
      required:
        - connector_name
        - config
      title: teller
    connector.toggl.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: toggl
        settings:
          type: object
          properties:
            apiToken:
              type: string
            email:
              type:
                - string
                - 'null'
            password:
              type:
                - string
                - 'null'
          required:
            - apiToken
      required:
        - connector_name
      title: toggl
    connector.toggl.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: toggl
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: toggl
    connector.twenty.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: twenty
        settings:
          type: object
          properties:
            access_token:
              type: string
          required:
            - access_token
      required:
        - connector_name
      title: twenty
    connector.twenty.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: twenty
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: twenty
    connector.twitter.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: twitter
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: twitter
    connector.twitter.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: twitter
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: twitter
    connector.venmo.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: venmo
        settings:
          type: object
          properties:
            me: {}
            credentials: {}
      required:
        - connector_name
      title: venmo
    connector.venmo.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: venmo
        config:
          type: object
          properties:
            v1BaseURL:
              type:
                - string
                - 'null'
            v5BaseURL:
              type:
                - string
                - 'null'
            proxy:
              type:
                - object
                - 'null'
              properties:
                url:
                  type: string
                cert:
                  type: string
              required:
                - url
                - cert
      required:
        - connector_name
        - config
      title: venmo
    connector.wise.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: wise
        settings:
          type: object
          properties:
            envName:
              type: string
              enum:
                - sandbox
                - live
            apiToken:
              type:
                - string
                - 'null'
          required:
            - envName
      required:
        - connector_name
      title: wise
    connector.wise.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: wise
        config:
          type: object
          additionalProperties: false
      required:
        - connector_name
        - config
      title: wise
    connector.xero.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: xero
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
          required:
            - oauth
      required:
        - connector_name
      title: xero
    connector.xero.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: xero
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: xero
    connector.yodlee.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: yodlee
        settings:
          type: object
          properties:
            accessToken:
              type:
                - object
                - 'null'
              properties:
                accessToken:
                  type: string
                issuedAt:
                  type: string
                expiresIn:
                  type: number
              required:
                - accessToken
                - issuedAt
                - expiresIn
            loginName:
              type: string
            providerAccountId:
              anyOf:
                - type: number
                - type: string
            user:
              type: 'null'
            provider:
              type: 'null'
            providerAccount:
              type:
                - object
                - 'null'
              properties:
                aggregationSource:
                  type: string
                createdDate:
                  type: string
                dataset:
                  type: array
                  items: {}
                id:
                  type: number
                isManual:
                  type: boolean
                providerId:
                  type: number
                status:
                  type: string
                  enum:
                    - LOGIN_IN_PROGRESS
                    - USER_INPUT_REQUIRED
                    - IN_PROGRESS
                    - PARTIAL_SUCCESS
                    - SUCCESS
                    - FAILED
                isDeleted:
                  type:
                    - boolean
                    - 'null'
              required:
                - aggregationSource
                - createdDate
                - dataset
                - id
                - isManual
                - providerId
                - status
          required:
            - loginName
            - providerAccountId
      required:
        - connector_name
      title: yodlee
    connector.yodlee.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: yodlee
        config:
          type: object
          properties:
            envName:
              type: string
              enum:
                - sandbox
                - development
                - production
            clientId:
              type: string
            clientSecret:
              type: string
            adminLoginName:
              type: string
            sandboxLoginName:
              type:
                - string
                - 'null'
            proxy:
              type:
                - object
                - 'null'
              properties:
                url:
                  type: string
                cert:
                  type: string
              required:
                - url
                - cert
          required:
            - envName
            - clientId
            - clientSecret
            - adminLoginName
      required:
        - connector_name
        - config
      title: yodlee
    connector.zoho-desk.discriminated_connection_settings:
      type: object
      properties:
        connector_name:
          type: string
          const: zoho-desk
        settings:
          type: object
          properties:
            oauth:
              type: object
              properties:
                credentials:
                  type: object
                  properties:
                    access_token:
                      type: string
                    client_id:
                      type: string
                      description: Client ID used for the connection
                    scope:
                      type: string
                    refresh_token:
                      type: string
                    expires_in:
                      type: number
                    expires_at:
                      type: string
                    token_type:
                      type: string
                    raw:
                      type: object
                      additionalProperties: {}
                  required:
                    - access_token
                  description: Output of the postConnect hook for oauth2 connectors
                created_at:
                  type: string
                updated_at:
                  type: string
                last_fetched_at:
                  type: string
                metadata:
                  type:
                    - object
                    - 'null'
                  additionalProperties: {}
            extension:
              type: string
              pattern: https:\/\/accounts\.zoho\.([a-z.]+)\/
              description: The domain extension of your Zoho account (e.g., https://accounts.zoho.com/)
          required:
            - oauth
            - extension
      required:
        - connector_name
      title: zoho-desk
    connector.zoho-desk.discriminated_connector_config:
      type: object
      properties:
        connector_name:
          type: string
          const: zoho-desk
        config:
          type: object
          properties:
            oauth:
              type:
                - object
                - 'null'
              properties:
                client_id:
                  type:
                    - string
                    - 'null'
                client_secret:
                  type:
                    - string
                    - 'null'
                scopes:
                  type:
                    - array
                    - 'null'
                  items:
                    type: string
                redirect_uri:
                  type:
                    - string
                    - 'null'
                  description: Custom redirect URI
              description: Base oauth configuration for the connector
              ui:field: OAuthField
      required:
        - connector_name
        - config
      title: zoho-desk
    core.connection_select:
      allOf:
        - type: object
          properties:
            id:
              type: string
            customer_id:
              type:
                - string
                - 'null'
            connector_config_id:
              type:
                - string
                - 'null'
            integration_id:
              type:
                - string
                - 'null'
            status_message:
              type:
                - string
                - 'null'
            created_at:
              type: string
            updated_at:
              type: string
            display_name:
              type:
                - string
                - 'null'
            disabled:
              type:
                - boolean
                - 'null'
            status:
              type:
                - string
                - 'null'
              enum:
                - healthy
                - disconnected
                - error
                - manual
                - unknown
                - null
            metadata:
              type:
                - object
                - 'null'
              additionalProperties: {}
              description: |2

                  JSON object can can be used to associate arbitrary metadata to
                  avoid needing a separate 1-1 table just for simple key values in your application.
                  During updates this object will be shallowly merged
          required:
            - id
            - customer_id
            - connector_config_id
            - integration_id
            - created_at
            - updated_at
            - display_name
            - disabled
        - oneOf:
            - $ref: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.aircall.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.confluence.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.discord.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.facebook.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.github.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.gong.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.instagram.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.intercom.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.jira.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.lever.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.linear.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.notion.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.outreach.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.reddit.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.slack.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.twitter.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.xero.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.airtable.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.apollo.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.brex.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.coda.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.finch.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.firebase.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.heron.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.mercury.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.merge.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.moota.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.openledger.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.plaid.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.postgres.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.ramp.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.stripe.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.teller.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.toggl.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.twenty.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.venmo.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.wise.discriminated_connection_settings'
            - $ref: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
          discriminator:
            propertyName: connector_name
            mapping:
              acme-oauth2: '#/components/schemas/connector.acme-oauth2.discriminated_connection_settings'
              aircall: '#/components/schemas/connector.aircall.discriminated_connection_settings'
              confluence: '#/components/schemas/connector.confluence.discriminated_connection_settings'
              discord: '#/components/schemas/connector.discord.discriminated_connection_settings'
              facebook: '#/components/schemas/connector.facebook.discriminated_connection_settings'
              github: '#/components/schemas/connector.github.discriminated_connection_settings'
              gong: '#/components/schemas/connector.gong.discriminated_connection_settings'
              google-calendar: '#/components/schemas/connector.google-calendar.discriminated_connection_settings'
              google-docs: '#/components/schemas/connector.google-docs.discriminated_connection_settings'
              google-drive: '#/components/schemas/connector.google-drive.discriminated_connection_settings'
              google-mail: '#/components/schemas/connector.google-mail.discriminated_connection_settings'
              google-sheet: '#/components/schemas/connector.google-sheet.discriminated_connection_settings'
              hubspot: '#/components/schemas/connector.hubspot.discriminated_connection_settings'
              instagram: '#/components/schemas/connector.instagram.discriminated_connection_settings'
              intercom: '#/components/schemas/connector.intercom.discriminated_connection_settings'
              jira: '#/components/schemas/connector.jira.discriminated_connection_settings'
              lever: '#/components/schemas/connector.lever.discriminated_connection_settings'
              linear: '#/components/schemas/connector.linear.discriminated_connection_settings'
              linkedin: '#/components/schemas/connector.linkedin.discriminated_connection_settings'
              notion: '#/components/schemas/connector.notion.discriminated_connection_settings'
              outreach: '#/components/schemas/connector.outreach.discriminated_connection_settings'
              pipedrive: '#/components/schemas/connector.pipedrive.discriminated_connection_settings'
              quickbooks: '#/components/schemas/connector.quickbooks.discriminated_connection_settings'
              reddit: '#/components/schemas/connector.reddit.discriminated_connection_settings'
              salesloft: '#/components/schemas/connector.salesloft.discriminated_connection_settings'
              sharepoint: '#/components/schemas/connector.sharepoint.discriminated_connection_settings'
              slack: '#/components/schemas/connector.slack.discriminated_connection_settings'
              twitter: '#/components/schemas/connector.twitter.discriminated_connection_settings'
              xero: '#/components/schemas/connector.xero.discriminated_connection_settings'
              zoho-desk: '#/components/schemas/connector.zoho-desk.discriminated_connection_settings'
              airtable: '#/components/schemas/connector.airtable.discriminated_connection_settings'
              apollo: '#/components/schemas/connector.apollo.discriminated_connection_settings'
              brex: '#/components/schemas/connector.brex.discriminated_connection_settings'
              coda: '#/components/schemas/connector.coda.discriminated_connection_settings'
              finch: '#/components/schemas/connector.finch.discriminated_connection_settings'
              firebase: '#/components/schemas/connector.firebase.discriminated_connection_settings'
              foreceipt: '#/components/schemas/connector.foreceipt.discriminated_connection_settings'
              greenhouse: '#/components/schemas/connector.greenhouse.discriminated_connection_settings'
              heron: '#/components/schemas/connector.heron.discriminated_connection_settings'
              lunchmoney: '#/components/schemas/connector.lunchmoney.discriminated_connection_settings'
              mercury: '#/components/schemas/connector.mercury.discriminated_connection_settings'
              merge: '#/components/schemas/connector.merge.discriminated_connection_settings'
              moota: '#/components/schemas/connector.moota.discriminated_connection_settings'
              onebrick: '#/components/schemas/connector.onebrick.discriminated_connection_settings'
              openledger: '#/components/schemas/connector.openledger.discriminated_connection_settings'
              plaid: '#/components/schemas/connector.plaid.discriminated_connection_settings'
              postgres: '#/components/schemas/connector.postgres.discriminated_connection_settings'
              ramp: '#/components/schemas/connector.ramp.discriminated_connection_settings'
              saltedge: '#/components/schemas/connector.saltedge.discriminated_connection_settings'
              splitwise: '#/components/schemas/connector.splitwise.discriminated_connection_settings'
              stripe: '#/components/schemas/connector.stripe.discriminated_connection_settings'
              teller: '#/components/schemas/connector.teller.discriminated_connection_settings'
              toggl: '#/components/schemas/connector.toggl.discriminated_connection_settings'
              twenty: '#/components/schemas/connector.twenty.discriminated_connection_settings'
              venmo: '#/components/schemas/connector.venmo.discriminated_connection_settings'
              wise: '#/components/schemas/connector.wise.discriminated_connection_settings'
              yodlee: '#/components/schemas/connector.yodlee.discriminated_connection_settings'
          description: Connector specific data
      title: connection_select
    core.connector:
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
        logo_url:
          type: string
        stage:
          type: string
          enum:
            - alpha
            - beta
            - ga
            - hidden
        platforms:
          type: array
          items:
            type: string
            enum:
              - web
              - mobile
              - desktop
              - local
              - cloud
        schemas:
          type: object
          properties:
            connector_config: {}
            connection_settings: {}
            integration_data: {}
            webhook_input: {}
            pre_connect_input: {}
            connect_input: {}
            connect_output: {}
          additionalProperties: false
        auth_type:
          type: string
          enum:
            - BASIC
            - OAUTH1
            - OAUTH2
            - OAUTH2CC
            - API_KEY
            - CUSTOM
        openint_scopes:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            type: object
            properties:
              scope:
                type: string
              display_name:
                type: string
              description:
                type: string
            required:
              - scope
        has_openint_credentials:
          type: boolean
      required:
        - name
      title: Connector
    core.connector.name:
      type: string
      enum:
        - acme-oauth2
        - aircall
        - airtable
        - apollo
        - brex
        - coda
        - confluence
        - discord
        - facebook
        - finch
        - firebase
        - foreceipt
        - github
        - gong
        - google-calendar
        - google-docs
        - google-drive
        - google-mail
        - google-sheet
        - greenhouse
        - heron
        - hubspot
        - instagram
        - intercom
        - jira
        - lever
        - linear
        - linkedin
        - lunchmoney
        - mercury
        - merge
        - moota
        - notion
        - onebrick
        - openledger
        - outreach
        - pipedrive
        - plaid
        - postgres
        - quickbooks
        - ramp
        - reddit
        - salesloft
        - saltedge
        - sharepoint
        - slack
        - splitwise
        - stripe
        - teller
        - toggl
        - twenty
        - twitter
        - venmo
        - wise
        - xero
        - yodlee
        - zoho-desk
      title: connector
    core.integration_select:
      type: object
      properties:
        id:
          type: string
        standard:
          anyOf:
            - anyOf:
                - type: string
                - type: number
                - type: boolean
                - type: 'null'
            - type: object
              additionalProperties: {}
            - type: array
              items: {}
        external:
          anyOf:
            - anyOf:
                - type: string
                - type: number
                - type: boolean
                - type: 'null'
            - type: object
              additionalProperties: {}
            - type: array
              items: {}
        created_at:
          type: string
        updated_at:
          type: string
        connector_name:
          $ref: '#/components/schemas/core.connector.name'
        name:
          type: string
        logo_url:
          type:
            - string
            - 'null'
        stage:
          type:
            - string
            - 'null'
          enum:
            - alpha
            - beta
            - ga
            - null
        platforms:
          type:
            - array
            - 'null'
          items:
            type: string
            enum:
              - web
              - mobile
              - desktop
        category:
          type:
            - string
            - 'null'
        auth_type:
          type:
            - string
            - 'null'
        version:
          type:
            - string
            - 'null'
      required:
        - id
        - standard
        - external
        - created_at
        - updated_at
        - connector_name
        - name
      title: integration_select
    error.BAD_REQUEST:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Invalid input data
        code:
          type: string
          description: The error code
          example: BAD_REQUEST
        issues:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: An array of issues that were responsible for the error
          example: []
      required:
        - message
        - code
      title: Invalid input data error (400)
      description: The error information
      example:
        code: BAD_REQUEST
        message: Invalid input data
        issues: []
    error.FORBIDDEN:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Insufficient access
        code:
          type: string
          description: The error code
          example: FORBIDDEN
        issues:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: An array of issues that were responsible for the error
          example: []
      required:
        - message
        - code
      title: Insufficient access error (403)
      description: The error information
      example:
        code: FORBIDDEN
        message: Insufficient access
        issues: []
    error.INTERNAL_SERVER_ERROR:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Internal server error
        code:
          type: string
          description: The error code
          example: INTERNAL_SERVER_ERROR
        issues:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: An array of issues that were responsible for the error
          example: []
      required:
        - message
        - code
      title: Internal server error error (500)
      description: The error information
      example:
        code: INTERNAL_SERVER_ERROR
        message: Internal server error
        issues: []
    error.NOT_FOUND:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Not found
        code:
          type: string
          description: The error code
          example: NOT_FOUND
        issues:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: An array of issues that were responsible for the error
          example: []
      required:
        - message
        - code
      title: Not found error (404)
      description: The error information
      example:
        code: NOT_FOUND
        message: Not found
        issues: []
    error.UNAUTHORIZED:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Authorization not provided
        code:
          type: string
          description: The error code
          example: UNAUTHORIZED
        issues:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          description: An array of issues that were responsible for the error
          example: []
      required:
        - message
        - code
      title: Authorization not provided error (401)
      description: The error information
      example:
        code: UNAUTHORIZED
        message: Authorization not provided
        issues: []
